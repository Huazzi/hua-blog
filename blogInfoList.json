[{"title":"AnZhiYu主题todayCard调用今日诗词","content":"<h2 id=\"预期实现的功能\"><a class=\"markdownIt-Anchor\" href=\"#预期实现的功能\"></a> 预期实现的功能</h2>\n<p>在AnZhiYu主题中的首页顶部右侧（todayCard）的tittle文案调用今日诗词API，以自动显示诗词。</p>\n<p><img src=\"https://cbc25ff.webp.li/todayCard.png\" alt=\"效果图\" /></p>\n<h2 id=\"实现方式\"><a class=\"markdownIt-Anchor\" href=\"#实现方式\"></a> 实现方式</h2>\n<p>可以通过「外部注入」的方式实现这个功能，而不需要修改原项目的代码。这样可以避免对原项目造成任何不必要的改动，降低引起其他问题的风险。</p>\n<p>以下是一个使用外部注入方式的解决方案，可以将它作为一个独立的脚本添加到你的网站：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 创建今日诗词注入功能</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title function_\">injectTodayPoetry</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 检查todayCard-title元素是否存在</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> <span class=\"title function_\">checkAndUpdatePoetry</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> todayCardTitle = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;.todayCard-title&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (todayCardTitle) &#123;</span><br><span class=\"line\">                <span class=\"title function_\">fetchAndUpdatePoetry</span>(todayCardTitle);</span><br><span class=\"line\">                <span class=\"comment\">// 监听卡片的显示状态变化</span></span><br><span class=\"line\">                <span class=\"title function_\">observeTodayCard</span>();</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 从今日诗词API获取内容并更新</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> <span class=\"title function_\">fetchAndUpdatePoetry</span> = (<span class=\"params\">titleElement</span>) =&gt; &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 记录原始文本，以便在API调用失败时可以恢复</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> originalText = titleElement.<span class=\"property\">innerText</span>;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">// 如果元素已经有诗词标记属性，跳过更新</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (titleElement.<span class=\"title function_\">getAttribute</span>(<span class=\"string\">&#x27;data-poetry-injected&#x27;</span>)) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"title function_\">fetch</span>(<span class=\"string\">&#x27;https://v1.jinrishici.com/all&#x27;</span>)</span><br><span class=\"line\">                .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> response.<span class=\"title function_\">json</span>())</span><br><span class=\"line\">                .<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// 清空原有内容</span></span><br><span class=\"line\">                    titleElement.<span class=\"property\">innerHTML</span> = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">                    </span><br><span class=\"line\">                    <span class=\"comment\">// 添加诗词内容</span></span><br><span class=\"line\">                    <span class=\"keyword\">const</span> poetryContent = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;div&#x27;</span>);</span><br><span class=\"line\">                    poetryContent.<span class=\"property\">textContent</span> = data.<span class=\"property\">content</span>;</span><br><span class=\"line\">                    poetryContent.<span class=\"property\">style</span>.<span class=\"property\">fontSize</span> = <span class=\"string\">&quot;1em&quot;</span>;</span><br><span class=\"line\">                    poetryContent.<span class=\"property\">style</span>.<span class=\"property\">lineHeight</span> = <span class=\"string\">&quot;1.5&quot;</span>;</span><br><span class=\"line\">                    titleElement.<span class=\"title function_\">appendChild</span>(poetryContent);</span><br><span class=\"line\">                    </span><br><span class=\"line\">                    <span class=\"comment\">// 添加来源信息</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (data.<span class=\"property\">author</span> &amp;&amp; data.<span class=\"property\">origin</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">const</span> sourceInfo = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&quot;div&quot;</span>);</span><br><span class=\"line\">                        sourceInfo.<span class=\"property\">textContent</span> = <span class=\"string\">`—— <span class=\"subst\">$&#123;data.author&#125;</span>《<span class=\"subst\">$&#123;data.origin&#125;</span>》`</span>;</span><br><span class=\"line\">                        sourceInfo.<span class=\"property\">style</span>.<span class=\"property\">fontSize</span> = <span class=\"string\">&quot;0.8em&quot;</span>;</span><br><span class=\"line\">                        sourceInfo.<span class=\"property\">style</span>.<span class=\"property\">opacity</span> = <span class=\"string\">&quot;0.8&quot;</span>;</span><br><span class=\"line\">                        sourceInfo.<span class=\"property\">style</span>.<span class=\"property\">marginTop</span> = <span class=\"string\">&quot;8px&quot;</span>;</span><br><span class=\"line\">                        sourceInfo.<span class=\"property\">style</span>.<span class=\"property\">textAlign</span> = <span class=\"string\">&quot;right&quot;</span>;</span><br><span class=\"line\">                        titleElement.<span class=\"title function_\">appendChild</span>(sourceInfo);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    </span><br><span class=\"line\">                    <span class=\"comment\">// 标记为已注入诗词</span></span><br><span class=\"line\">                    titleElement.<span class=\"title function_\">setAttribute</span>(<span class=\"string\">&#x27;data-poetry-injected&#x27;</span>, <span class=\"string\">&#x27;true&#x27;</span>);</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">                .<span class=\"title function_\">catch</span>(<span class=\"function\"><span class=\"params\">error</span> =&gt;</span> &#123;</span><br><span class=\"line\">                    <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(<span class=\"string\">&#x27;获取今日诗词失败:&#x27;</span>, error);</span><br><span class=\"line\">                    titleElement.<span class=\"property\">textContent</span> = originalText; <span class=\"comment\">// 恢复原始文本</span></span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 监听todayCard的显示/隐藏状态</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> <span class=\"title function_\">observeTodayCard</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> todayCard = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;todayCard&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!todayCard) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">// 使用MutationObserver监听类名变化</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> observer = <span class=\"keyword\">new</span> <span class=\"title class_\">MutationObserver</span>(<span class=\"function\">(<span class=\"params\">mutations</span>) =&gt;</span> &#123;</span><br><span class=\"line\">                mutations.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">mutation</span>) =&gt;</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (mutation.<span class=\"property\">attributeName</span> === <span class=\"string\">&#x27;class&#x27;</span>) &#123;</span><br><span class=\"line\">                        <span class=\"comment\">// 当卡片从隐藏变为显示时更新诗词</span></span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (!todayCard.<span class=\"property\">classList</span>.<span class=\"title function_\">contains</span>(<span class=\"string\">&#x27;hide&#x27;</span>)) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">const</span> titleElement = todayCard.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.todayCard-title&#x27;</span>);</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (titleElement) &#123;</span><br><span class=\"line\">                                <span class=\"comment\">// 移除已注入标记，以便重新获取诗词</span></span><br><span class=\"line\">                                titleElement.<span class=\"title function_\">removeAttribute</span>(<span class=\"string\">&#x27;data-poetry-injected&#x27;</span>);</span><br><span class=\"line\">                                <span class=\"title function_\">fetchAndUpdatePoetry</span>(titleElement);</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">// 开始监听</span></span><br><span class=\"line\">            observer.<span class=\"title function_\">observe</span>(todayCard, &#123; <span class=\"attr\">attributes</span>: <span class=\"literal\">true</span> &#125;);</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 尝试立即更新，如果元素还未加载，则设置重试</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"title function_\">checkAndUpdatePoetry</span>()) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 如果元素还未加载，等待DOM变化后再尝试</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> bodyObserver = <span class=\"keyword\">new</span> <span class=\"title class_\">MutationObserver</span>(<span class=\"function\">(<span class=\"params\">mutations, observer</span>) =&gt;</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"title function_\">checkAndUpdatePoetry</span>()) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// 找到并更新后，停止观察</span></span><br><span class=\"line\">                    observer.<span class=\"title function_\">disconnect</span>();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">// 观察DOM变化</span></span><br><span class=\"line\">            bodyObserver.<span class=\"title function_\">observe</span>(<span class=\"variable language_\">document</span>.<span class=\"property\">body</span>, &#123;</span><br><span class=\"line\">                <span class=\"attr\">childList</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                <span class=\"attr\">subtree</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">// 设置超时，防止无限等待</span></span><br><span class=\"line\">            <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">                bodyObserver.<span class=\"title function_\">disconnect</span>();</span><br><span class=\"line\">            &#125;, <span class=\"number\">10000</span>); <span class=\"comment\">// 10秒后停止尝试</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 页面加载完成后执行注入</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"property\">readyState</span> === <span class=\"string\">&#x27;loading&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;DOMContentLoaded&#x27;</span>, injectTodayPoetry);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">injectTodayPoetry</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n<h3 id=\"如何使用这段代码\"><a class=\"markdownIt-Anchor\" href=\"#如何使用这段代码\"></a> 如何使用这段代码：</h3>\n<ol>\n<li>\n<p><strong>作为独立JavaScript文件</strong>：</p>\n<ul>\n<li>\n<p>将这段代码保存为一个独立的JS文件（例如<code>poetry-injector.js</code>）</p>\n</li>\n<li>\n<p>在网站的HTML中使用</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br></pre></td></tr></table></figure>\n<p>标签引入：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;path/to/poetry-injector.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>作为书签脚本</strong>：</p>\n<ul>\n<li>\n<p>创建一个新的浏览器书签</p>\n</li>\n<li>\n<p>将书签的URL设置为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javascript:(function()&#123;const s=document.createElement(&#x27;script&#x27;);s.textContent=&#x27;这里粘贴上面的代码&#x27;;document.body.appendChild(s);&#125;)();</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>每当你想激活这个功能时，点击这个书签</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>使用浏览器扩展</strong>：</p>\n<ul>\n<li>如Chrome的Tampermonkey或Firefox的Greasemonkey</li>\n<li>创建一个新脚本，粘贴上面的代码</li>\n<li>设置脚本仅在你的网站上运行</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"代码的工作原理\"><a class=\"markdownIt-Anchor\" href=\"#代码的工作原理\"></a> 代码的工作原理：</h3>\n<ol>\n<li>它以无侵入的方式查找并修改<code>.todayCard-title</code>元素</li>\n<li>使用<code>MutationObserver</code>监听DOM变化，确保即使元素延迟加载也能被处理</li>\n<li>当卡片从隐藏变为显示状态时，自动更新诗词内容</li>\n<li>采用标记机制避免重复请求API</li>\n<li>发生错误时会恢复原始内容，保证不会破坏页面显示</li>\n</ol>\n<p>这种方法的优势是完全不修改原项目代码，并能适应各种情况，包括卡片隐藏/显示的状态变化。</p>\n","isPage":false,"isDraft":false,"permalink":"https://blog.huazzi.site/posts/4357.html"},{"title":"Docker安装","content":"<blockquote>\n<p>参考教程：<a href=\"https://www.mliev.com/docs/1ms.run/install-docker\">https://www.mliev.com/docs/1ms.run/install-docker</a></p>\n</blockquote>\n<h2 id=\"1-docker安装\"><a class=\"markdownIt-Anchor\" href=\"#1-docker安装\"></a> 1. Docker安装</h2>\n<h3 id=\"一键安装\"><a class=\"markdownIt-Anchor\" href=\"#一键安装\"></a> 一键安装</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash &lt;(curl -f -s --connect-timeout 10 --retry 3 https://linuxmirrors.cn/docker.sh) --<span class=\"built_in\">source</span> mirrors.tencent.com/docker-ce --source-registry docker.1ms.run --protocol https --install-latested <span class=\"literal\">true</span> --close-firewall <span class=\"literal\">false</span> --ignore-backup-tips</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-docker-compose安装\"><a class=\"markdownIt-Anchor\" href=\"#2-docker-compose安装\"></a> 2. Docker Compose安装</h2>\n<h3 id=\"国内安装速度超快\"><a class=\"markdownIt-Anchor\" href=\"#国内安装速度超快\"></a> 国内安装（速度超快）</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> curl -L <span class=\"string\">&quot;https://ghproxy.cc/https://github.com/docker/compose/releases/latest/download/docker-compose-<span class=\"subst\">$(uname -s)</span>-<span class=\"subst\">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">ln</span> -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span><br></pre></td></tr></table></figure>\n<h3 id=\"普通安装速度超慢\"><a class=\"markdownIt-Anchor\" href=\"#普通安装速度超慢\"></a> 普通安装（速度超慢）</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> curl -L <span class=\"string\">&quot;https://github.com/docker/compose/releases/latest/download/docker-compose-<span class=\"subst\">$(uname -s)</span>-<span class=\"subst\">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">ln</span> -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span><br></pre></td></tr></table></figure>\n","isPage":false,"isDraft":false,"permalink":"https://blog.huazzi.site/posts/41070.html"},{"title":"Docker命令","content":"<p>在 Docker 中查看容器、镜像、网络等状态的常用命令：</p>\n<hr />\n<h3 id=\"1-查看容器状态\"><a class=\"markdownIt-Anchor\" href=\"#1-查看容器状态\"></a> <strong>1. 查看容器状态</strong></h3>\n<h4 id=\"1-列出正在运行的容器\"><a class=\"markdownIt-Anchor\" href=\"#1-列出正在运行的容器\"></a> <strong>① 列出正在运行的容器</strong></h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-列出所有容器包括已停止的\"><a class=\"markdownIt-Anchor\" href=\"#2-列出所有容器包括已停止的\"></a> <strong>② 列出所有容器（包括已停止的）</strong></h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps -a</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-显示容器的实时资源占用\"><a class=\"markdownIt-Anchor\" href=\"#3-显示容器的实时资源占用\"></a> <strong>③ 显示容器的实时资源占用</strong></h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker stats</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-查看单个容器的详细信息\"><a class=\"markdownIt-Anchor\" href=\"#4-查看单个容器的详细信息\"></a> <strong>④ 查看单个容器的详细信息</strong></h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker inspect &lt;容器ID或名称&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-查看容器的日志\"><a class=\"markdownIt-Anchor\" href=\"#5-查看容器的日志\"></a> <strong>⑤ 查看容器的日志</strong></h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker logs &lt;容器ID或名称&gt;</span><br><span class=\"line\"><span class=\"comment\"># 实时跟踪日志</span></span><br><span class=\"line\">docker logs -f &lt;容器ID或名称&gt;</span><br></pre></td></tr></table></figure>\n<hr />\n<h3 id=\"2-查看镜像状态\"><a class=\"markdownIt-Anchor\" href=\"#2-查看镜像状态\"></a> <strong>2. 查看镜像状态</strong></h3>\n<h4 id=\"1-列出本地所有镜像\"><a class=\"markdownIt-Anchor\" href=\"#1-列出本地所有镜像\"></a> <strong>① 列出本地所有镜像</strong></h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker images</span><br><span class=\"line\"><span class=\"comment\"># 显示镜像ID（简短形式）</span></span><br><span class=\"line\">docker images -q</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-查看镜像的构建历史\"><a class=\"markdownIt-Anchor\" href=\"#2-查看镜像的构建历史\"></a> <strong>② 查看镜像的构建历史</strong></h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker <span class=\"built_in\">history</span> &lt;镜像名&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-检查镜像的详细信息\"><a class=\"markdownIt-Anchor\" href=\"#3-检查镜像的详细信息\"></a> <strong>③ 检查镜像的详细信息</strong></h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker inspect &lt;镜像ID或名称&gt;</span><br></pre></td></tr></table></figure>\n<hr />\n<h3 id=\"3-查看网络状态\"><a class=\"markdownIt-Anchor\" href=\"#3-查看网络状态\"></a> <strong>3. 查看网络状态</strong></h3>\n<h4 id=\"1-列出所有网络\"><a class=\"markdownIt-Anchor\" href=\"#1-列出所有网络\"></a> <strong>① 列出所有网络</strong></h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker network <span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2-查看网络详细信息\"><a class=\"markdownIt-Anchor\" href=\"#2-查看网络详细信息\"></a> <strong>② 查看网络详细信息</strong></h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker network inspect &lt;网络名或ID&gt;</span><br></pre></td></tr></table></figure>\n<hr />\n<h3 id=\"4-查看数据卷状态\"><a class=\"markdownIt-Anchor\" href=\"#4-查看数据卷状态\"></a> <strong>4. 查看数据卷状态</strong></h3>\n<h4 id=\"1-列出所有数据卷\"><a class=\"markdownIt-Anchor\" href=\"#1-列出所有数据卷\"></a> <strong>① 列出所有数据卷</strong></h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker volume <span class=\"built_in\">ls</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2-查看数据卷详细信息\"><a class=\"markdownIt-Anchor\" href=\"#2-查看数据卷详细信息\"></a> <strong>② 查看数据卷详细信息</strong></h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker volume inspect &lt;卷名&gt;</span><br></pre></td></tr></table></figure>\n<hr />\n<h3 id=\"5-查看-docker-系统信息\"><a class=\"markdownIt-Anchor\" href=\"#5-查看-docker-系统信息\"></a> <strong>5. 查看 Docker 系统信息</strong></h3>\n<h4 id=\"1-docker-版本和系统信息\"><a class=\"markdownIt-Anchor\" href=\"#1-docker-版本和系统信息\"></a> <strong>① Docker 版本和系统信息</strong></h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker version     <span class=\"comment\"># 版本信息</span></span><br><span class=\"line\">docker info       <span class=\"comment\"># 系统级信息（存储驱动、容器数量等）</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2-显示磁盘使用情况\"><a class=\"markdownIt-Anchor\" href=\"#2-显示磁盘使用情况\"></a> <strong>② 显示磁盘使用情况</strong></h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker system <span class=\"built_in\">df</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"3-查看构建缓存\"><a class=\"markdownIt-Anchor\" href=\"#3-查看构建缓存\"></a> <strong>③ 查看构建缓存</strong></h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker builder prune --dry-run</span><br></pre></td></tr></table></figure>\n<hr />\n<h3 id=\"6-常用组合命令\"><a class=\"markdownIt-Anchor\" href=\"#6-常用组合命令\"></a> <strong>6. 常用组合命令</strong></h3>\n<h4 id=\"1-格式化输出容器列表\"><a class=\"markdownIt-Anchor\" href=\"#1-格式化输出容器列表\"></a> <strong>① 格式化输出容器列表</strong></h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps --format <span class=\"string\">&quot;table &#123;&#123;.ID&#125;&#125;\\t&#123;&#123;.Names&#125;&#125;\\t&#123;&#123;.Status&#125;&#125;&quot;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2-显示所有容器的端口映射\"><a class=\"markdownIt-Anchor\" href=\"#2-显示所有容器的端口映射\"></a> <strong>② 显示所有容器的端口映射</strong></h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps --format <span class=\"string\">&quot;table &#123;&#123;.Names&#125;&#125;\\t&#123;&#123;.Ports&#125;&#125;&quot;</span></span><br></pre></td></tr></table></figure>\n<hr />\n<h3 id=\"7-状态筛选与过滤\"><a class=\"markdownIt-Anchor\" href=\"#7-状态筛选与过滤\"></a> <strong>7. 状态筛选与过滤</strong></h3>\n<h4 id=\"1-按状态过滤容器\"><a class=\"markdownIt-Anchor\" href=\"#1-按状态过滤容器\"></a> <strong>① 按状态过滤容器</strong></h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps -f <span class=\"string\">&quot;status=exited&quot;</span>   <span class=\"comment\"># 显示已停止的容器</span></span><br><span class=\"line\">docker ps -f <span class=\"string\">&quot;name=web&quot;</span>        <span class=\"comment\"># 按名称筛选</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2-按标签筛选\"><a class=\"markdownIt-Anchor\" href=\"#2-按标签筛选\"></a> <strong>② 按标签筛选</strong></h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps -f <span class=\"string\">&quot;label=env=prod&quot;</span></span><br></pre></td></tr></table></figure>\n<hr />\n<h3 id=\"8-问题排查命令\"><a class=\"markdownIt-Anchor\" href=\"#8-问题排查命令\"></a> <strong>8. 问题排查命令</strong></h3>\n<table>\n<thead>\n<tr>\n<th>问题场景</th>\n<th>命令</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>容器启动失败</td>\n<td><code>docker logs &lt;容器ID&gt;</code></td>\n</tr>\n<tr>\n<td>检查容器内进程</td>\n<td><code>docker top &lt;容器ID&gt;</code></td>\n</tr>\n<tr>\n<td>查看容器文件改动</td>\n<td><code>docker diff &lt;容器ID&gt;</code></td>\n</tr>\n<tr>\n<td>容器资源限制</td>\n<td><code>docker stats &lt;容器ID&gt;</code></td>\n</tr>\n<tr>\n<td>网络连通性测试</td>\n<td><code>docker exec -it &lt;容器ID&gt; ping &lt;目标IP&gt;</code></td>\n</tr>\n</tbody>\n</table>\n<hr />\n<h3 id=\"9-示例输出解读\"><a class=\"markdownIt-Anchor\" href=\"#9-示例输出解读\"></a> <strong>9. 示例输出解读</strong></h3>\n<h4 id=\"docker-ps-输出示例\"><a class=\"markdownIt-Anchor\" href=\"#docker-ps-输出示例\"></a> <strong><code>docker ps</code> 输出示例</strong></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONTAINER ID   IMAGE          COMMAND       STATUS        PORTS                    NAMES</span><br><span class=\"line\">a1b2c3d4e5f6   nginx:latest   &quot;nginx -g&quot;    Up 2 hours    0.0.0.0:8080-&gt;80/tcp     web-server</span><br></pre></td></tr></table></figure>\n<ul>\n<li><strong>STATUS 字段</strong>：\n<ul>\n<li><code>Up</code>：运行中</li>\n<li><code>Exited</code>：已停止</li>\n<li><code>Restarting</code>：重启中</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"docker-stats-输出示例\"><a class=\"markdownIt-Anchor\" href=\"#docker-stats-输出示例\"></a> <strong><code>docker stats</code> 输出示例</strong></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONTAINER ID   CPU %   MEM USAGE / LIMIT     MEM %   NET I/O       BLOCK I/O   PIDS</span><br><span class=\"line\">a1b2c3d4e5f6   0.5%    50MiB / 1.944GiB     2.51%   1.2kB / 0B    0B / 0B     3</span><br></pre></td></tr></table></figure>\n<hr />\n<p>通过以上命令，你可以全面掌握 Docker 中各类资源的状态。如果需要更详细的信息，结合 <code>docker inspect</code> 和日志分析是关键！</p>\n","isPage":false,"isDraft":false,"permalink":"https://blog.huazzi.site/posts/36478.html"},{"title":"Fluid主题背景图全屏化与切换","content":"<div class=\"note info flat\"><p>对Hexo+Fluid博客进行一些样式改造，主要包括以下三个方面：</p>\n<ol>\n<li>固定背景图</li>\n<li>切换颜色主题切换不同背景图</li>\n<li>文字主板毛玻璃效果</li>\n</ol>\n<p><em>参考文章：</em></p>\n<ul>\n<li><strong>4rozeN</strong>的「<a href=\"https://4rozen.github.io/archives/Hexo/60191.html\">fluid 全屏背景图随日夜模式切换和正文底页毛玻璃效果</a>」</li>\n<li><strong>清山</strong>的「<a href=\"https://qingshaner.com/Hexo%20Fluid%E4%B8%BB%E9%A2%98%E8%83%8C%E6%99%AF%E5%9B%BA%E5%AE%9A(ES6%E6%94%B9%E5%86%99%E7%89%88)%E4%B8%8E%E6%AF%9B%E7%8E%BB%E7%92%83%E5%BA%95%E9%A1%B5/\">Hexo Fluid主题背景固定(ES6改写版)与毛玻璃底页</a>」</li>\n</ul>\n</div>\n<h2 id=\"1-固定背景图\"><a class=\"markdownIt-Anchor\" href=\"#1-固定背景图\"></a> 1. 固定背景图</h2>\n<p>使用Fluid主题的**<a href=\"https://fluid-dev.github.io/hexo-fluid-docs/advance/#fluid-%E6%B3%A8%E5%85%A5%E4%BB%A3%E7%A0%81\">注入代码</a>**功能，实现无代码侵入地为博客添加样式：</p>\n<ul>\n<li>在博客根目录下新建一个<code>scripts</code>文件夹，再在这个文件夹中新建一个<code>injector.js</code>文件：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">blog_root/--</span><br><span class=\"line\">\t\t |</span><br><span class=\"line\">\t\t |--scripts/--</span><br><span class=\"line\">\t\t           |</span><br><span class=\"line\">\t\t \t       |--injector.js</span><br></pre></td></tr></table></figure>\n<ul>\n<li>编写<code>injector.js</code>内容：</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 注入背景容器</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; <span class=\"attr\">root</span>: siteRoot = <span class=\"string\">&quot;/&quot;</span> &#125; = hexo.<span class=\"property\">config</span>;</span><br><span class=\"line\">hexo.<span class=\"property\">extend</span>.<span class=\"property\">injector</span>.<span class=\"title function_\">register</span>(<span class=\"string\">&quot;body_begin&quot;</span>, <span class=\"string\">`&lt;div id=&quot;web_bg&quot;&gt;&lt;/div&gt;`</span>);</span><br><span class=\"line\">hexo.<span class=\"property\">extend</span>.<span class=\"property\">injector</span>.<span class=\"title function_\">register</span>(<span class=\"string\">&quot;body_end&quot;</span>,<span class=\"string\">`&lt;script src=&quot;<span class=\"subst\">$&#123;siteRoot&#125;</span>js/backgroundize.js&quot;&gt;&lt;/script&gt;`</span>);</span><br></pre></td></tr></table></figure>\n<p>这两步就能够实现固定背景图的功能了。</p>\n<blockquote>\n<p>由于是使用了<strong>注入代码</strong>功能，上面这个JS文件不用像在<code>source/js/</code>下的js文件那样，还需在主题配置文件<code>_config.fluid.yml</code>中加入<code>- /js/name.js</code>引用。</p>\n</blockquote>\n<h2 id=\"2切换颜色主题自动更换背景图\"><a class=\"markdownIt-Anchor\" href=\"#2切换颜色主题自动更换背景图\"></a> 2.切换颜色主题自动更换背景图</h2>\n<blockquote>\n<p>这步我是参照<strong>4rozeN</strong>的<a href=\"https://4rozen.github.io/archives/Hexo/60191.html\">fluid 全屏背景图随日夜模式切换和正文底页毛玻璃效果</a>进行实现的，（也可能是我自己在照做的过程中与原文有出入），我完全按照原文操作之后发现并没有达到预期的效果，点击切换颜色主题之后背景图并没有随着发生变化。</p>\n</blockquote>\n<p>在原来的基础上进行一些改动之后能实现预期效果了，并在原来的基础上进行功能改进：</p>\n<ul>\n<li><strong>改进功能</strong>：<em>原来只能实现一个颜色主题只能使用一张背景，这里进一步实现了不同颜色主题的不同页面的可以设置不同的背景图片。</em></li>\n<li><strong>缺点</strong>：增加了代码量，会拖慢速度。</li>\n</ul>\n<p><strong>具体实现</strong></p>\n<p>（1）在 <code>source/js</code>目录中新建背景修改 <code>backgroundize.js</code> 文件，我的代码内容如下（没有添加代码折叠，所以会比较占地方）：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Fluid主题日夜模式和页面类型背景切换</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义不同页面类型和主题模式下的背景图片</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">BACKGROUNDS</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">home</span>: &#123; <span class=\"attr\">light</span>: &#123;&#125;, <span class=\"attr\">dark</span>: &#123;&#125; &#125;,</span><br><span class=\"line\">  <span class=\"attr\">post</span>: &#123; <span class=\"attr\">light</span>: &#123;&#125;, <span class=\"attr\">dark</span>: &#123;&#125; &#125;,</span><br><span class=\"line\">  <span class=\"attr\">archive</span>: &#123; <span class=\"attr\">light</span>: &#123;&#125;, <span class=\"attr\">dark</span>: &#123;&#125; &#125;,</span><br><span class=\"line\">  <span class=\"attr\">category</span>: &#123; <span class=\"attr\">light</span>: &#123;&#125;, <span class=\"attr\">dark</span>: &#123;&#125; &#125;,</span><br><span class=\"line\">  <span class=\"attr\">tag</span>: &#123; <span class=\"attr\">light</span>: &#123;&#125;, <span class=\"attr\">dark</span>: &#123;&#125; &#125;,</span><br><span class=\"line\">  <span class=\"attr\">about</span>: &#123; <span class=\"attr\">light</span>: &#123;&#125;, <span class=\"attr\">dark</span>: &#123;&#125; &#125;,</span><br><span class=\"line\">  <span class=\"attr\">links</span>: &#123; <span class=\"attr\">light</span>: &#123;&#125;, <span class=\"attr\">dark</span>: &#123;&#125; &#125;,</span><br><span class=\"line\">  <span class=\"attr\">default</span>: &#123; <span class=\"attr\">light</span>: &#123;&#125;, <span class=\"attr\">dark</span>: &#123;&#125; &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 为每个配置添加桌面和移动设备属性</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> page <span class=\"keyword\">in</span> <span class=\"variable constant_\">BACKGROUNDS</span>) &#123;</span><br><span class=\"line\">  <span class=\"variable constant_\">BACKGROUNDS</span>[page].<span class=\"property\">light</span>.<span class=\"property\">desktop</span> = <span class=\"string\">`var(--<span class=\"subst\">$&#123;page&#125;</span>-bg-image-light)`</span>;</span><br><span class=\"line\">  <span class=\"variable constant_\">BACKGROUNDS</span>[page].<span class=\"property\">light</span>.<span class=\"property\">mobile</span> = <span class=\"string\">`var(--<span class=\"subst\">$&#123;page&#125;</span>-bg-image-light-mobile)`</span>;</span><br><span class=\"line\">  <span class=\"variable constant_\">BACKGROUNDS</span>[page].<span class=\"property\">dark</span>.<span class=\"property\">desktop</span> = <span class=\"string\">`var(--<span class=\"subst\">$&#123;page&#125;</span>-bg-image-dark)`</span>;</span><br><span class=\"line\">  <span class=\"variable constant_\">BACKGROUNDS</span>[page].<span class=\"property\">dark</span>.<span class=\"property\">mobile</span> = <span class=\"string\">`var(--<span class=\"subst\">$&#123;page&#125;</span>-bg-image-dark-mobile)`</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 缓存DOM元素和状态</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> cachedThemeMode = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> cachedPageType = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> cachedIsMobile = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> webBgElement = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> updateTimeout = <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 检测当前的主题模式</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">detectThemeMode</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> storedTheme = <span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&#x27;Fluid_Color_Scheme&#x27;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> isDarkClass = <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">classList</span>.<span class=\"title function_\">contains</span>(<span class=\"string\">&#x27;dark-mode&#x27;</span>) || </span><br><span class=\"line\">                      <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">classList</span>.<span class=\"title function_\">contains</span>(<span class=\"string\">&#x27;dark&#x27;</span>) ||</span><br><span class=\"line\">                      <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">classList</span>.<span class=\"title function_\">contains</span>(<span class=\"string\">&#x27;dark&#x27;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> prefersDark = <span class=\"variable language_\">window</span>.<span class=\"title function_\">matchMedia</span>(<span class=\"string\">&#x27;(prefers-color-scheme: dark)&#x27;</span>).<span class=\"property\">matches</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> (storedTheme === <span class=\"string\">&#x27;dark&#x27;</span> || (storedTheme === <span class=\"literal\">null</span> &amp;&amp; isDarkClass) || </span><br><span class=\"line\">         (storedTheme === <span class=\"literal\">null</span> &amp;&amp; !isDarkClass &amp;&amp; prefersDark)) ? <span class=\"string\">&#x27;dark&#x27;</span> : <span class=\"string\">&#x27;light&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 检测当前页面类型</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">detectPageType</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> path = <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">pathname</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> bodyClasses = <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">classList</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 基于URL路径检测</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (path === <span class=\"string\">&#x27;/&#x27;</span> || path === <span class=\"string\">&#x27;/index.html&#x27;</span>) <span class=\"keyword\">return</span> <span class=\"string\">&#x27;home&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (path.<span class=\"title function_\">includes</span>(<span class=\"string\">&#x27;/post/&#x27;</span>) || path.<span class=\"title function_\">includes</span>(<span class=\"string\">&#x27;/posts/&#x27;</span>) || path.<span class=\"title function_\">includes</span>(<span class=\"string\">&#x27;/article/&#x27;</span>)) <span class=\"keyword\">return</span> <span class=\"string\">&#x27;post&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (path.<span class=\"title function_\">includes</span>(<span class=\"string\">&#x27;/archives/&#x27;</span>) || path.<span class=\"title function_\">includes</span>(<span class=\"string\">&#x27;/archive/&#x27;</span>)) <span class=\"keyword\">return</span> <span class=\"string\">&#x27;archive&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (path.<span class=\"title function_\">includes</span>(<span class=\"string\">&#x27;/categories/&#x27;</span>) || path.<span class=\"title function_\">includes</span>(<span class=\"string\">&#x27;/category/&#x27;</span>)) <span class=\"keyword\">return</span> <span class=\"string\">&#x27;category&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (path.<span class=\"title function_\">includes</span>(<span class=\"string\">&#x27;/tags/&#x27;</span>) || path.<span class=\"title function_\">includes</span>(<span class=\"string\">&#x27;/tag/&#x27;</span>)) <span class=\"keyword\">return</span> <span class=\"string\">&#x27;tag&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (path.<span class=\"title function_\">includes</span>(<span class=\"string\">&#x27;/about/&#x27;</span>)) <span class=\"keyword\">return</span> <span class=\"string\">&#x27;about&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (path.<span class=\"title function_\">includes</span>(<span class=\"string\">&#x27;/links/&#x27;</span>)) <span class=\"keyword\">return</span> <span class=\"string\">&#x27;links&#x27;</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 基于body类名检测</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (bodyClasses.<span class=\"title function_\">contains</span>(<span class=\"string\">&#x27;index&#x27;</span>)) <span class=\"keyword\">return</span> <span class=\"string\">&#x27;home&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (bodyClasses.<span class=\"title function_\">contains</span>(<span class=\"string\">&#x27;post-template&#x27;</span>) || bodyClasses.<span class=\"title function_\">contains</span>(<span class=\"string\">&#x27;post&#x27;</span>)) <span class=\"keyword\">return</span> <span class=\"string\">&#x27;post&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (bodyClasses.<span class=\"title function_\">contains</span>(<span class=\"string\">&#x27;archive-template&#x27;</span>) || bodyClasses.<span class=\"title function_\">contains</span>(<span class=\"string\">&#x27;archive&#x27;</span>)) <span class=\"keyword\">return</span> <span class=\"string\">&#x27;archive&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (bodyClasses.<span class=\"title function_\">contains</span>(<span class=\"string\">&#x27;category-template&#x27;</span>) || bodyClasses.<span class=\"title function_\">contains</span>(<span class=\"string\">&#x27;category&#x27;</span>)) <span class=\"keyword\">return</span> <span class=\"string\">&#x27;category&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (bodyClasses.<span class=\"title function_\">contains</span>(<span class=\"string\">&#x27;tag-template&#x27;</span>) || bodyClasses.<span class=\"title function_\">contains</span>(<span class=\"string\">&#x27;tag&#x27;</span>)) <span class=\"keyword\">return</span> <span class=\"string\">&#x27;tag&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (bodyClasses.<span class=\"title function_\">contains</span>(<span class=\"string\">&#x27;about-template&#x27;</span>) || bodyClasses.<span class=\"title function_\">contains</span>(<span class=\"string\">&#x27;about&#x27;</span>)) <span class=\"keyword\">return</span> <span class=\"string\">&#x27;about&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (bodyClasses.<span class=\"title function_\">contains</span>(<span class=\"string\">&#x27;links-template&#x27;</span>) || bodyClasses.<span class=\"title function_\">contains</span>(<span class=\"string\">&#x27;links&#x27;</span>)) <span class=\"keyword\">return</span> <span class=\"string\">&#x27;links&#x27;</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 特定页面元素检测</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.post-content&#x27;</span>)) <span class=\"keyword\">return</span> <span class=\"string\">&#x27;post&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.archive-list&#x27;</span>)) <span class=\"keyword\">return</span> <span class=\"string\">&#x27;archive&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.category-list&#x27;</span>)) <span class=\"keyword\">return</span> <span class=\"string\">&#x27;category&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.tag-list&#x27;</span>)) <span class=\"keyword\">return</span> <span class=\"string\">&#x27;tag&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.about-content&#x27;</span>)) <span class=\"keyword\">return</span> <span class=\"string\">&#x27;about&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.links-list&#x27;</span>)) <span class=\"keyword\">return</span> <span class=\"string\">&#x27;links&#x27;</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">&#x27;default&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 设置背景图片 - 只在需要时更新</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">updateBackgroundImage</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 防止短时间内多次调用</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (updateTimeout) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(updateTimeout);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  updateTimeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 获取当前状态</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> themeMode = <span class=\"title function_\">detectThemeMode</span>();</span><br><span class=\"line\">    <span class=\"keyword\">const</span> pageType = <span class=\"title function_\">detectPageType</span>();</span><br><span class=\"line\">    <span class=\"keyword\">const</span> isMobile = <span class=\"variable language_\">window</span>.<span class=\"property\">innerWidth</span> &lt; <span class=\"number\">768</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 如果DOM元素还未缓存，获取它</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!webBgElement) &#123;</span><br><span class=\"line\">      webBgElement = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;#web_bg&#x27;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!webBgElement) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 当状态变化时才更新背景</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (themeMode !== cachedThemeMode || </span><br><span class=\"line\">        pageType !== cachedPageType || </span><br><span class=\"line\">        isMobile !== cachedIsMobile) &#123;</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"comment\">// 更新缓存的状态</span></span><br><span class=\"line\">      cachedThemeMode = themeMode;</span><br><span class=\"line\">      cachedPageType = pageType;</span><br><span class=\"line\">      cachedIsMobile = isMobile;</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"comment\">// 获取对应背景</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> bgConfig = <span class=\"variable constant_\">BACKGROUNDS</span>[pageType] || <span class=\"variable constant_\">BACKGROUNDS</span>.<span class=\"property\">default</span>;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> bgImage = isMobile ? bgConfig[themeMode].<span class=\"property\">mobile</span> : bgConfig[themeMode].<span class=\"property\">desktop</span>;</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"comment\">// 应用背景图片</span></span><br><span class=\"line\">      webBgElement.<span class=\"property\">style</span>.<span class=\"property\">backgroundImage</span> = bgImage;</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"comment\">// 重置Banner样式</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> banner = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#banner&quot;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">const</span> mask = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#banner .mask&quot;</span>);</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"keyword\">if</span> (banner) banner.<span class=\"property\">style</span>.<span class=\"property\">backgroundImage</span> = <span class=\"string\">&#x27;none&#x27;</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (mask) mask.<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span> = <span class=\"string\">&#x27;rgba(0,0,0,0)&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    updateTimeout = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  &#125;, <span class=\"number\">50</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 初始化</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">init</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 初始化背景</span></span><br><span class=\"line\">  <span class=\"title function_\">updateBackgroundImage</span>();</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 设置主题切换监听器</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> themeToggleBtn = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;#color-toggle-btn&#x27;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (themeToggleBtn) &#123;</span><br><span class=\"line\">    themeToggleBtn.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, updateBackgroundImage);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// localStorage变化</span></span><br><span class=\"line\">  <span class=\"variable language_\">window</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;storage&#x27;</span>, <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (event.<span class=\"property\">key</span> === <span class=\"string\">&#x27;Fluid_Color_Scheme&#x27;</span>) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">updateBackgroundImage</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// body类变化</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> observer = <span class=\"keyword\">new</span> <span class=\"title class_\">MutationObserver</span>(<span class=\"function\">(<span class=\"params\">mutations</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> mutation <span class=\"keyword\">of</span> mutations) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (mutation.<span class=\"property\">attributeName</span> === <span class=\"string\">&#x27;class&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">updateBackgroundImage</span>();</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  </span><br><span class=\"line\">  observer.<span class=\"title function_\">observe</span>(<span class=\"variable language_\">document</span>.<span class=\"property\">body</span>, &#123; <span class=\"attr\">attributes</span>: <span class=\"literal\">true</span> &#125;);</span><br><span class=\"line\">  observer.<span class=\"title function_\">observe</span>(<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>, &#123; <span class=\"attr\">attributes</span>: <span class=\"literal\">true</span> &#125;);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 系统主题变化</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> mediaQuery = <span class=\"variable language_\">window</span>.<span class=\"title function_\">matchMedia</span>(<span class=\"string\">&#x27;(prefers-color-scheme: dark)&#x27;</span>);</span><br><span class=\"line\">  mediaQuery.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;change&#x27;</span>, updateBackgroundImage);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 窗口大小变化</span></span><br><span class=\"line\">  <span class=\"variable language_\">window</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;resize&#x27;</span>, updateBackgroundImage, &#123; <span class=\"attr\">passive</span>: <span class=\"literal\">true</span> &#125;);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 监听点击事件，捕获内部导航</span></span><br><span class=\"line\">  <span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> target = event.<span class=\"property\">target</span>.<span class=\"title function_\">closest</span>(<span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (target &amp;&amp; target.<span class=\"property\">href</span> &amp;&amp; target.<span class=\"property\">href</span>.<span class=\"title function_\">includes</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">hostname</span>)) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">setTimeout</span>(updateBackgroundImage, <span class=\"number\">100</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 浏览器历史记录变化</span></span><br><span class=\"line\">  <span class=\"variable language_\">window</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;popstate&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(updateBackgroundImage, <span class=\"number\">100</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 观察内容变化</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> contentObserver = <span class=\"keyword\">new</span> <span class=\"title class_\">MutationObserver</span>(<span class=\"function\">(<span class=\"params\">mutations</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (mutations.<span class=\"title function_\">some</span>(<span class=\"function\"><span class=\"params\">mutation</span> =&gt;</span> </span><br><span class=\"line\">      mutation.<span class=\"property\">type</span> === <span class=\"string\">&#x27;childList&#x27;</span> &amp;&amp; </span><br><span class=\"line\">      (mutation.<span class=\"property\">addedNodes</span>.<span class=\"property\">length</span> &gt; <span class=\"number\">3</span> || mutation.<span class=\"property\">removedNodes</span>.<span class=\"property\">length</span> &gt; <span class=\"number\">3</span>)</span><br><span class=\"line\">    )) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">setTimeout</span>(updateBackgroundImage, <span class=\"number\">100</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 观察主要内容区域</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> contentAreas = [</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;main&#x27;</span>),</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;#main&#x27;</span>),</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.container&#x27;</span>),</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;.content&#x27;</span>)</span><br><span class=\"line\">  ].<span class=\"title function_\">filter</span>(<span class=\"title class_\">Boolean</span>);</span><br><span class=\"line\">  </span><br><span class=\"line\">  contentAreas.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">area</span> =&gt;</span> &#123;</span><br><span class=\"line\">    contentObserver.<span class=\"title function_\">observe</span>(area, &#123; </span><br><span class=\"line\">      <span class=\"attr\">childList</span>: <span class=\"literal\">true</span>, </span><br><span class=\"line\">      <span class=\"attr\">subtree</span>: <span class=\"literal\">true</span> </span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 页面初始化</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"property\">readyState</span> === <span class=\"string\">&#x27;loading&#x27;</span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;DOMContentLoaded&#x27;</span>, init);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">init</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 提供手动触发更新的方法</span></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">updatePageBackground</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"title function_\">updateBackgroundImage</span>();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">`已手动更新背景，页面类型: <span class=\"subst\">$&#123;detectPageType()&#125;</span>, 主题模式: <span class=\"subst\">$&#123;detectThemeMode()&#125;</span>`</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>（2）添加CSS文件：<code>source/css/backgroundize.css</code>，内容如下：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 参考教程：https: //4rozen.github.io/archives/Hexo/60191.html */</span></span><br><span class=\"line\"><span class=\"selector-pseudo\">:root</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/* 首页背景 */</span></span><br><span class=\"line\">  <span class=\"attr\">--home-bg-image-light</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/street01.png&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attr\">--home-bg-image-light-mobile</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/m0.jpg&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attr\">--home-bg-image-dark</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/b2.jpg&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attr\">--home-bg-image-dark-mobile</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/b08.jpg&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* 文章页背景 */</span></span><br><span class=\"line\">  <span class=\"attr\">--post-bg-image-light</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/free-cute.png&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attr\">--post-bg-image-light-mobile</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/m0.jpg&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attr\">--post-bg-image-dark</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/m013.jpg&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attr\">--post-bg-image-dark-mobile</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/b08.jpg&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* 归档页背景 */</span></span><br><span class=\"line\">  <span class=\"attr\">--archive-bg-image-light</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/street01.png&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attr\">--archive-bg-image-light-mobile</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/m0.jpg&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attr\">--archive-bg-image-dark</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/b2.jpg&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attr\">--archive-bg-image-dark-mobile</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/b08.jpg&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* 标签页背景 */</span></span><br><span class=\"line\">  <span class=\"attr\">--tag-bg-image-light</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/street01.png&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attr\">--tag-bg-image-light-mobile</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/m0.jpg&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attr\">--tag-bg-image-dark</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/b2.jpg&#x27;</span>); </span><br><span class=\"line\">  <span class=\"attr\">--tag-bg-image-dark-mobile</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/b08.jpg&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* 分类页背景 */</span></span><br><span class=\"line\">  <span class=\"attr\">--category-bg-image-light</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/street01.png&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attr\">--category-bg-image-light-mobile</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/m0.jpg&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attr\">--category-bg-image-dark</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/b2.jpg&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attr\">--category-bg-image-dark-mobile</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/b08.jpg&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* 关于页背景 */</span></span><br><span class=\"line\">  <span class=\"attr\">--about-bg-image-light</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/street01.png&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attr\">--about-bg-image-light-mobile</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/m0.jpg&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attr\">--about-bg-image-dark</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/b2.jpg&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attr\">--about-bg-image-dark-mobile</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.web.li/hua-cdn/b08.jpg&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* 友链页背景 */</span></span><br><span class=\"line\">  <span class=\"attr\">--links-bg-image-light</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/LongMao.webp&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attr\">--links-bg-image-light-mobile</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/LongMao_m.jpg&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attr\">--links-bg-image-dark</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/b2.jpg&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attr\">--links-bg-image-dark-mobile</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/LongMao_m.jpg&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* 默认背景（可以重复使用其他背景，或设置新背景） */</span></span><br><span class=\"line\">  <span class=\"attr\">--default-bg-image-light</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/street01.png&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attr\">--default-bg-image-light-mobile</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/m0.jpg&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attr\">--default-bg-image-dark</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/b2.jpg&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attr\">--default-bg-image-dark-mobile</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cbc25ff.webp.li/hua-cdn/b08.jpg&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#web_bg</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/* 触发GPU加速 */</span></span><br><span class=\"line\">  <span class=\"attribute\">will-change</span>: background-image;</span><br><span class=\"line\">  <span class=\"comment\">/* 启用CSS Containment */</span></span><br><span class=\"line\">  <span class=\"attribute\">content-visibility</span>: auto;</span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>: <span class=\"built_in\">var</span>(--desktop-bg-image-normal);</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: -<span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-size</span>: cover;</span><br><span class=\"line\">  <span class=\"comment\">/* 添加过渡效果 */</span></span><br><span class=\"line\">  <span class=\"attribute\">transition</span>: all <span class=\"number\">0.5s</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<div class=\"note success flat\"><p>注意：</p>\n<p>这里的<code>backgroundzie.js</code>和<code>backgroundize.css</code>要在「主题配置文件<code>_config.fluid.yml</code>」中添加到用户自定义js和用户自定义css中进行启用。</p>\n <figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">custom_js:</span></span><br><span class=\"line\">   <span class=\"bullet\">-</span> <span class=\"string\">/js/backgroundize</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"attr\">custom_css:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">/css/backgroundize</span></span><br></pre></td></tr></table></figure>\n</div>\n<hr />\n<p>篇结。</p>\n","isPage":false,"isDraft":false,"permalink":"https://blog.huazzi.site/posts/63657.html"},{"title":"Fluid主题自定义字体","content":"<div class=\"note info flat\"><p>在Hexo的Fluid主题中使用自定义字体</p>\n</div>\n<h2 id=\"实现方法\"><a class=\"markdownIt-Anchor\" href=\"#实现方法\"></a> 实现方法</h2>\n<p>Fluid提供了「<a href=\"https://hexo.fluid-dev.com/docs/guide/#%E8%87%AA%E5%AE%9A%E4%B9%89-js-css-html\">自定义 JS / CSS / HTML</a>」的方式，如果你想引入外部的 JS、CSS（比如 IconFont）或 HTML，可以通过以下<strong>主题配置</strong>，具体见注释：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 指定自定义 js 文件路径，路径是相对 source 目录</span></span><br><span class=\"line\"><span class=\"attr\">custom_js:</span> <span class=\"string\">/js/custom.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 指定自定义 css 文件路径，路径是相对 source 目录</span></span><br><span class=\"line\"><span class=\"attr\">custom_css:</span> <span class=\"string\">/css/custom.css</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 自定义 &lt;head&gt; 节点中的 HTML 内容</span></span><br><span class=\"line\"><span class=\"attr\">custom_head:</span> <span class=\"string\">&#x27;&lt;meta name=&quot;key&quot; content=&quot;value&quot;&gt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 自定义底部 HTML 内容（位于 footer 上方），也可用于外部引入 js css 这些操作，注意不要和 post.custom 配置冲突</span></span><br><span class=\"line\"><span class=\"attr\">custom_html:</span> <span class=\"string\">&#x27;&lt;link rel=&quot;stylesheet&quot; href=&quot;//at.alicdn.com/t/font_1067060_qzomjdt8bmp.css&quot;&gt;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>另外 <code>custom_js</code> 和 <code>custom_css</code> 都可以指定多个路径：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">custom_css:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">/css/macpanel</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">/css/nav_tittle</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">/css/custom_fonts</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"具体步骤\"><a class=\"markdownIt-Anchor\" href=\"#具体步骤\"></a> 具体步骤</h2>\n<ol>\n<li>创建CSS文件</li>\n</ol>\n<p>​\t在博客跟目录的 <code>node_modules\\hexo-theme-fluid\\source\\css</code> 或 <code>themes\\fluid\\source\\css</code> 目录下，创建一个<code>custom_fonts.css</code>（文件名随意）文件，用于设置自定义的字体样式。</p>\n<ol start=\"2\">\n<li>在CSS中设置自定义字体样式</li>\n</ol>\n<p>（我在这里主要使用了「<a href=\"https://chinese-font.netlify.app/zh-cn/\">中文网字计划</a>」的<a href=\"https://chinese-font.netlify.app/zh-cn/fonts/zqfs/ZhuqueFangsong-Regular\">朱雀仿宋字</a>体）</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 创建文件: themes/fluid/source/css/custom_font.css */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 引入字体 */</span></span><br><span class=\"line\"><span class=\"keyword\">@import</span> url(<span class=\"attribute\">https</span>://chinese-fonts-cdn.deno.dev/packages/zqfs/dist/ZhuqueFangsong-Regular/result.css);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span>,   <span class=\"comment\">/* 全局使用自定义字体 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">h1</span>,     <span class=\"comment\">/* 标题使用自定义字体 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">h2</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">h3</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">h4</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">h5</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">h6</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.markdown-body</span>, <span class=\"comment\">/* 文章内容使用自定义字体 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.navbar</span>,        <span class=\"comment\">/* 导航栏使用自定义字体 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.side-catalog</span>,  <span class=\"comment\">/* 侧边栏使用自定义字体 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">footer</span> &#123;        <span class=\"comment\">/* 页脚使用自定义字体 */</span></span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">&quot;Zhuque Fangsong (technical preview)&quot;</span>, KaiTi, <span class=\"string\">&quot;楷体&quot;</span>, <span class=\"string\">&quot;楷体_GB2312&quot;</span>, STKaiti, <span class=\"string\">&quot;华文楷体&quot;</span>, serif <span class=\"meta\">!important</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 子标题字体 */</span></span><br><span class=\"line\"><span class=\"selector-id\">#subtitle</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">&quot;Zhuque Fangsong (technical preview)&quot;</span>, serif <span class=\"meta\">!important</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 浮动光标字体 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.typed-cursor</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">&quot;微软雅黑&quot;</span>, <span class=\"string\">&quot;Microsoft YaHei&quot;</span>, <span class=\"string\">&quot;宋体&quot;</span>, <span class=\"string\">&quot;SimSun&quot;</span>, sans-serif <span class=\"meta\">!important</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>启用自定义.css 文件</li>\n</ol>\n<p>​\t在Fluid的「主题配置文件」中（一般是在博客根目录下的<code>_config.fluid.yml</code> 或 <code>&quot;node_modules\\hexo-theme-fluid\\_config.yml&quot;</code>），启用上面写好的自定义.css 文件：</p>\n<blockquote>\n<p>需要注意一下自定义 .css 文件路径要确保无误</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 指定自定义 .css 文件路径</span></span><br><span class=\"line\"><span class=\"attr\">custom_css:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">/css/custom_fonts</span></span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>重启博客</li>\n</ol>\n<p><em>完成！</em></p>\n","isPage":false,"isDraft":false,"permalink":"https://blog.huazzi.site/posts/23062.html"},{"title":"Git图形化工具「lazygit」","content":"<div class=\"note info flat\"><p>简要介绍一下偶然发现的Git图形化工具——「<a href=\"https://github.com/jesseduffield/lazygit\">lazygit</a>」</p>\n</div>\n<hr />\n<h2 id=\"概述\"><a class=\"markdownIt-Anchor\" href=\"#概述\"></a> 概述</h2>\n<p>Lazygit 是一个用 Go 语言编写的 Git 命令行界面（TUI）工具，它让 Git 操作变得更加直观和高效。</p>\n<p>Github地址：<a href=\"https://github.com/jesseduffield/lazygit\">https://github.com/jesseduffield/lazygit</a></p>\n<p><img src=\"https://cbc25ff.webp.li/hua-cdn/lazygit%E7%95%8C%E9%9D%A2.png\" alt=\"lazygit界面\" /></p>\n<h2 id=\"主要特点\"><a class=\"markdownIt-Anchor\" href=\"#主要特点\"></a> 主要特点</h2>\n<p><strong>主要优势：</strong></p>\n<ol>\n<li>图形化界面 - 虽然是终端中运行，但提供了清晰的可视化界面，显示文件状态、分支、提交历史等</li>\n<li>键盘快捷操作 - 几乎所有 Git 操作都可以通过简单的快捷键完成</li>\n<li>交互式操作 - 可以方便地浏览文件变更、选择要暂存的内容、管理分支等</li>\n</ol>\n<p><strong>常用功能：</strong></p>\n<ul>\n<li>文件管理：查看未暂存/已暂存的变更，暂存/取消暂存文件</li>\n<li>提交管理：创建提交、修改提交信息、查看提交历史</li>\n<li>分支操作：创建、切换、合并分支</li>\n<li>远程同步：拉取、推送、查看远程分支</li>\n<li>冲突解决：可视化显示冲突，帮助解决合并冲突</li>\n</ul>\n<p><strong>基本快捷键：</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">? - 显示帮助面板</span><br><span class=\"line\"></span><br><span class=\"line\">文件操作：</span><br><span class=\"line\">空格 - 暂存/取消暂存文件（相当于 git add &lt;file&gt; 或 git restore --staged &lt;file&gt;）</span><br><span class=\"line\">a - 暂存所有文件（相当于 git add .）</span><br><span class=\"line\">d - 查看文件变更（相当于 git diff）</span><br><span class=\"line\">D - 查看已暂存的变更（相当于 git diff --staged）</span><br><span class=\"line\"></span><br><span class=\"line\">提交推送：</span><br><span class=\"line\">c - 提交（相当于 git commit）</span><br><span class=\"line\">p - 拉取（相当于 git pull）</span><br><span class=\"line\">P - 推送（相当于 git push）</span><br><span class=\"line\">f - 抓取远程更新（相当于 git fetch）</span><br><span class=\"line\"></span><br><span class=\"line\">分支管理：</span><br><span class=\"line\">b - 查看分支列表（相当于 git branch）</span><br><span class=\"line\">n - 新建分支（相当于 git checkout -b &lt;branch&gt;）</span><br><span class=\"line\">M - 合并分支（相当于 git merge &lt;branch&gt;）</span><br><span class=\"line\"></span><br><span class=\"line\">历史记录：</span><br><span class=\"line\">l - 查看提交日志（相当于 git <span class=\"built_in\">log</span>）</span><br><span class=\"line\">g - 查看文件提交历史（相当于 git <span class=\"built_in\">log</span> -p &lt;file&gt;）</span><br><span class=\"line\">r - 回滚提交（相当于 git reset 或 git revert）</span><br><span class=\"line\"></span><br><span class=\"line\">其他：</span><br><span class=\"line\">w - 切换到另一个工作区（相当于 <span class=\"built_in\">cd</span> 到另一个 git 仓库）</span><br><span class=\"line\">q - 退出 lazygit</span><br></pre></td></tr></table></figure>\n<p><strong>安装方法：</strong></p>\n<ul>\n<li>macOS: <code>brew install lazygit</code></li>\n<li>Linux: 可以通过包管理器安装，如 <code>apt install lazygit</code></li>\n<li>Windows:\n<ul>\n<li>通过 Scoop 安装：<code>scoop install lazygit</code></li>\n<li>通过 Winget 安装：<code>winget install -e --id=JesseDuffield.lazygit</code></li>\n</ul>\n</li>\n</ul>\n<p><strong>使用建议：</strong></p>\n<ol>\n<li>刚开始使用时建议打开帮助面板（按 <code>?</code>）熟悉快捷键</li>\n<li>善用 Tab 键在不同面板间切换</li>\n<li>大多数操作都有确认步骤，不用担心误操作</li>\n<li>可以在配置文件中自定义快捷键和界面</li>\n</ol>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\"></a> 总结</h2>\n<p>相比直接使用 Git 命令行，Lazygit 最大的优势在于它<mark>降低了使用门槛</mark>，让 Git 操作更加直观，特别适合 Git 新手使用。同时它的效率也很高，熟练掌握后可以大大提高版本控制的工作效率。</p>\n","isPage":false,"isDraft":false,"permalink":"https://blog.huazzi.site/posts/52653.html"},{"title":"MySQL安装多版本与版本切换","content":"<div class=\"note info flat\"><p>今天在将双创项目部署到本地，这个项目使用的MySQL版本是MySQL5.7，应该是比较古早的项目了，但是我现在装的是8.4版本的，所以涉及MySQL的版本切换，这里记录一下操作方法。</p>\n</div>\n<hr />\n<h3 id=\"如何安全切换版本而不删除原有mysql\"><a class=\"markdownIt-Anchor\" href=\"#如何安全切换版本而不删除原有mysql\"></a> 如何安全切换版本而不删除原有MySQL？</h3>\n<h4 id=\"1-仅停止旧服务保留文件\"><a class=\"markdownIt-Anchor\" href=\"#1-仅停止旧服务保留文件\"></a> 1. <strong>仅停止旧服务，保留文件</strong></h4>\n<ul>\n<li>\n<p>停止并删除旧服务（若之前安装的时候没有自己指定MySQL服务名，则默认为<code>MySQL</code>）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#停止现有的MySQL服务</span></span><br><span class=\"line\">net stop MySQL</span><br><span class=\"line\"><span class=\"comment\"># 确认旧服务不会再用可以选择直接在删除服务</span></span><br><span class=\"line\">sc delete MySQL</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>注意</strong>：此操作仅移除服务注册，不会删除安装目录（如<code>D:\\MySQL\\mysql-8.4.1-winx64</code>）和数据目录（默认在<code>ProgramData\\MySQL</code>或自定义路径）。</p>\n</li>\n</ul>\n<blockquote>\n<p>为什么需要删除服务？</p>\n<p>当你在Windows中安装MySQL时，系统会注册一个服务（如默认的<code>MySQL</code>或<code>MySQL80</code>）。若直接安装第二个MySQL实例，可能会因服务名冲突导致报错<code>The service already exists!</code>。因此，<strong>删除旧服务是为了解决服务名冲突问题，而不是卸载MySQL</strong>。切换版本时只需处理服务注册项，保留原有数据和程序文件即可。</p>\n</blockquote>\n<h4 id=\"2-添加配置文件myini\"><a class=\"markdownIt-Anchor\" href=\"#2-添加配置文件myini\"></a> 2. <strong>添加配置文件<code>my.ini</code></strong></h4>\n<p>若安装MySQL的方法为直接下载压缩包的话，是没有自带<code>my.ini</code>文件的，需要自己新建一个，位置为根目录<code>D:\\MySQL\\mysql-8.4.1-winx64\\</code>下，具体内容如下。</p>\n<p>示例<code>my.ini</code>配置：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[mysqld]</span></span><br><span class=\"line\"><span class=\"comment\">#端口号 若有多个mysql，端口号应不同</span></span><br><span class=\"line\"><span class=\"attr\">port</span> = <span class=\"number\">3307</span>              </span><br><span class=\"line\"><span class=\"comment\">#mysql-5.7.43-winx64的路径</span></span><br><span class=\"line\"><span class=\"attr\">basedir</span>=D:\\MySQL\\mysql-<span class=\"number\">5.7</span>.<span class=\"number\">43</span>-winx64           <span class=\"comment\">#修改为自己的数据库解压路径</span></span><br><span class=\"line\"><span class=\"comment\">#mysql-5.7.43-winx64的路径+\\data</span></span><br><span class=\"line\"><span class=\"attr\">datadir</span>=D:\\MySQL\\mysql-<span class=\"number\">5.7</span>.<span class=\"number\">43</span>-winx64\\data   <span class=\"comment\">#修改为自己的数据库存储路径</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#最大连接数</span></span><br><span class=\"line\"><span class=\"attr\">max_connections</span>=<span class=\"number\">200</span></span><br><span class=\"line\"><span class=\"comment\">#编码</span></span><br><span class=\"line\"><span class=\"attr\">character-set-server</span>=utf8</span><br><span class=\"line\"><span class=\"attr\">default-storage-engine</span>=INNODB</span><br><span class=\"line\"><span class=\"attr\">sql_mode</span>=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[mysql]</span></span><br><span class=\"line\"><span class=\"comment\">#编码</span></span><br><span class=\"line\"><span class=\"attr\">default-character-set</span>=utf8 </span><br></pre></td></tr></table></figure>\n<h4 id=\"3-安装新版本时指定独立配置\"><a class=\"markdownIt-Anchor\" href=\"#3-安装新版本时指定独立配置\"></a> 3. <strong>安装新版本时指定独立配置</strong></h4>\n<ul>\n<li>\n<p>进入新版本的**<code>bin</code>目录**，执行安装命令时需：</p>\n<ul>\n<li><strong>指定新服务名</strong>：避免与旧服务冲突（如<code>MySQL_New</code>）。</li>\n<li><strong>配置独立端口和数据目录</strong>：在<code>my.ini</code>中设置不同端口（如3307）和<code>datadir</code>路径。</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysqld install MySQL_New --defaults-file=<span class=\"string\">&quot;D:\\新版本路径\\my.ini&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例：</span></span><br><span class=\"line\">mysqld install MySQL57 --defaults-file=<span class=\"string\">&quot;D:\\MySQL\\mysql-5.7.37-winx64\\my.ini&quot;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>初始化并启动新服务：</p>\n<p>执行初始化命令之后会得到一个随机生成的密码，用于初次连接登录。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 初始化</span></span><br><span class=\"line\">mysqld --defaults-file=<span class=\"string\">&quot;D:\\MySQL\\mysql-5.7.37-winx64\\my.ini&quot;</span> --initialize --console</span><br><span class=\"line\"><span class=\"comment\"># 启动</span></span><br><span class=\"line\">net start MySQL_New</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>连接，进入MySQL命令行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 连接版本（端口3307）</span></span><br><span class=\"line\">mysql -uroot -P3307 -p</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>更改密码</p>\n<p>将随机密码更改为自己熟悉的密码，如``123456`</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER USER <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class=\"string\">&#x27;新密码&#x27;</span>;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"4-多版本共存与切换\"><a class=\"markdownIt-Anchor\" href=\"#4-多版本共存与切换\"></a> 4. <strong>多版本共存与切换</strong></h4>\n<ul>\n<li>\n<p><strong>通过不同服务名启动/停止</strong>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">net start MySQL_New   <span class=\"comment\"># 启动新版本</span></span><br><span class=\"line\">net stop MySQL_Old    <span class=\"comment\"># 停止旧版本</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>通过不同端口连接</strong>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -uroot -P3306 -p   <span class=\"comment\"># 连接旧版本（端口3306）</span></span><br><span class=\"line\">mysql -uroot -P3307 -p   <span class=\"comment\"># 连接新版本（端口3307）</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>环境变量切换</strong>（可选）：<br />\n将常用版本的<code>bin</code>目录放在系统变量<code>Path</code>最前面，或通过批处理脚本临时切换路径。</p>\n</li>\n</ul>\n<hr />\n<h3 id=\"注意事项\"><a class=\"markdownIt-Anchor\" href=\"#注意事项\"></a> <strong>注意事项</strong></h3>\n<ol>\n<li><strong>数据安全</strong>：<br />\n删除服务时切勿误删<code>datadir</code>文件夹（包含数据库文件）或<code>basedir</code>（安装目录）。若需彻底卸载，才需手动删除这些目录。</li>\n<li><strong>注册表残留</strong>：<br />\n若后续安装失败，检查注册表<code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services</code>中是否残留旧服务项并手动删除。</li>\n<li><strong>配置文件隔离</strong>：<br />\n确保新旧版本的<code>my.ini</code>文件独立，避免端口或路径冲突。</li>\n</ol>\n<hr />\n<p>篇结。</p>\n","isPage":false,"isDraft":false,"permalink":"https://blog.huazzi.site/posts/22748.html"},{"title":"PicGo配置S3遇到的URL问题解决方案","content":"<h2 id=\"picgo配置s3遇到的url问题解决方案\"><a class=\"markdownIt-Anchor\" href=\"#picgo配置s3遇到的url问题解决方案\"></a> PicGo配置S3遇到的URL问题解决方案</h2>\n<p>**之前在PicGo中配置 S3 遇到的问题：**图片上传后，在PicGo中生成的URL与实际的URL之间相差一个存储桶名<code>hua-cdn</code>。</p>\n<p><strong>之前的解决方法：</strong></p>\n<p>直接在「裁剪后的文件路径」中添加一个<code>hua-cdn\\</code>，使在PicGo中复制的路径和存储桶中的路径一致。</p>\n<p><strong>现在的方案：</strong></p>\n<p>今天发现是因为自己配置的「自定义节点」中的尾部多加了<code>hua-cdn</code>的缘故：</p>\n<p><img src=\"https://cbc25ff.webp.li/851543.png\" alt=\"配置页面图\" /></p>\n<p>因此，只需要<strong>将尾部这个多余的部分去掉</strong>就可以了。</p>\n<p>之前可能是认为自定义节点需要精确到存储桶，现在看来应该是每个存储桶的前面部分的链接就已经不同了，可以不需要再写后面的存储桶名了。</p>\n<p><img src=\"https://cbc25ff.webp.li/254217.png\" alt=\"存储桶信息\" /></p>\n","isPage":false,"isDraft":false,"permalink":"https://blog.huazzi.site/posts/57104.html"},{"title":"PowerShell美化","content":"<div class=\"note info flat\"><p>参考文章：<a href=\"https://blog.csdn.net/weixin_51551506/article/details/137465202\">windows terminal美化教程</a></p>\n</div>\n<h3 id=\"主要步骤\"><a class=\"markdownIt-Anchor\" href=\"#主要步骤\"></a> 主要步骤</h3>\n<h4 id=\"1-安装windows-terminal\"><a class=\"markdownIt-Anchor\" href=\"#1-安装windows-terminal\"></a> 1. 安装Windows Terminal</h4>\n<ul>\n<li>\n<p>方式一：「微软商店」下载安装Windows Terminal</p>\n</li>\n<li>\n<p>方式二：使用<code>winget</code>安装</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">winget install <span class=\"literal\">--id</span> Microsoft.WindowsTerminal <span class=\"literal\">-e</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"2-下载安装字体\"><a class=\"markdownIt-Anchor\" href=\"#2-下载安装字体\"></a> 2. 下载安装字体</h4>\n<ul>\n<li>\n<p>我的字体：<a href=\"https://github.com/ryanoasis/nerd-fonts/blob/master/patched-fonts/JetBrainsMono/Ligatures/Regular/JetBrainsMonoNerdFont-Regular.ttf\">JetBrainsMonoNerdFont-Regular</a></p>\n</li>\n<li>\n<p>下载后<code>双击</code>安装</p>\n</li>\n<li>\n<p>在Windows Terminal设置中使用字体</p>\n<p><img src=\"https://cbc25ff.webp.li/hua-cdn/%E8%AE%BE%E7%BD%AE%E5%AD%97%E4%BD%93.png\" alt=\"在Windows Terminal设置安装的字体\" /></p>\n</li>\n</ul>\n<h4 id=\"3-安装oh-my-posh\"><a class=\"markdownIt-Anchor\" href=\"#3-安装oh-my-posh\"></a> 3. 安装oh-my-posh</h4>\n<ul>\n<li>方式一：「微软商店」安装</li>\n<li>方式二：使用<code>winget</code>安装：</li>\n</ul>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">winget install JanDeDobbeleer.OhMyPosh <span class=\"literal\">-s</span> winget</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>顺带安装了<code>Get-ChildItemColor</code>和<code>posh-git</code></p>\n<p><img src=\"https://cbc25ff.webp.li/hua-cdn/%E9%A1%BA%E5%B8%A6%E7%9A%84%E5%AE%89%E8%A3%85%E5%86%85%E5%AE%B9.png\" alt=\"顺带的安装内容\" /></p>\n</blockquote>\n<p>添加<code>PATH</code>路径：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$env:Path</span> += <span class=\"string\">&quot;C:\\Users\\user\\AppData\\Local\\Programs\\oh-my-posh\\bin&quot;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"4-配置oh-my-posh\"><a class=\"markdownIt-Anchor\" href=\"#4-配置oh-my-posh\"></a> 4. 配置oh-my-posh</h4>\n<ul>\n<li>\n<p><strong>创建配置文件：</strong></p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">New-Item</span> <span class=\"literal\">-Path</span> <span class=\"variable\">$PROFILE</span> <span class=\"literal\">-Type</span> File <span class=\"literal\">-Force</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>编辑配置文件：</strong></p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">notepad <span class=\"variable\">$PROFILE</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>配置文件位置：</strong></p>\n<p><code>C:\\Users\\&lt;userName&gt;\\Documents\\WindowsPowerShell\\Microsoft.PowerShell_profile.ps1</code></p>\n</blockquote>\n</li>\n</ul>\n<p><strong>主要改动：</strong></p>\n<blockquote>\n<p>oh-my-posh不再需要模块导入，需要在配置文件中删去，否则一直弹出提示</p>\n<p><img src=\"https://cbc25ff.webp.li/hua-cdn/oh-my-hosh%E4%B8%8D%E5%86%8D%E9%9C%80%E8%A6%81%E6%A8%A1%E5%9D%97%E5%AE%89%E8%A3%85.png\" alt=\"oh-my-hosh不再需要模块安装\" /></p>\n<p><a href=\"https://ohmyposh.dev/docs/migrating\">问题描述</a></p>\n</blockquote>\n<p><strong>配置文件内容：</strong></p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"type\">System.Console</span>]::OutputEncoding=[<span class=\"type\">System.Text.Encoding</span>]::GetEncoding(<span class=\"number\">65001</span>) <span class=\"comment\"># 配置默认编码</span></span><br><span class=\"line\"><span class=\"built_in\">oh</span><span class=\"literal\">-my-posh</span> init pwsh <span class=\"literal\">--config</span> <span class=\"string\">&quot;<span class=\"variable\">$env:POSH_THEMES_PATH</span>\\atomic.omp.json&quot;</span> | <span class=\"built_in\">Invoke-Expression</span> <span class=\"comment\"># 配置oh-my-posh的theme</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#------------------------------- Import Modules BEGIN -------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># 引入 ps-read-line</span></span><br><span class=\"line\"><span class=\"built_in\">Import-Module</span> PSReadLine</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 引入 posh-git</span></span><br><span class=\"line\"><span class=\"built_in\">Import-Module</span> posh<span class=\"literal\">-git</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 引入 oh-my-posh —&gt;更新：删除oh-my-posh的模块导入</span></span><br><span class=\"line\"><span class=\"comment\"># Import-Module oh-my-posh</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 设置 PowerShell 主题 —&gt; 更新：删除</span></span><br><span class=\"line\"><span class=\"comment\"># Set-PoshPrompt ys</span></span><br><span class=\"line\"><span class=\"comment\"># Set-PoshPrompt cinnamon</span></span><br><span class=\"line\"><span class=\"comment\">#------------------------------- Import Modules END   -------------------------------</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#-------------------------------  Set Hot-keys BEGIN  -------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># 设置预测文本来源为历史记录</span></span><br><span class=\"line\"><span class=\"built_in\">Set-PSReadLineOption</span> <span class=\"literal\">-PredictionSource</span> <span class=\"built_in\">History</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 每次回溯输入历史，光标定位于输入内容末尾</span></span><br><span class=\"line\"><span class=\"built_in\">Set-PSReadLineOption</span> <span class=\"literal\">-HistorySearchCursorMovesToEnd</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 设置 Tab 为菜单补全和 Intellisense</span></span><br><span class=\"line\"><span class=\"built_in\">Set-PSReadLineKeyHandler</span> <span class=\"literal\">-Key</span> <span class=\"string\">&quot;Tab&quot;</span> <span class=\"literal\">-Function</span> MenuComplete</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 设置 Ctrl+d 为退出 PowerShell</span></span><br><span class=\"line\"><span class=\"built_in\">Set-PSReadlineKeyHandler</span> <span class=\"literal\">-Key</span> <span class=\"string\">&quot;Ctrl+d&quot;</span> <span class=\"literal\">-Function</span> ViExit</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 设置 Ctrl+z 为撤销</span></span><br><span class=\"line\"><span class=\"built_in\">Set-PSReadLineKeyHandler</span> <span class=\"literal\">-Key</span> <span class=\"string\">&quot;Ctrl+z&quot;</span> <span class=\"literal\">-Function</span> Undo</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 设置向上键为后向搜索历史记录</span></span><br><span class=\"line\"><span class=\"built_in\">Set-PSReadLineKeyHandler</span> <span class=\"literal\">-Key</span> UpArrow <span class=\"literal\">-Function</span> HistorySearchBackward</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 设置向下键为前向搜索历史纪录</span></span><br><span class=\"line\"><span class=\"built_in\">Set-PSReadLineKeyHandler</span> <span class=\"literal\">-Key</span> DownArrow <span class=\"literal\">-Function</span> HistorySearchForward</span><br><span class=\"line\"><span class=\"comment\">#-------------------------------  Set Hot-keys END    -------------------------------</span></span><br></pre></td></tr></table></figure>\n<div class=\"note success flat\"><p>其中，</p>\n<p><code>atomic.omp.json</code>为所选的主题文件，可以在 「<a href=\"https://ohmyposh.dev/docs/themes\">Themes | Oh My Posh</a> 」这里找到自己喜欢的主题名称。</p>\n<p>配置完成后关闭 <code>terminal</code> 重新开发就可以看到新的主题了。</p>\n</div>\n<ul>\n<li>保存文件，重启终端</li>\n</ul>\n<hr />\n<p>篇结。</p>\n","isPage":false,"isDraft":false,"permalink":"https://blog.huazzi.site/posts/282226169.html"},{"title":"Scoop和Winget的区别","content":"<div class=\"note info flat\"><p>今天初步了解了一下Scoop和Winget这两个软件包管理工具的区别，记录如下。</p>\n</div>\n<p>Scoop 和 Winget 都是 Windows 系统下的软件包管理工具，但它们的定位、设计理念和使用场景有显著差异。以下是两者的核心区别和适用场景的详细对比：</p>\n<hr />\n<h3 id=\"1-开发背景与定位\"><a class=\"markdownIt-Anchor\" href=\"#1-开发背景与定位\"></a> <strong>1. 开发背景与定位</strong></h3>\n<table>\n<thead>\n<tr>\n<th><strong>特性</strong></th>\n<th><strong>Scoop</strong></th>\n<th><strong>Winget</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>开发者</strong></td>\n<td>开源社区项目</td>\n<td>微软官方工具（Microsoft Store）</td>\n</tr>\n<tr>\n<td><strong>目标用户</strong></td>\n<td>开发者、高级用户</td>\n<td>普通用户、企业环境</td>\n</tr>\n<tr>\n<td><strong>核心定位</strong></td>\n<td>轻量级、便携式软件管理</td>\n<td>系统级、标准化的软件分发</td>\n</tr>\n</tbody>\n</table>\n<hr />\n<h3 id=\"2-软件源与生态\"><a class=\"markdownIt-Anchor\" href=\"#2-软件源与生态\"></a> <strong>2. 软件源与生态</strong></h3>\n<table>\n<thead>\n<tr>\n<th><strong>特性</strong></th>\n<th><strong>Scoop</strong></th>\n<th><strong>Winget</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>软件源</strong></td>\n<td>社区维护的仓库（如 <code>main</code>、<code>extras</code>、<code>versions</code>）</td>\n<td>微软官方仓库（集成 Microsoft Store 应用）</td>\n</tr>\n<tr>\n<td><strong>软件覆盖</strong></td>\n<td>开源工具、开发者工具为主（如 Python、Node.js、FFmpeg）</td>\n<td>商业软件为主（如 Chrome、VSCode、Zoom）</td>\n</tr>\n<tr>\n<td><strong>更新速度</strong></td>\n<td>依赖社区贡献，更新较快</td>\n<td>依赖厂商提交，更新较慢（需软件商适配）</td>\n</tr>\n<tr>\n<td><strong>软件包格式</strong></td>\n<td>自定义脚本（<code>*.json</code> 清单）</td>\n<td>标准化的 MSIX 或 EXE/MSI 安装包</td>\n</tr>\n</tbody>\n</table>\n<hr />\n<h3 id=\"3-安装与管理特性\"><a class=\"markdownIt-Anchor\" href=\"#3-安装与管理特性\"></a> <strong>3. 安装与管理特性</strong></h3>\n<table>\n<thead>\n<tr>\n<th><strong>特性</strong></th>\n<th><strong>Scoop</strong></th>\n<th><strong>Winget</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>安装方式</strong></td>\n<td>便携式安装（默认安装到用户目录）</td>\n<td>系统级安装（默认安装到 <code>Program Files</code>）</td>\n</tr>\n<tr>\n<td><strong>依赖管理</strong></td>\n<td>支持依赖自动解析</td>\n<td>依赖管理较弱（依赖软件包自身逻辑）</td>\n</tr>\n<tr>\n<td><strong>多版本支持</strong></td>\n<td>支持多版本共存（如 Java 8/11）</td>\n<td>仅支持单一版本</td>\n</tr>\n<tr>\n<td><strong>卸载清理</strong></td>\n<td>彻底清理（无残留注册表）</td>\n<td>可能残留注册表或配置文件</td>\n</tr>\n<tr>\n<td><strong>自定义能力</strong></td>\n<td>高度灵活（可自建仓库、修改脚本）</td>\n<td>限制较多（依赖官方仓库）</td>\n</tr>\n</tbody>\n</table>\n<hr />\n<h3 id=\"4-使用场景对比\"><a class=\"markdownIt-Anchor\" href=\"#4-使用场景对比\"></a> <strong>4. 使用场景对比</strong></h3>\n<h4 id=\"适合用-scoop-的情况\"><a class=\"markdownIt-Anchor\" href=\"#适合用-scoop-的情况\"></a> <strong>适合用 Scoop 的情况</strong>：</h4>\n<ul>\n<li><strong>开发者工具管理</strong>：快速安装 Python、Go、Ruby 等多版本运行时。</li>\n<li><strong>便携软件需求</strong>：无需管理员权限，软件安装在用户目录（如公司电脑限制严格时）。</li>\n<li><strong>自定义需求</strong>：通过 <code>bucket</code> 添加第三方仓库（如安装 <code>nerd-fonts</code> 或小众工具）。</li>\n<li><strong>命令行重度用户</strong>：与 PowerShell 或 WSL 深度集成。</li>\n</ul>\n<h4 id=\"适合用-winget-的情况\"><a class=\"markdownIt-Anchor\" href=\"#适合用-winget-的情况\"></a> <strong>适合用 Winget 的情况</strong>：</h4>\n<ul>\n<li><strong>企业标准化部署</strong>：通过脚本批量安装标准软件（如 Teams、Edge）。</li>\n<li><strong>普通用户日常使用</strong>：一键安装常见软件（如 Chrome、Spotify）。</li>\n<li><strong>依赖微软生态</strong>：与 Microsoft Store 和系统更新无缝整合。</li>\n<li><strong>安全性优先</strong>：官方签名验证，避免社区仓库的潜在风险。</li>\n</ul>\n<hr />\n<h3 id=\"5-典型命令对比\"><a class=\"markdownIt-Anchor\" href=\"#5-典型命令对比\"></a> <strong>5. 典型命令对比</strong></h3>\n<table>\n<thead>\n<tr>\n<th><strong>操作</strong></th>\n<th><strong>Scoop</strong></th>\n<th><strong>Winget</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>搜索软件</strong></td>\n<td><code>scoop search &lt;name&gt;</code></td>\n<td><code>winget search &lt;name&gt;</code></td>\n</tr>\n<tr>\n<td><strong>安装软件</strong></td>\n<td><code>scoop install &lt;name&gt;</code></td>\n<td><code>winget install &lt;name&gt;</code></td>\n</tr>\n<tr>\n<td><strong>更新软件</strong></td>\n<td><code>scoop update &lt;name&gt;</code></td>\n<td><code>winget upgrade --all</code></td>\n</tr>\n<tr>\n<td><strong>卸载软件</strong></td>\n<td><code>scoop uninstall &lt;name&gt;</code></td>\n<td><code>winget uninstall &lt;name&gt;</code></td>\n</tr>\n</tbody>\n</table>\n<hr />\n<h3 id=\"6-优缺点总结\"><a class=\"markdownIt-Anchor\" href=\"#6-优缺点总结\"></a> <strong>6. 优缺点总结</strong></h3>\n<table>\n<thead>\n<tr>\n<th><strong>工具</strong></th>\n<th><strong>优点</strong></th>\n<th><strong>缺点</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Scoop</strong></td>\n<td>1. 便携安装，无需管理员权限<br>2. 支持多版本和依赖管理<br>3. 社区生态丰富（自定义仓库）</td>\n<td>1. 商业软件覆盖少<br>2. 需要手动维护仓库<br>3. 对普通用户学习成本高</td>\n</tr>\n<tr>\n<td><strong>Winget</strong></td>\n<td>1. 微软官方支持，稳定性高<br>2. 商业软件覆盖广<br>3. 与企业策略兼容性好</td>\n<td>1. 无法便携安装<br>2. 多版本支持差<br>3. 依赖厂商适配更新</td>\n</tr>\n</tbody>\n</table>\n<hr />\n<h3 id=\"7-如何选择\"><a class=\"markdownIt-Anchor\" href=\"#7-如何选择\"></a> <strong>7. 如何选择？</strong></h3>\n<ul>\n<li><strong>优先选 Scoop</strong>：如果你是开发者，需要灵活管理开发工具、运行时或开源软件。</li>\n<li><strong>优先选 Winget</strong>：如果你需要快速安装常见商业软件，或追求系统级标准化管理。</li>\n<li><strong>混合使用</strong>：两者可共存，例如通过 Scoop 管理开发者工具，Winget 管理日常软件。</li>\n</ul>\n<hr />\n<h3 id=\"扩展知识其他替代工具\"><a class=\"markdownIt-Anchor\" href=\"#扩展知识其他替代工具\"></a> <strong>扩展知识：其他替代工具</strong></h3>\n<ul>\n<li><strong>Chocolatey</strong>：更成熟的第三方包管理器，适合企业环境（但部分功能需付费）。</li>\n<li><strong>Ninite</strong>：专注于批量安装常用软件，适合快速装机（无包管理功能）。</li>\n</ul>\n","isPage":false,"isDraft":false,"permalink":"https://blog.huazzi.site/posts/41633.html"},{"title":"Typora美化","content":"<div class=\"note info flat\"><p>今天对Typora的Github主题进行了一些自己喜欢的修改，主要包括：字体、代码块、表格样式</p>\n</div>\n<p>美化前：</p>\n<p><img src=\"https://cbc25ff.webp.li/hua-cdn/20250221211604702.png\" alt=\"美化前效果\" /></p>\n<p>美化后：</p>\n<p><img src=\"https://cbc25ff.webp.li/hua-cdn/20250221211509673.png\" alt=\"美化后效果\" /></p>\n<h2 id=\"字体更换\"><a class=\"markdownIt-Anchor\" href=\"#字体更换\"></a> 字体更换</h2>\n<blockquote>\n<p>之前便看上了「<a href=\"https://chinese-font.netlify.app/zh-cn/\">中文网字计划</a>」的「<a href=\"https://chinese-font.netlify.app/zh-cn/fonts/zqfs/ZhuqueFangsong-Regular\">朱雀仿宋</a>」字体，于是一直想更换字体，奈何自己拖延症作祟，直到今天才开始行动。</p>\n</blockquote>\n<hr />\n<p><strong>关于「中文网字计划」</strong></p>\n<p>「<a href=\"https://chinese-font.netlify.app/zh-cn/\">中文网字计划</a>」是一个致力于优化中文字体在互联网中应用的开源项目，通过Web Font技术为开发者提供便捷、免费的中文字体解决方案。其核心特点包括：</p>\n<ol>\n<li><strong>字体分包技术</strong>：将庞大的字体文件切割为小型静态分包，利用全球CDN加速加载，解决中文字体文件体积大、加载慢的问题；</li>\n<li><strong>丰富字体库</strong>：收录了霞鹛文楷、京華老宋体等众多字体，支持在线预览和按需调用；</li>\n<li><strong>开源工具链</strong>：提供字体分析工具（如<code>font-analyze</code>）、在线分包工具（<a href=\"https://chinese-font.netlify.app/online-split/\">在线切割</a>）及NPM包（<code>@konghayao/cn-font-split</code>），方便开发者自定义字体优化；</li>\n<li><strong>全字符集渲染</strong>：支持OpenType特性，可自动按页面内容加载所需字符区间，兼顾渲染速度与完整性。</li>\n</ol>\n<p>项目官网为<a href=\"https://chinese-font.netlify.app/\">https://chinese-font.netlify.app/</a>，GitHub仓库见<a href=\"https://github.com/KonghaYao/chinese-free-web-font-storage\">chinese-free-web-font-storage</a>。</p>\n<p>需注意部分字体授权信息需自行确认，建议优先选用明确开源授权的字体（如霞鹛文楷）。</p>\n<hr />\n<p>中文网字计划是支持直接使用它提供的CDN的，但是由于不知道怎么在主题的CSS中使用，于是选择使用更为直接的方法：从中文网字计划的Github仓库中下载下来这个字体的<code>.ttf</code>文件，然后在CSS中使用该字体。</p>\n<p><strong>具体实现步骤</strong></p>\n<ol>\n<li>下载字体文件</li>\n</ol>\n<ul>\n<li>\n<p>下载自己想要的字体文件，例如<a href=\"https://github.com/KonghaYao/chinese-free-web-font-storage/blob/branch/packages/zqfs/fonts/ZhuqueFangsong-Regular.ttf\">朱雀仿宋</a>；</p>\n</li>\n<li>\n<p>并将字体文件放到合适的目录位置，这个文件路径之后要用得到，例如我就是直接放到主题css文件的同一目录下，故引用的时候就直接使用相对路径<code>./字体文件名</code>。</p>\n</li>\n</ul>\n<ol start=\"2\">\n<li>修改主题的css文件</li>\n</ol>\n<ul>\n<li>引入本地字体</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 添加以下代码，引入本地字体 */</span></span><br><span class=\"line\"><span class=\"keyword\">@font-face</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/* 自定义字体名称 */</span></span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">&quot;自定义字体&quot;</span>;</span><br><span class=\"line\">  <span class=\"comment\">/* 字体文件路径 */</span></span><br><span class=\"line\">  <span class=\"attribute\">src</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;./ZhuqueFangsong-Regular.ttf&#x27;</span>) <span class=\"built_in\">format</span>(<span class=\"string\">&#x27;truetype&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: normal;</span><br><span class=\"line\">  <span class=\"attribute\">font-style</span>: normal;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>将需要的内容设置成自定义字体</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 将 body 设置为自定义字体 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">&quot;自定义字体&quot;</span>, <span class=\"string\">&quot;Open Sans&quot;</span>, <span class=\"string\">&quot;Clear Sans&quot;</span>, <span class=\"string\">&quot;Helvetica Neue&quot;</span>, Helvetica, Arial, <span class=\"string\">&#x27;Segoe UI Emoji&#x27;</span>, sans-serif;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">51</span>, <span class=\"number\">51</span>, <span class=\"number\">51</span>);</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">1.6</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 将标题设置为自定义字体 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">h1</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">h2</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">h3</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">h4</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">h5</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">h6</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">1rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">1rem</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">1.4</span>;</span><br><span class=\"line\">  <span class=\"attribute\">cursor</span>: text;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">&quot;自定义字体&quot;</span>, <span class=\"string\">&quot;Open Sans&quot;</span>, <span class=\"string\">&quot;Clear Sans&quot;</span>, <span class=\"string\">&quot;Helvetica Neue&quot;</span>, Helvetica, Arial, <span class=\"string\">&#x27;Segoe UI Emoji&#x27;</span>, sans-serif;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 将段落、表格文字设置成自定义字体 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">p</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">blockquote</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">ul</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">ol</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">dl</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">table</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0.8em</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">&quot;自定义字体&quot;</span>, <span class=\"string\">&quot;Open Sans&quot;</span>, <span class=\"string\">&quot;Clear Sans&quot;</span>, <span class=\"string\">&quot;Helvetica Neue&quot;</span>, Helvetica, Arial, <span class=\"string\">&#x27;Segoe UI Emoji&#x27;</span>, sans-serif;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>可以根据自己的需要自行设置</p>\n</blockquote>\n<ol start=\"3\">\n<li>重启Typora</li>\n</ol>\n<p>不出意外的话，重启便能看到更换好字体之后的效果了</p>\n<h2 id=\"代码块装饰\"><a class=\"markdownIt-Anchor\" href=\"#代码块装饰\"></a> 代码块装饰</h2>\n<blockquote>\n<p>希望能添加仿mac窗口风格的代码块上檐，觉得很好看。</p>\n</blockquote>\n<p>类似下图：</p>\n<p><img src=\"https://cbc25ff.webp.li/hua-cdn/image-20250121230136626.png\" alt=\"仿mac窗口风格的代码块上檐\" /></p>\n<p><strong>已备条件</strong></p>\n<p>先前在美化Hexo博客站的时候子在网上找到了大佬在Hexo的Fluid主题中实现仿mac窗口风格的<a href=\"https://github.com/fluid-dev/hexo-theme-fluid/issues/538#issuecomment-912535477\">方法</a>，即通过``自定义CSS<code>，并提供了</code>stylus代码`：</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.highlight</span></span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"number\">#21252b</span></span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">5px</span></span><br><span class=\"line\">    <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">10px</span> <span class=\"number\">30px</span> <span class=\"number\">0</span> <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, .<span class=\"number\">4</span>)</span><br><span class=\"line\">    <span class=\"attribute\">padding-top</span>: <span class=\"number\">30px</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"selector-pseudo\">&amp;::before</span></span><br><span class=\"line\">      <span class=\"attribute\">background</span>: <span class=\"number\">#fc625d</span></span><br><span class=\"line\">      <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span></span><br><span class=\"line\">      <span class=\"attribute\">box-shadow</span>: <span class=\"number\">20px</span> <span class=\"number\">0</span> <span class=\"number\">#fdbc40</span>, <span class=\"number\">40px</span> <span class=\"number\">0</span> <span class=\"number\">#35cd4b</span></span><br><span class=\"line\">      <span class=\"attribute\">content</span>: <span class=\"string\">&#x27; &#x27;</span></span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">12px</span></span><br><span class=\"line\">      <span class=\"attribute\">left</span>: <span class=\"number\">12px</span></span><br><span class=\"line\">      <span class=\"attribute\">margin-top</span>: -<span class=\"number\">20px</span></span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">12px</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>有了stylus代码，直接让 AI 帮忙改一下就可以用在这里了</p>\n</blockquote>\n<p><strong>利用条件</strong></p>\n<p>我们需要将这段 Stylus 代码适配到 Typora 的 GitHub 主题中，以下是修改后的 CSS 实现和详细说明：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 在原有 .md-fences 样式基础上修改 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.md-fences</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#21252b</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">5px</span> <span class=\"meta\">!important</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">10px</span> <span class=\"number\">30px</span> <span class=\"number\">0</span> <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, .<span class=\"number\">4</span>) <span class=\"meta\">!important</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding-top</span>: <span class=\"number\">30px</span> <span class=\"meta\">!important</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative; <span class=\"comment\">/* 新增定位上下文 */</span></span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">15px</span> <span class=\"number\">0</span>;    <span class=\"comment\">/* 保持原有外边距 */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 添加 Mac 风格窗口按钮 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.md-fences</span><span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">&#x27; &#x27;</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">15px</span>;         <span class=\"comment\">/* 调整垂直位置 */</span></span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">15px</span>;        <span class=\"comment\">/* 调整水平位置 */</span></span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#fc625d</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">20px</span> <span class=\"number\">0</span> <span class=\"number\">#fdbc40</span>, </span><br><span class=\"line\">             <span class=\"number\">40px</span> <span class=\"number\">0</span> <span class=\"number\">#35cd4b</span>;</span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">1</span>;        <span class=\"comment\">/* 确保按钮显示在代码上方 */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 调整代码内容位置 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.md-fences</span> <span class=\"selector-class\">.code-tooltip</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>: -<span class=\"number\">20px</span>; <span class=\"comment\">/* 补偿顶部 padding */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 保持代码区域高度 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.md-fences</span> pre &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding-top</span>: <span class=\"number\">10px</span>; <span class=\"comment\">/* 调整代码与按钮的间距 */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>需要在你原来的主题 CSS 中找到 <code>.md-fences</code> 相关样式，替换或修改为上述代码。以下是主要修改点说明：</p>\n<ol>\n<li>\n<p><strong>定位上下文</strong>：<br />\n添加 <code>position: relative</code> 为伪元素定位提供基准</p>\n</li>\n<li>\n<p><strong>窗口按钮实现</strong>：<br />\n使用 <code>::before</code> 伪元素创建三个圆形按钮，通过：</p>\n<ul>\n<li><code>box-shadow</code> 创建多个按钮</li>\n<li>精确的定位调整按钮位置</li>\n<li>z-index 确保按钮可见</li>\n</ul>\n</li>\n<li>\n<p><strong>样式覆盖</strong>：<br />\n使用 <code>!important</code> 覆盖 Typora 默认样式：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">border-radius</span>: <span class=\"number\">5px</span> <span class=\"meta\">!important</span>;</span><br><span class=\"line\"><span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">10px</span> <span class=\"number\">30px</span> <span class=\"number\">0</span> <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, .<span class=\"number\">4</span>) <span class=\"meta\">!important</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>布局调整</strong>：</p>\n<ul>\n<li>增加 <code>padding-top</code> 为按钮预留空间</li>\n<li>通过负 margin 保持代码区域位置</li>\n<li>调整代码内容的 padding</li>\n</ul>\n</li>\n</ol>\n<p>最终效果：</p>\n<ul>\n<li>代码块顶部会有 macOS 风格的红黄绿按钮</li>\n<li>代码块带有阴影和圆角</li>\n<li>按钮位置适配代码块布局</li>\n<li>保持原有代码高亮样式</li>\n</ul>\n<p>如果需要调整按钮位置或颜色，可以修改以下参数：</p>\n<ul>\n<li><code>top</code>/<code>left</code> 值：控制按钮位置</li>\n<li><code>background</code> 值：红色按钮颜色</li>\n<li><code>box-shadow</code> 值：黄色和绿色按钮颜色及位置</li>\n<li><code>width</code>/<code>height</code>：按钮大小</li>\n<li><code>border-radius</code>：按钮圆角程度</li>\n</ul>\n<p>建议在修改后通过实际预览微调具体数值，不同主题可能需要不同的位置补偿值。</p>\n<blockquote>\n<p>对<code>box-shadow: 0 10px 30px 0 rgba(0, 0, 0, .4) !important;</code> 的解释：</p>\n<p>给元素添加一个<strong>向下偏移</strong>的<strong>半透明模糊阴影</strong>，具体参数解析如下：</p>\n<ol>\n<li>\n<p><strong><code>0</code></strong>：水平偏移量（h-shadow）<br />\n表示阴影在水平方向不偏移</p>\n</li>\n<li>\n<p><strong><code>10px</code></strong>：垂直偏移量（v-shadow）<br />\n表示阴影向下偏移10像素（负值会向上偏移）</p>\n</li>\n<li>\n<p><strong><code>30px</code></strong>：模糊半径（blur）<br />\n阴影边缘会产生30像素的模糊渐变效果，数值越大越模糊</p>\n</li>\n<li>\n<p><strong><code>0</code></strong>：扩散半径（spread）<br />\n阴影大小与元素原始尺寸一致（正值扩大阴影，负值收缩）</p>\n</li>\n<li>\n<p><strong><code>rgba(0, 0, 0, .4)</code></strong>：阴影颜色<br />\n使用黑色（#000）且透明度为40%（0.4），通过透明度实现阴影深浅控制</p>\n</li>\n<li>\n<p><strong><code>!important</code></strong>：优先级标记<br />\n强制覆盖其他可能存在的阴影样式规则</p>\n</li>\n</ol>\n<p>最终效果表现为：元素下方会呈现一个向下延伸10px、模糊范围30px、半透明黑色（类似雾状）的阴影层，常用于创建卡片浮起效果或增强界面层次感。</p>\n</blockquote>\n<hr />\n<div class=\"note success flat\"><p>2025.2.22更新修改</p>\n</div>\n<p>主要修改：</p>\n<ul>\n<li>顶部仿mac的背景颜色变为深色，下方的代码部分背景颜色不变</li>\n<li>上次改动使得代码块的行高发生变化，过于高了，现将行高改的合适一些</li>\n</ul>\n<p>要实现 <strong>顶部仿 Mac 按钮区域为深色背景</strong>，而<strong>下方代码区域保持浅色</strong>，需要通过 <strong>分层背景控制</strong> 和 <strong>伪元素定位</strong> 来实现。以下是具体修改方案：</p>\n<hr />\n<h3 id=\"修改后的完整-css-代码\"><a class=\"markdownIt-Anchor\" href=\"#修改后的完整-css-代码\"></a> 修改后的完整 CSS 代码</h3>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 核心修改部分 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.md-fences</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/* 移除整体深色背景 */</span></span><br><span class=\"line\">  <span class=\"attribute\">background</span>: transparent <span class=\"meta\">!important</span>;</span><br><span class=\"line\">  <span class=\"comment\">/* 保持原有容器样式 */</span></span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">5px</span> <span class=\"meta\">!important</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">10px</span> <span class=\"number\">30px</span> <span class=\"number\">0</span> <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, .<span class=\"number\">1</span>) <span class=\"meta\">!important</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding-top</span>: <span class=\"number\">25px</span> <span class=\"meta\">!important</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">2px</span> <span class=\"meta\">!important</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">15px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"comment\">/* 添加浅色边框分隔 */</span></span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">3px</span> solid <span class=\"number\">#e7eaed</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 新增：顶部深色背景条 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.md-fences</span><span class=\"selector-pseudo\">::after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"comment\">/* 与 padding-top 一致 */</span></span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">25px</span>;</span><br><span class=\"line\">  <span class=\"comment\">/* 原深色背景 */</span></span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#21252b</span>;</span><br><span class=\"line\">  <span class=\"comment\">/* 仅顶部圆角 */</span></span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">5px</span> <span class=\"number\">5px</span> <span class=\"number\">0</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"comment\">/* 确保在按钮下方 */</span></span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 调整 Mac 按钮层级 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.md-fences</span><span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/* 原有按钮样式不变 */</span></span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">&#x27; &#x27;</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#fc625d</span>;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">20px</span> <span class=\"number\">0</span> <span class=\"number\">#fdbc40</span>, <span class=\"number\">40px</span> <span class=\"number\">0</span> <span class=\"number\">#35cd4b</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">  <span class=\"comment\">/* 提升到顶部背景条之上 */</span></span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 恢复代码区域背景色 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.md-fences</span> pre &#123;</span><br><span class=\"line\">  <span class=\"comment\">/* 原浅色背景 */</span></span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#f8f8f8</span> <span class=\"meta\">!important</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span> <span class=\"number\">15px</span> <span class=\"meta\">!important</span>; <span class=\"comment\">/* 需删去 */</span></span><br><span class=\"line\">  <span class=\"comment\">/* 底部圆角 */</span></span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">5px</span> <span class=\"number\">5px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"comment\">/* 确保在顶部背景条之上 */</span></span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr />\n<h3 id=\"关键修改说明\"><a class=\"markdownIt-Anchor\" href=\"#关键修改说明\"></a> 关键修改说明</h3>\n<p>通过 <strong>三层结构</strong> 实现分层控制：</p>\n<ol>\n<li>\n<p><strong>顶部深色背景条</strong> (<code>::after</code> 伪元素)</p>\n<ul>\n<li>高度与容器的 <code>padding-top</code> 一致（30px）</li>\n<li>仅设置顶部圆角，与容器圆角匹配</li>\n<li>使用 <code>z-index: 0</code> 作为底层</li>\n</ul>\n</li>\n<li>\n<p><strong>Mac 风格按钮</strong> (<code>::before</code> 伪元素)</p>\n<ul>\n<li>提升 <code>z-index: 2</code> 确保按钮显示在顶部背景条之上</li>\n<li>保持原有定位和样式</li>\n</ul>\n</li>\n<li>\n<p><strong>代码内容区域</strong> (<code>pre</code> 标签)</p>\n<ul>\n<li>显式设置浅色背景 <code>#f8f8f8</code></li>\n<li>添加 <code>z-index: 1</code> 覆盖顶部背景条</li>\n<li>底部圆角避免背景色溢出</li>\n</ul>\n</li>\n</ol>\n<p>按照上面修改好之后，发现代码块的行高高的离谱，原本以为是行高太大的问题，于是就直接加了一行行高控制（如下所示）：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 新增行高控制 */</span></span><br><span class=\"line\"><span class=\"attribute\">line-height</span>: <span class=\"number\">1.5</span> <span class=\"meta\">!important</span>; <span class=\"comment\">/* 合适的范围：1.4-1.6*/</span></span><br></pre></td></tr></table></figure>\n<p>发现没有效果，进而才想到了可能是<code>padding</code>的问题，于是便尝试将代码块的<code>padding</code>控制元素给注释掉，发现行高恢复正常了，问题找到，只要<strong>删去padding</strong>即可。</p>\n<p><em>上面的代码是先直接让deepseek帮忙写的，事实证明：AI确实能提高编程速度，但仍不能完全代替人类进行工作。</em></p>\n<hr />\n<h3 id=\"效果验证\"><a class=\"markdownIt-Anchor\" href=\"#效果验证\"></a> 效果验证</h3>\n<table>\n<thead>\n<tr>\n<th>区域</th>\n<th>背景色</th>\n<th>特性</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>顶部按钮区域</td>\n<td>深色(#21252b)</td>\n<td>包含 Mac 风格红黄绿按钮</td>\n</tr>\n<tr>\n<td>代码内容区域</td>\n<td>浅色(#f8f8f8)</td>\n<td>保持原有代码样式和行间距</td>\n</tr>\n<tr>\n<td>容器边框</td>\n<td>浅灰色(#e7eaed)</td>\n<td>分隔顶部深色和代码区域</td>\n</tr>\n</tbody>\n</table>\n<hr />\n<h3 id=\"调整细节按需修改\"><a class=\"markdownIt-Anchor\" href=\"#调整细节按需修改\"></a> 调整细节（按需修改）</h3>\n<ul>\n<li><strong>顶部背景条高度</strong>：修改 <code>.md-fences::after</code> 的 <code>height</code> 值（需同步调整容器的 <code>padding-top</code>）</li>\n<li><strong>代码区域边距</strong>：调整 <code>.md-fences pre</code> 的 <code>padding</code> 值</li>\n<li><strong>圆角一致性</strong>：检查 <code>border-radius</code> 数值是否与容器匹配</li>\n</ul>\n<p>最终效果应实现 <strong>顶部深色按钮区 + 下方浅色代码区</strong> 的视觉分层，同时保持代码内容的原有样式。</p>\n<h2 id=\"表格样式修改\"><a class=\"markdownIt-Anchor\" href=\"#表格样式修改\"></a> 表格样式修改</h2>\n<blockquote>\n<p>将原主题的表格样式改成<code>三线表</code>样式</p>\n</blockquote>\n<p>以下是修正后的三线表完整CSS代码：</p>\n<p>将原CSS中的相关样式用以下替换即可</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* ================= 三线表完整样式 ================= */</span></span><br><span class=\"line\"><span class=\"selector-tag\">table</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-collapse</span>: collapse;</span><br><span class=\"line\">  <span class=\"attribute\">border-spacing</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">1.5em</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 顶线 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">table</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-top</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#333</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 底线 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">table</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#333</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 表头线（中间线） */</span></span><br><span class=\"line\"><span class=\"selector-tag\">thead</span> <span class=\"selector-tag\">tr</span><span class=\"selector-pseudo\">:first-child</span> <span class=\"selector-tag\">th</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1.5px</span> solid <span class=\"number\">#666</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 单元格样式 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">td</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">th</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">8px</span> <span class=\"number\">12px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: transparent;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 表头文字样式 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">th</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-weight</span>: <span class=\"number\">600</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#2c3e50</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 移除斑马纹 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">tr</span><span class=\"selector-pseudo\">:nth-child</span>(<span class=\"number\">2</span>n) &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: transparent <span class=\"meta\">!important</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 调整对齐方式 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">th</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center <span class=\"meta\">!important</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">td</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>修改要点说明：</p>\n<ol>\n<li>\n<p>明确三条线的实现方式：</p>\n<ul>\n<li>顶线：<code>table</code>元素的顶部边框（2px）</li>\n<li>中间线：表头单元格(th)的底部边框（1.5px）</li>\n<li>底线：<code>table</code>元素的底部边框（2px）</li>\n</ul>\n</li>\n<li>\n<p>颜色层级：</p>\n<ul>\n<li>顶/底线使用深灰色（#333）</li>\n<li>中间线使用稍浅的灰色（#666）</li>\n</ul>\n</li>\n<li>\n<p>增强可读性：</p>\n<ul>\n<li>表头文字加粗（600字重）</li>\n<li>表头文字颜色加深（#2c3e50）</li>\n<li>单元格增加横向间距（8px→12px）</li>\n</ul>\n</li>\n</ol>\n<p>实际效果预览：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__________________________ 顶线（2px）</span><br><span class=\"line\"> 姓名    年龄    职位</span><br><span class=\"line\">__________________________ 中间线（1.5px）</span><br><span class=\"line\"> 张三     28    工程师</span><br><span class=\"line\"> 李四     35    设计师</span><br><span class=\"line\">__________________________ 底线（2px）</span><br></pre></td></tr></table></figure>\n<p>验证方法：</p>\n<ol>\n<li>在Typora中插入3行2列的表格</li>\n<li>观察是否呈现：\n<ul>\n<li>顶部粗线</li>\n<li>表头下方细线</li>\n<li>底部粗线</li>\n</ul>\n</li>\n<li>检查是否没有其他干扰线条</li>\n</ol>\n<p>如果希望调整线条粗细，可以修改以下参数：</p>\n<ul>\n<li>顶/底线粗细：<code>2px</code> → 推荐范围 1.5px-3px</li>\n<li>中间线粗细：<code>1.5px</code> → 推荐范围 1px-2px</li>\n</ul>\n","isPage":false,"isDraft":false,"permalink":"https://blog.huazzi.site/posts/3401.html"},{"title":"Win11中无法访问wsl.localhost的解决方案","content":"<h2 id=\"问题描述\"><a class=\"markdownIt-Anchor\" href=\"#问题描述\"></a> 📝问题描述</h2>\n<p>文件资源管理器中点击「Linux」快捷方式<mark>报错</mark>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\\\wsl.localhost无法访问。你可能没有权限使用网络资源。请与这台服务器的管理员联系以查明你是否有访问权限。</span><br><span class=\"line\">系统资源不足，无法完成请求的服务。</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cbc25ff.webp.li/hua-cdn/%E6%8A%A5%E9%94%99%E4%BF%A1%E6%81%AF.png\" alt=\"报错信息\" /></p>\n<h2 id=\"解决方案\"><a class=\"markdownIt-Anchor\" href=\"#解决方案\"></a> 🎯解决方案</h2>\n<p>在资源管理器中的 <strong>「地址栏」输入</strong>：<code>\\\\wsl.localhost</code> 或者 <code>\\\\wsl.localhost\\</code><br />\n<img src=\"https://cbc25ff.webp.li/hua-cdn/%E8%AE%BF%E9%97%AE%E6%81%A2%E5%A4%8D%E6%AD%A3%E5%B8%B8.png\" alt=\"搜索框输入'wsl.localhost'\" /></p>\n<p><strong>「回车确认」</strong> 之后，发现现在居然神奇的能<strong>正常</strong>使用这个「Linux」快捷方式了<br />\n<img src=\"https://cbc25ff.webp.li/hua-cdn/%E6%90%9C%E7%B4%A2%E6%A1%86%E8%BE%93%E5%85%A5%E2%80%98__wsl.localhost%E2%80%99.png\" alt=\"访问恢复正常\" /></p>\n<hr />\n<blockquote>\n<p><em>为什么这么神奇的就解决了呢？</em> 接下来<strong>一探究竟</strong></p>\n</blockquote>\n<h2 id=\"原理分析\"><a class=\"markdownIt-Anchor\" href=\"#原理分析\"></a> 🔎原理分析</h2>\n<p>先系统分析这个解决方案的原理：</p>\n<h3 id=\"1-问题本质分析\"><a class=\"markdownIt-Anchor\" href=\"#1-问题本质分析\"></a> 1. 问题本质分析</h3>\n<ul>\n<li>原始报错：通过文件资源管理器访问 “Linux” 快捷方式失败</li>\n<li>解决方法：直接在地址栏输入 <code>\\\\wsl.localhost</code> 路径</li>\n<li>核心差异：访问方式的改变：<strong>图形界面</strong> vs <strong>直接路径</strong></li>\n</ul>\n<h3 id=\"2-技术原理解析\"><a class=\"markdownIt-Anchor\" href=\"#2-技术原理解析\"></a> 2. 技术原理解析</h3>\n<p>2.1 WSL 网络共享机制</p>\n<ul>\n<li>WSL 2 使用 9P 协议文件服务器实现 Windows 和 Linux 文件系统互通</li>\n<li>Windows 通过 <code>\\\\wsl.localhost</code> 这个 SMB 共享路径访问 Linux 文件系统</li>\n<li>每个 WSL 发行版在 <code>\\\\wsl.localhost</code> 下都有独立的命名空间</li>\n</ul>\n<p>2.2 访问路径区别</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">图形界面访问：</span><br><span class=\"line\">Windows Explorer → Network Location → Linux 快捷方式 → WSL 文件系统</span><br><span class=\"line\"></span><br><span class=\"line\">直接路径访问：</span><br><span class=\"line\">Windows Explorer → \\\\wsl.localhost → WSL 文件系统</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-解决方案工作原理\"><a class=\"markdownIt-Anchor\" href=\"#3-解决方案工作原理\"></a> 3. 解决方案工作原理</h3>\n<p>3.1 绕过潜在故障点</p>\n<ul>\n<li>避开了网络位置解析层</li>\n<li>跳过了快捷方式解析过程</li>\n<li>直接连接到 WSL 文件服务器</li>\n</ul>\n<p>3.2 技术优势</p>\n<ul>\n<li>减少了中间环节</li>\n<li>降低了出错可能性</li>\n<li>提供了更直接的访问路径</li>\n</ul>\n<h3 id=\"4-深层技术说明\"><a class=\"markdownIt-Anchor\" href=\"#4-深层技术说明\"></a> 4. 深层技术说明</h3>\n<p>4.1 网络堆栈</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">直接路径访问：</span><br><span class=\"line\">应用层 (Explorer) → SMB Client → WSL 9P Server → Linux 文件系统</span><br><span class=\"line\"></span><br><span class=\"line\">图形界面访问：</span><br><span class=\"line\">应用层 (Explorer) → 网络位置解析 → 快捷方式解析 → SMB Client → WSL 9P Server → Linux 文件系统</span><br></pre></td></tr></table></figure>\n<p>4.2 核心区别</p>\n<ul>\n<li>简化了访问链路</li>\n<li>降低了系统资源开销</li>\n<li>减少了权限检查层级</li>\n</ul>\n<h3 id=\"5-最佳实践建议\"><a class=\"markdownIt-Anchor\" href=\"#5-最佳实践建议\"></a> 5. 最佳实践建议</h3>\n<ul>\n<li>建议将 <code>\\\\wsl.localhost</code> 添加到收藏夹</li>\n<li>可以为常用路径创建新的快捷方式</li>\n<li>考虑使用 PowerShell 命令行工具进行更稳定的文件操作</li>\n</ul>\n<h3 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\"></a> 总结</h3>\n<blockquote>\n<p><strong>总的来说</strong>，这个解决方案<strong>本质上</strong>是通过简化访问路径，<strong>绕过</strong>了可能存在问题的网络位置解析层，<strong>直接访问</strong> WSL 文件服务器，从而避免了原始错误。它不仅解决了当前问题，还提供了一个更可靠的访问方式。</p>\n</blockquote>\n<h2 id=\"参考文章\"><a class=\"markdownIt-Anchor\" href=\"#参考文章\"></a> 参考文章</h2>\n<p><a href=\"https://blog.csdn.net/I_feige/article/details/131604353?spm=1001.2101.3001.6650.2&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ECtr-2-131604353-blog-130945732.235%5Ev43%5Epc_blog_bottom_relevance_base4&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ECtr-2-131604353-blog-130945732.235%5Ev43%5Epc_blog_bottom_relevance_base4\">Windows | \\wsl.localhost无法访问</a></p>\n","isPage":false,"isDraft":false,"permalink":"https://blog.huazzi.site/posts/3757.html"},{"title":"Windows包管理工具「Scoop」","content":"<div class=\"note info flat\"><p>介绍Windows软件包管理工具——「<a href=\"https://scoop.sh/\">Scoop</a>」</p>\n</div>\n<h3 id=\"一-scoop-是什么\"><a class=\"markdownIt-Anchor\" href=\"#一-scoop-是什么\"></a> <strong>一、Scoop 是什么？</strong></h3>\n<p><strong>Scoop</strong> 是一款专为 Windows 设计的命令行软件包管理工具，它能让你像 Linux 系统一样通过命令快速安装、更新和卸载软件。其核心优势包括：</p>\n<ul>\n<li><strong>无需管理员权限</strong>：默认安装在用户目录，避免权限问题。</li>\n<li><strong>绿色便携化</strong>：软件独立存放，不污染系统注册表。</li>\n<li><strong>依赖自动处理</strong>：自动配置环境变量和依赖项（如 Java、Python）。</li>\n<li><strong>海量软件仓库</strong>：支持主流开发工具、实用小软件甚至 GUI 应用。</li>\n</ul>\n<hr />\n<h3 id=\"二-scoop-安装教程\"><a class=\"markdownIt-Anchor\" href=\"#二-scoop-安装教程\"></a> <strong>二、Scoop 安装教程</strong></h3>\n<h4 id=\"1-安装前准备\"><a class=\"markdownIt-Anchor\" href=\"#1-安装前准备\"></a> <strong>1. 安装前准备</strong></h4>\n<ul>\n<li>\n<p><strong>系统要求</strong>：Windows 7+，建议 Windows 10/11。</p>\n</li>\n<li>\n<p><strong>PowerShell 版本</strong>：</p>\n<ul>\n<li>推荐使用 PowerShell 5.1+（Windows 自带）。</li>\n<li>若使用 PowerShell Core，需确保语言模式为 <code>FullLanguage</code>。</li>\n</ul>\n</li>\n<li>\n<p><strong>执行策略设置</strong>（必须）：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Set-ExecutionPolicy</span> RemoteSigned <span class=\"literal\">-Scope</span> CurrentUser</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr />\n<h4 id=\"2-三种安装方式\"><a class=\"markdownIt-Anchor\" href=\"#2-三种安装方式\"></a> <strong>2. 三种安装方式</strong></h4>\n<h5 id=\"1-典型安装推荐新手\"><a class=\"markdownIt-Anchor\" href=\"#1-典型安装推荐新手\"></a> <strong>(1) 典型安装（推荐新手）</strong></h5>\n<ul>\n<li>\n<p><strong>适用场景</strong>：快速安装到默认路径（<code>C:\\Users\\&lt;用户名&gt;\\scoop</code>）。</p>\n</li>\n<li>\n<p><strong>操作步骤</strong>：</p>\n<ol>\n<li>\n<p>以 <strong>非管理员身份</strong> 打开 PowerShell。</p>\n</li>\n<li>\n<p>执行安装命令：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">irm</span> get.scoop.sh | <span class=\"built_in\">iex</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ul>\n<li>\n<p><strong>国内镜像加速</strong>（解决 GitHub 访问慢）：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">irm</span> https://ghproxy.com/raw.githubusercontent.com/ScoopInstaller/Install/master/install.ps1 | <span class=\"built_in\">iex</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<hr />\n<h5 id=\"2-高级安装自定义路径\"><a class=\"markdownIt-Anchor\" href=\"#2-高级安装自定义路径\"></a> <strong>(2) 高级安装（自定义路径）</strong></h5>\n<ul>\n<li>\n<p><strong>适用场景</strong>：需要指定安装目录或全局软件路径。</p>\n</li>\n<li>\n<p><strong>操作步骤</strong>：</p>\n<ol>\n<li>\n<p>下载安装脚本：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">irm</span> get.scoop.sh <span class=\"literal\">-outfile</span> <span class=\"string\">&#x27;install.ps1&#x27;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查看可配置参数：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.\\install.ps1 -?</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>自定义安装（示例）：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.\\install.ps1 <span class=\"literal\">-ScoopDir</span> <span class=\"string\">&#x27;D:\\Scoop&#x27;</span> <span class=\"literal\">-ScoopGlobalDir</span> <span class=\"string\">&#x27;D:\\ScoopGlobal&#x27;</span> <span class=\"literal\">-NoProxy</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>-ScoopDir</code>: 用户级软件路径</li>\n<li><code>-ScoopGlobalDir</code>: 全局软件路径（需管理员权限）</li>\n<li><code>-NoProxy</code>: 绕过系统代理</li>\n</ul>\n</li>\n</ol>\n</li>\n</ul>\n<hr />\n<h5 id=\"3-静默安装无交互\"><a class=\"markdownIt-Anchor\" href=\"#3-静默安装无交互\"></a> <strong>(3) 静默安装（无交互）</strong></h5>\n<ul>\n<li>\n<p><strong>适用场景</strong>：批量部署或脚本集成。</p>\n</li>\n<li>\n<p><strong>操作示例</strong>：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.\\install.ps1 <span class=\"literal\">-ScoopDir</span> <span class=\"string\">&#x27;D:\\Scoop&#x27;</span> &gt; install.log <span class=\"number\">2</span>&gt;&amp;<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$LASTEXITCODE</span> <span class=\"operator\">-eq</span> <span class=\"number\">0</span>) &#123; <span class=\"built_in\">Write-Host</span> <span class=\"string\">&quot;安装成功！&quot;</span> &#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>使用 <code>&gt; install.log</code> 记录日志。</li>\n<li>通过 <code>$LASTEXITCODE</code> 检查是否成功。</li>\n</ul>\n</li>\n</ul>\n<hr />\n<h4 id=\"3-注意事项\"><a class=\"markdownIt-Anchor\" href=\"#3-注意事项\"></a> <strong>3. 注意事项</strong></h4>\n<ul>\n<li><strong>不要使用管理员模式</strong>：默认安装无需管理员权限。</li>\n<li><strong>路径规范</strong>：自定义路径避免空格和特殊字符（如 <code>Program Files</code>）。</li>\n<li><strong>旧版本迁移</strong>：修改路径后需手动迁移已安装软件。</li>\n</ul>\n<hr />\n<h3 id=\"三-配置-scoop-安装路径\"><a class=\"markdownIt-Anchor\" href=\"#三-配置-scoop-安装路径\"></a> <strong>三、配置 Scoop 安装路径</strong></h3>\n<h4 id=\"1-默认路径\"><a class=\"markdownIt-Anchor\" href=\"#1-默认路径\"></a> <strong>1. 默认路径</strong></h4>\n<ul>\n<li><strong>用户级软件</strong>：<code>C:\\Users\\&lt;用户名&gt;\\scoop\\apps</code></li>\n<li><strong>全局软件</strong>（<code>-g</code>参数）：<code>C:\\ProgramData\\scoop\\apps</code></li>\n</ul>\n<h4 id=\"2-修改路径方法\"><a class=\"markdownIt-Anchor\" href=\"#2-修改路径方法\"></a> <strong>2. 修改路径方法</strong></h4>\n<ul>\n<li>\n<p><strong>安装时指定</strong>（推荐）：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.\\install.ps1 <span class=\"literal\">-ScoopDir</span> <span class=\"string\">&#x27;D:\\Scoop&#x27;</span> <span class=\"literal\">-ScoopGlobalDir</span> <span class=\"string\">&#x27;E:\\ScoopGlobal&#x27;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>安装后修改</strong>：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scoop config root D:\\Scoop           <span class=\"comment\"># 用户级路径</span></span><br><span class=\"line\">scoop config global_root E:\\Scoop    <span class=\"comment\"># 全局路径（需管理员）</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"3-路径生效验证\"><a class=\"markdownIt-Anchor\" href=\"#3-路径生效验证\"></a> <strong>3. 路径生效验证</strong></h4>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scoop config | <span class=\"built_in\">Select-Object</span> root, global_root</span><br></pre></td></tr></table></figure>\n<hr />\n<h3 id=\"四-scoop-使用技巧\"><a class=\"markdownIt-Anchor\" href=\"#四-scoop-使用技巧\"></a> <strong>四、Scoop 使用技巧</strong></h3>\n<h4 id=\"1-常用命令速查\"><a class=\"markdownIt-Anchor\" href=\"#1-常用命令速查\"></a> <strong>1. 常用命令速查</strong></h4>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>scoop install &lt;软件名&gt;</code></td>\n<td>安装软件</td>\n</tr>\n<tr>\n<td><code>scoop uninstall &lt;软件名&gt;</code></td>\n<td>卸载软件</td>\n</tr>\n<tr>\n<td><code>scoop update</code></td>\n<td>更新 Scoop 和软件列表</td>\n</tr>\n<tr>\n<td><code>scoop update &lt;软件名&gt;</code></td>\n<td>更新指定软件</td>\n</tr>\n<tr>\n<td><code>scoop list</code></td>\n<td>查看已安装软件</td>\n</tr>\n<tr>\n<td><code>scoop search &lt;关键词&gt;</code></td>\n<td>搜索软件包</td>\n</tr>\n<tr>\n<td><code>scoop bucket add &lt;仓库名&gt;</code></td>\n<td>添加第三方仓库（如 <code>extras</code>）</td>\n</tr>\n</tbody>\n</table>\n<hr />\n<h4 id=\"2-进阶技巧\"><a class=\"markdownIt-Anchor\" href=\"#2-进阶技巧\"></a> <strong>2. 进阶技巧</strong></h4>\n<ul>\n<li>\n<p><strong>多仓库管理</strong>：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scoop bucket add extras     <span class=\"comment\"># 常用 GUI 软件</span></span><br><span class=\"line\">scoop bucket add versions   <span class=\"comment\"># 软件历史版本</span></span><br><span class=\"line\">scoop bucket add java       <span class=\"comment\"># Java 开发工具</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>一键安装开发环境</strong>：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scoop install git python nodejs vscode</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>清理旧版本</strong>：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scoop cleanup *             <span class=\"comment\"># 删除所有软件旧版本</span></span><br><span class=\"line\">scoop cache <span class=\"built_in\">rm</span>              <span class=\"comment\"># 清理下载缓存</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>代理设置</strong>：</p>\n<blockquote>\n<p>很多时候直接使用 Scoop 下载安装软件速度会很慢，甚至下载失败，这时候可以通过<code>设置代理</code>的方式解决</p>\n</blockquote>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scoop config proxy <span class=\"number\">127.0</span>.<span class=\"number\">0.1</span>:<span class=\"number\">7890</span>  <span class=\"comment\"># 替换为你的代理端口</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>未设置代理前，下载库失败；</p>\n<p>设置代理后，下载库成功。（如下图所示）</p>\n</blockquote>\n<p><img src=\"https://cbc25ff.webp.li/hua-cdn/scoop%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86.png\" alt=\"scoop设置代理\" /></p>\n</li>\n</ul>\n<hr />\n<h4 id=\"3-高效使用场景\"><a class=\"markdownIt-Anchor\" href=\"#3-高效使用场景\"></a> <strong>3. 高效使用场景</strong></h4>\n<ul>\n<li>\n<p><strong>快速部署开发环境</strong>：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scoop install neovim gcc make cmake</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>便携工具集</strong>：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scoop install everything potplayer qbittorrent</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>系统维护</strong>：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scoop install windirstat crystaldiskinfo</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr />\n<h3 id=\"五-总结\"><a class=\"markdownIt-Anchor\" href=\"#五-总结\"></a> <strong>五、总结</strong></h3>\n<p>通过 Scoop，你可以彻底告别“百度软件站-下载-下一步安装”的传统流程，实现 <strong>一键安装、更新和卸载</strong>。结合自定义路径和多仓库管理，它将成为 Windows 上提升效率的神器。</p>\n<p><em>现在就开始你的 Scoop 之旅吧！</em></p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 终极懒人包：安装常用工具</span></span><br><span class=\"line\">scoop install <span class=\"number\">7</span>zip git everything potplayer vscode python</span><br></pre></td></tr></table></figure>\n<p><strong>参考</strong></p>\n<p><a href=\"https://github.com/ScoopInstaller/Install#readme\">ScoopInstaller</a></p>\n","isPage":false,"isDraft":false,"permalink":"https://blog.huazzi.site/posts/37756.html"},{"title":"「Caddy」Web服务器","content":"<h1 id=\"caddy现代化-自动-https-的-web-服务器新星\"><a class=\"markdownIt-Anchor\" href=\"#caddy现代化-自动-https-的-web-服务器新星\"></a> 🚀 Caddy：现代化、自动 HTTPS 的 Web 服务器新星！</h1>\n<p>在构建和部署 Web 应用时，你可能听说过或用过如 <strong>Nginx</strong>、<strong>Apache</strong> 等经典的 Web 服务器。但在今天，有一个越来越受欢迎的新选择——<strong>Caddy</strong>。</p>\n<p>本文将带你认识 Caddy，了解它为何成为现代 Web 项目的新宠，并比较它与传统服务器的异同。</p>\n<hr />\n<h2 id=\"什么是-caddy\"><a class=\"markdownIt-Anchor\" href=\"#什么是-caddy\"></a> 🔍 什么是 Caddy？</h2>\n<p><strong>Caddy</strong> 是一个由 Go 语言开发的开源 Web 服务器，它以“<strong>自动化、安全、现代</strong>”为核心理念，主打：</p>\n<ul>\n<li>✅ <strong>自动 HTTPS</strong>（内置 Let’s Encrypt 证书签发）</li>\n<li>✅ <strong>简单配置语法（Caddyfile）</strong></li>\n<li>✅ <strong>跨平台支持</strong></li>\n<li>✅ <strong>内置反向代理、静态文件托管、重定向、负载均衡等功能</strong></li>\n</ul>\n<blockquote>\n<p>📌 Caddy 的官方网站：<a href=\"https://caddyserver.com/\">https://caddyserver.com</a></p>\n</blockquote>\n<hr />\n<h2 id=\"为什么选择-caddy\"><a class=\"markdownIt-Anchor\" href=\"#为什么选择-caddy\"></a> 🎯 为什么选择 Caddy？</h2>\n<h3 id=\"1-自动-https告别证书烦恼\"><a class=\"markdownIt-Anchor\" href=\"#1-自动-https告别证书烦恼\"></a> ✅ 1. 自动 HTTPS，告别证书烦恼</h3>\n<p>传统的 Nginx、Apache 需要你手动申请、续期 HTTPS 证书。Caddy 内置对 Let’s Encrypt 的支持，<strong>开箱即用 HTTPS</strong>，并自动续期，真正做到“配置即上线”。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">example.com &#123;</span><br><span class=\"line\">    reverse_proxy localhost:3000</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>只需一行域名，Caddy 会自动获取并配置 SSL 证书，堪称“SSL 小天才”。</p>\n<hr />\n<h3 id=\"2-简洁的-caddyfile-配置\"><a class=\"markdownIt-Anchor\" href=\"#2-简洁的-caddyfile-配置\"></a> ✅ 2. 简洁的 Caddyfile 配置</h3>\n<p>Caddy 用的是自定义配置语法 <strong>Caddyfile</strong>，<strong>类自然语言风格</strong>，非常易读易写。举个例子：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">myapp.com &#123;</span><br><span class=\"line\">    root * /var/www/html</span><br><span class=\"line\">    file_server</span><br><span class=\"line\">    encode gzip zstd</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这就完成了一个网站的静态资源托管和压缩优化。相比 Nginx 的几十行配置，Caddy 的简洁性明显提升开发效率。</p>\n<hr />\n<h3 id=\"3-内建反向代理-负载均衡-重定向等功能\"><a class=\"markdownIt-Anchor\" href=\"#3-内建反向代理-负载均衡-重定向等功能\"></a> ✅ 3. 内建反向代理、负载均衡、重定向等功能</h3>\n<p>无需额外模块，Caddy 原生支持：</p>\n<ul>\n<li>反向代理（支持健康检查、重试）</li>\n<li>基础身份验证</li>\n<li>自动重定向</li>\n<li>URL 重写</li>\n<li>文件压缩</li>\n<li>负载均衡等</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">api.example.com &#123;</span><br><span class=\"line\">    reverse_proxy backend1:8080 backend2:8080</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr />\n<h3 id=\"4-可扩展的模块化架构插件化\"><a class=\"markdownIt-Anchor\" href=\"#4-可扩展的模块化架构插件化\"></a> ✅ 4. 可扩展的模块化架构（插件化）</h3>\n<p>Caddy 的每一个功能模块都是可插拔的，比如你可以按需添加：</p>\n<ul>\n<li>JSON 日志记录</li>\n<li>自定义认证模块</li>\n<li>高级缓存支持</li>\n</ul>\n<p>社区还有很多第三方插件可选：<a href=\"https://caddyserver.com/docs/modules/\">https://caddyserver.com/docs/modules/</a></p>\n<hr />\n<h2 id=\"caddy-与-nginx-的对比\"><a class=\"markdownIt-Anchor\" href=\"#caddy-与-nginx-的对比\"></a> 📦 Caddy 与 Nginx 的对比</h2>\n<table>\n<thead>\n<tr>\n<th>功能/特性</th>\n<th><strong>Caddy</strong> ✅</th>\n<th><strong>Nginx</strong> ⚙️</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>自动 HTTPS</td>\n<td>内置支持，无需配置</td>\n<td>需要手动申请+cron续期</td>\n</tr>\n<tr>\n<td>配置简洁度</td>\n<td>Caddyfile 非常简洁</td>\n<td>配置语法略为复杂</td>\n</tr>\n<tr>\n<td>动态配置热更新</td>\n<td>支持（无需 reload）</td>\n<td>通常需 <code>nginx -s reload</code></td>\n</tr>\n<tr>\n<td>插件系统</td>\n<td>模块化、Go 生态丰富</td>\n<td>第三方模块较多，需编译安装</td>\n</tr>\n<tr>\n<td>静态资源托管</td>\n<td>内置支持</td>\n<td>支持</td>\n</tr>\n<tr>\n<td>性能与资源占用</td>\n<td>略高于 Nginx（因自动 TLS）</td>\n<td>高效轻量，成熟度高</td>\n</tr>\n<tr>\n<td>社区与生态</td>\n<td>新兴、活跃</td>\n<td>大而成熟</td>\n</tr>\n</tbody>\n</table>\n<hr />\n<h2 id=\"caddy-的使用场景\"><a class=\"markdownIt-Anchor\" href=\"#caddy-的使用场景\"></a> 🛠 Caddy 的使用场景</h2>\n<ul>\n<li>🔐 <strong>HTTPS 静态资源托管（个人博客、Hugo/Gatsby）</strong></li>\n<li>🔄 <strong>反向代理前后端分离项目（Vue/React + 后端）</strong></li>\n<li>☁️ <strong>本地开发 HTTPS 测试</strong></li>\n<li>📡 <strong>快速部署内部服务（如 REST API 接口、文件下载服务）</strong></li>\n</ul>\n<hr />\n<h2 id=\"快速开始安装\"><a class=\"markdownIt-Anchor\" href=\"#快速开始安装\"></a> 🚀 快速开始（安装）</h2>\n<p><strong>Linux/macOS</strong>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -fsSL https://get.caddyserver.com | bash</span><br></pre></td></tr></table></figure>\n<p><strong>Windows</strong>：可直接从官网或 Chocolatey 安装。</p>\n<hr />\n<h2 id=\"示例部署一个-vue-应用-后端-api\"><a class=\"markdownIt-Anchor\" href=\"#示例部署一个-vue-应用-后端-api\"></a> 🧪 示例：部署一个 Vue 应用 + 后端 API</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">example.com &#123;</span><br><span class=\"line\">    root * /var/www/vue-app/dist</span><br><span class=\"line\">    file_server</span><br><span class=\"line\"></span><br><span class=\"line\">    handle /api/* &#123;</span><br><span class=\"line\">        reverse_proxy localhost:8080</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>效果：</p>\n<ul>\n<li><code>https://example.com/</code>：访问前端页面</li>\n<li><code>https://example.com/api/users</code>：由 Caddy 代理给后端接口</li>\n</ul>\n<hr />\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\"></a> 🎯 总结</h2>\n<p>Caddy 作为现代 Web 服务生态的一股新势力，凭借 <strong>自动 HTTPS、配置简单、功能全面、模块化架构</strong>，成为很多开发者和运维的首选。</p>\n<blockquote>\n<p>无论你是独立开发者、前端工程师，还是 DevOps 从业者，<strong>Caddy 都值得一试！</strong></p>\n</blockquote>\n","isPage":false,"isDraft":false,"permalink":"https://blog.huazzi.site/posts/58016.html"},{"title":"优化Hexo的文章链接为数字编号","content":"<blockquote>\n<p>主要参考：<br />\n作者：Mculover666<br />\n博客原文：<a href=\"https://cloud.tencent.com/developer/article/1662763\">https://cloud.tencent.com/developer/article/1662763</a></p>\n</blockquote>\n<p>本文主要记录如何在 Hexo 博客框架中优化文章永久链接为数字编号。使用数字 ID 可以让 URL 更简洁易读，尤其适合有大量文章的博客。本教程基于 <a href=\"https://github.com/rozbo/hexo-abbrlink\">hexo-abbrlink 插件</a> 的使用，详细步骤如下。</p>\n<h4 id=\"背景与概述\"><a class=\"markdownIt-Anchor\" href=\"#背景与概述\"></a> 背景与概述</h4>\n<p>Hexo 是一个基于 Node.js 的快速、简单的博客框架，默认的永久链接通常基于日期和文章标题，如 <code>/2023/01/01/hello-world/</code>。然而，有些用户可能希望使用更简洁的数字 ID 格式，如 <code>/posts/12345678/</code>。研究表明，通过 <code>hexo-abbrlink</code> 插件，可以实现这种优化。该插件会为每篇文章生成一个基于哈希算法的唯一 ID，并允许你选择算法（如 CRC32）和表示方式（如十进制或十六进制）。</p>\n<blockquote>\n<p>需要注意的是，生成的数字 ID 并非严格的顺序编号（如 1, 2, 3…），而是基于文章内容的哈希值。这可能出乎一些用户的意料，他们可能期望的是基于文章创建顺序的自动递增 ID。但在 Hexo 中，这种方式需要额外的自定义脚本，而 <code>hexo-abbrlink</code> 提供了一种更简单、标准化的解决方案。</p>\n</blockquote>\n<h4 id=\"安装-hexo-abbrlink-插件\"><a class=\"markdownIt-Anchor\" href=\"#安装-hexo-abbrlink-插件\"></a> 安装 <code>hexo-abbrlink</code> 插件</h4>\n<p>首先，确保你的环境中已安装 Node.js 和 Hexo。打开终端，导航到你的 Hexo 博客根目录（通常包含 <code>package.json</code> 文件的目录）。然后，运行以下命令安装插件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure>\n<p>这条命令会通过 npm 安装 <code>hexo-abbrlink</code> 插件，并将其作为依赖项保存到 <code>package.json</code> 文件中。安装完成后，你可以在项目中看到相关的插件文件。</p>\n<p>为了帮助你理解，建议在终端中截图显示安装命令的执行过程。例如，显示 <code>npm install hexo-abbrlink --save</code> 命令的输出，包括安装进度和成功提示。</p>\n<table>\n<thead>\n<tr>\n<th>步骤</th>\n<th>描述</th>\n<th>命令/配置</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>安装 <code>hexo-abbrlink</code> 插件在博客根目录下。</td>\n<td><code>npm install hexo-abbrlink --save</code></td>\n</tr>\n<tr>\n<td>2</td>\n<td>编辑站点配置文件 <code>_config.yml</code> 在博客根目录下。</td>\n<td>将 <code>permalink</code> 后的值改为 <code>posts/:abbrlink/</code> 并在下方设置 <code>abbrlink</code> 选项：<code>alg: crc32</code>，<code>rep: dec</code> 或 <code>rep: hex</code>。</td>\n</tr>\n<tr>\n<td>3</td>\n<td>重新生成并部署博客。</td>\n<td>运行 <code>hexo clean &amp;&amp; hexo g</code> 然后 <code>hexo d</code> 部署。</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"配置-_configyml-文件\"><a class=\"markdownIt-Anchor\" href=\"#配置-_configyml-文件\"></a> 配置 <code>_config.yml</code> 文件</h4>\n<p>安装完成后，需要配置 Hexo 使用 <code>hexo-abbrlink</code> 插件生成永久链接。打开博客根目录下的 <code>_config.yml</code> 文件，使用文本编辑器（如 VS Code 或 Notepad++）进行编辑。</p>\n<ol>\n<li>\n<p><strong>设置 <code>permalink</code></strong><br />\n找到 <code>permalink</code> 设置项，将其值改为 <code>posts/:abbrlink/</code>。这表示永久链接的格式为 <code>/posts/生成的ID/</code>。例如：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">permalink:</span> <span class=\"string\">posts/:abbrlink/</span></span><br></pre></td></tr></table></figure>\n<p>如果你希望使用其他前缀（如 <code>article/</code>），可以相应调整，例如 <code>permalink: article/:abbrlink/</code>。</p>\n</li>\n<li>\n<p><strong>配置 <code>abbrlink</code> 选项</strong><br />\n在 <code>_config.yml</code> 文件中，添加或编辑 <code>abbrlink</code> 部分，设置生成 ID 的算法和表示方式。以下是一个示例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">abbrlink:</span></span><br><span class=\"line\">  <span class=\"attr\">alg:</span> <span class=\"string\">crc32</span>  <span class=\"comment\"># 算法，可以选择 md5, crc16, crc32 等</span></span><br><span class=\"line\">  <span class=\"attr\">rep:</span> <span class=\"string\">dec</span>    <span class=\"comment\"># 表示方式，dec 为十进制，hex 为十六进制</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>alg: crc32</code> 使用 CRC32 算法生成哈希值，适合大多数场景。</li>\n<li><code>rep: dec</code> 会生成十进制的数字 ID，如 1690090958；<code>rep: hex</code> 会生成十六进制的 ID，如 8ddf18fb。</li>\n</ul>\n<p>根据你的需求选择合适的组合。例如，选择 <code>crc32 &amp; dec</code> 可以生成类似 1690090958 的长数字 ID，而 <code>crc16 &amp; hex</code> 可能生成较短的十六进制 ID，如 66c8。</p>\n<p>建议截图显示 <code>_config.yml</code> 文件中相关部分的编辑界面，突出 <code>permalink</code> 和 <code>abbrlink</code> 的设置，确保读者能清楚看到配置过程。</p>\n</li>\n</ol>\n<h4 id=\"重新生成和部署博客\"><a class=\"markdownIt-Anchor\" href=\"#重新生成和部署博客\"></a> 重新生成和部署博客</h4>\n<p>配置完成后，需要重新生成博客静态文件并部署，以应用新的永久链接设置。运行以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>hexo clean</code>：清理缓存和临时文件，确保没有旧的生成文件干扰。</li>\n<li><code>hexo g</code>：生成静态文件，基于新的配置更新所有文章的链接。</li>\n<li><code>hexo d</code>：将生成的静态文件部署到你的托管平台（如 GitHub Pages 或其他服务器）。</li>\n</ul>\n<p>执行这些命令时，终端会显示进度和成功提示。建议截图显示命令的执行过程，例如显示 <code>hexo clean</code> 的清理日志、<code>hexo g</code> 的生成进度，以及 <code>hexo d</code> 的部署成功信息。</p>\n<h4 id=\"验证与测试\"><a class=\"markdownIt-Anchor\" href=\"#验证与测试\"></a> 验证与测试</h4>\n<p>完成上述步骤后，访问你的博客，检查文章的 URL 是否已更新为数字 ID 格式。例如，以前可能是 <code>/2023/01/01/hello-world/</code>，现在应为类似 <code>/posts/1690090958/</code> 的格式（取决于你的 <code>abbrlink</code> 配置）。</p>\n<p>此外，可以检查博客的 HTML 源代码，确保文章链接的 <code>href</code> 属性已更新为新的永久链接格式。如果有内部链接（如归档页或分类页），也需要确保它们正确指向新的 URL。</p>\n<p>以下是一些可能的生成链接示例（基于不同配置）：</p>\n<ul>\n<li><code>crc16 &amp; hex</code>：如 <a href=\"\">post.huazzi.me/posts/66c8.html</a></li>\n<li><code>crc16 &amp; dec</code>：如 <a href=\"\">post.huazzi.me/posts/65535.html</a></li>\n<li><code>crc32 &amp; hex</code>：如 <a href=\"\">post.huazzi.me/posts/8ddf18fb.html</a></li>\n<li><code>crc32 &amp; dec</code>：如 <a href=\"\">post.huazzi.me/posts/1690090958.html</a></li>\n</ul>\n<h4 id=\"额外提示\"><a class=\"markdownIt-Anchor\" href=\"#额外提示\"></a> 额外提示</h4>\n<ul>\n<li><strong>自定义前缀</strong>：如果你希望永久链接的前缀不是 <code>posts/</code>，可以调整 <code>permalink</code> 设置。例如，<code>permalink: article/:abbrlink/</code> 会生成类似 <code>/article/12345678/</code> 的链接。</li>\n<li><strong>更新硬编码链接</strong>：如果你的主题或文章中包含硬编码的链接（如手动写的 HTML 或 Markdown 链接），需要更新为新的永久链接格式，以避免链接失效。</li>\n<li><strong>问题排查</strong>：如果插件未按预期工作，建议参考 <a href=\"https://github.com/rozbo/hexo-abbrlink\">hexo-abbrlink 插件文档</a> 或在 Hexo 社区寻求帮助。</li>\n</ul>\n<h4 id=\"结论\"><a class=\"markdownIt-Anchor\" href=\"#结论\"></a> 结论</h4>\n<p>通过以上步骤，你已成功优化 Hexo 博客的文章永久链接为数字 ID 格式。这不仅使 URL 更简洁，还可能有助于 SEO 和用户体验。记住，生成的 ID 是基于哈希算法的唯一值，而非顺序编号，这可能与一些用户的期望不同，但它是 Hexo 中实现此类功能的标准和便捷方式。</p>\n<h4 id=\"关键引用\"><a class=\"markdownIt-Anchor\" href=\"#关键引用\"></a> 关键引用</h4>\n<ul>\n<li><a href=\"https://github.com/rozbo/hexo-abbrlink\">hexo-abbrlink 插件文档，详细说明插件功能和配置</a></li>\n<li><a href=\"https://hexo.io/docs/permalinks\">Hexo 官方永久链接文档，介绍基本配置</a></li>\n</ul>\n","isPage":false,"isDraft":false,"permalink":"https://blog.huazzi.site/posts/4010985046.html"},{"title":"WSL编译运行C语言程序","content":"<blockquote>\n<p>今天要学习的内容是 <mark><strong>命令行编译运行 C 语言程序</strong></mark>，进一步理解C语言编译运行的<strong>底层实现</strong>和<strong>编译原理</strong>相关知识，下面是命令行编译运行 C 语言程序的完整流程</p>\n</blockquote>\n<h1 id=\"一-理论讲解\"><a class=\"markdownIt-Anchor\" href=\"#一-理论讲解\"></a> 一、理论讲解</h1>\n<h2 id=\"1-编译原理概述\"><a class=\"markdownIt-Anchor\" href=\"#1-编译原理概述\"></a> 1. 编译原理概述</h2>\n<p>1.1 编译过程的四个主要阶段</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">源代码 (.c) → 预处理 → 编译 → 汇编 → 链接 → 可执行文件</span><br></pre></td></tr></table></figure>\n<p>1.2 各阶段功能</p>\n<ul>\n<li>预处理：展开宏、处理条件编译、包含头文件</li>\n<li>编译：将 C 代码转换为汇编代码</li>\n<li>汇编：将汇编代码转换为目标文件</li>\n<li>链接：将目标文件与库文件链接生成可执行文件</li>\n</ul>\n<h2 id=\"2-基本命令解析\"><a class=\"markdownIt-Anchor\" href=\"#2-基本命令解析\"></a> 2. 基本命令解析</h2>\n<p>2.1 gcc 基础编译命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcc [选项] 源文件 [-o 输出文件]</span><br></pre></td></tr></table></figure>\n<p>2.2 常用编译选项解析</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-E    <span class=\"comment\"># 仅预处理</span></span><br><span class=\"line\">-S    <span class=\"comment\"># 编译到汇编代码</span></span><br><span class=\"line\">-c    <span class=\"comment\"># 编译到目标文件</span></span><br><span class=\"line\">-o    <span class=\"comment\"># 指定输出文件名</span></span><br><span class=\"line\">-Wall <span class=\"comment\"># 显示所有警告信息</span></span><br><span class=\"line\">-g    <span class=\"comment\"># 包含调试信息</span></span><br><span class=\"line\">-O    <span class=\"comment\"># 优化级别（O1,O2,O3）</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"3-实践步骤示例\"><a class=\"markdownIt-Anchor\" href=\"#3-实践步骤示例\"></a> 3. 实践步骤示例</h2>\n<p>3.1 单文件编译</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建源文件</span></span><br><span class=\"line\">vim hello.c</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 基本编译（生成 a.out）</span></span><br><span class=\"line\">gcc hello.c</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 指定输出文件名</span></span><br><span class=\"line\">gcc hello.c -o hello</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 运行程序</span></span><br><span class=\"line\">./hello</span><br></pre></td></tr></table></figure>\n<p>3.2 分步编译示例</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 预处理</span></span><br><span class=\"line\">gcc -E hello.c -o hello.i</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成汇编代码</span></span><br><span class=\"line\">gcc -S hello.c -o hello.s</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成目标文件</span></span><br><span class=\"line\">gcc -c hello.c -o hello.o</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 链接生成可执行文件</span></span><br><span class=\"line\">gcc hello.o -o hello</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-多文件编译\"><a class=\"markdownIt-Anchor\" href=\"#4-多文件编译\"></a> 4. 多文件编译</h2>\n<p>4.1 基本结构</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">project/</span><br><span class=\"line\">  ├── main.c</span><br><span class=\"line\">  ├── func.c</span><br><span class=\"line\">  └── func.h</span><br></pre></td></tr></table></figure>\n<p>4.2 编译命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 一次性编译</span></span><br><span class=\"line\">gcc main.c func.c -o program</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 分步编译</span></span><br><span class=\"line\">gcc -c main.c -o main.o</span><br><span class=\"line\">gcc -c func.c -o func.o</span><br><span class=\"line\">gcc main.o func.o -o program</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-实用编译选项组合\"><a class=\"markdownIt-Anchor\" href=\"#5-实用编译选项组合\"></a> 5. 实用编译选项组合</h2>\n<p>5.1 开发调试版本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcc -Wall -g source.c -o debug_version</span><br></pre></td></tr></table></figure>\n<p>5.2 发布优化版本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcc -O2 -Wall source.c -o release_version</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-常见错误处理\"><a class=\"markdownIt-Anchor\" href=\"#6-常见错误处理\"></a> 6. 常见错误处理</h2>\n<p>6.1 编译错误类型</p>\n<ul>\n<li>语法错误</li>\n<li>链接错误</li>\n<li>警告信息</li>\n</ul>\n<p>6.2 排错命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 显示详细警告</span></span><br><span class=\"line\">gcc -Wall -Wextra source.c</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成调试信息</span></span><br><span class=\"line\">gcc -g source.c -o debug_version</span><br></pre></td></tr></table></figure>\n<ol start=\"7\">\n<li>编译结果验证</li>\n</ol>\n<p>7.1 基本检查</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 检查可执行权限</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span> -l hello</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 文件类型检查</span></span><br><span class=\"line\">file hello</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看依赖库</span></span><br><span class=\"line\">ldd hello</span><br></pre></td></tr></table></figure>\n<hr />\n<p>这些是命令行编译 C 语言程序的核心概念和基本操作。根据具体需求，可以组合使用不同的 <strong>「编译选项」</strong>。</p>\n<hr />\n<h1 id=\"二-实操体验\"><a class=\"markdownIt-Anchor\" href=\"#二-实操体验\"></a> 二、实操体验</h1>\n<blockquote>\n<p>接下来，让我们系统看一下在 <strong>WSL</strong> 中编译运行 C 语言程序的可行性和具体实施方法。</p>\n</blockquote>\n<h2 id=\"1-基础环境分析\"><a class=\"markdownIt-Anchor\" href=\"#1-基础环境分析\"></a> 1. 基础环境分析</h2>\n<p>1.1 WSL 的优势</p>\n<ul>\n<li>提供完整的 Linux 环境</li>\n<li>支持标准的 GNU 工具链</li>\n<li>与 Windows 完美集成</li>\n<li>性能接近原生 Linux</li>\n</ul>\n<p>1.2 必要组件</p>\n<ul>\n<li>GCC 编译器</li>\n<li>Make 工具（可选）</li>\n<li>文本编辑器</li>\n<li>调试工具（可选）</li>\n</ul>\n<ol start=\"2\">\n<li>环境搭建步骤</li>\n</ol>\n<h2 id=\"21-安装编译工具\"><a class=\"markdownIt-Anchor\" href=\"#21-安装编译工具\"></a> 2.1 安装编译工具</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 更新包管理器</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> apt update</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装编译工具链</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> apt install build-essential</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 验证安装</span></span><br><span class=\"line\">gcc --version</span><br></pre></td></tr></table></figure>\n<p>2.2 安装辅助工具</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装调试器</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> apt install gdb</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装 Make 工具</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> apt install make</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-实践示例\"><a class=\"markdownIt-Anchor\" href=\"#3-实践示例\"></a> 3. 实践示例</h2>\n<p>3.1 创建并编译简单程序</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建测试文件</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;#include &lt;stdio.h&gt;</span></span><br><span class=\"line\"><span class=\"string\">int main() &#123;</span></span><br><span class=\"line\"><span class=\"string\">    printf(&quot;Hello from WSL!\\n&quot;);</span></span><br><span class=\"line\"><span class=\"string\">    return 0;</span></span><br><span class=\"line\"><span class=\"string\">&#125;&#x27;</span> &gt; hello.c</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 编译程序</span></span><br><span class=\"line\">gcc hello.c -o hello</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 运行程序</span></span><br><span class=\"line\">./hello</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><mark><strong>编译+运行结果</strong></mark><br />\n输出：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello from WSL!</span><br></pre></td></tr></table></figure>\n</blockquote>\n<p>3.2 使用 Make 构建（进阶）</p>\n<figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Makefile 示例</span></span><br><span class=\"line\">CC=gcc</span><br><span class=\"line\">CFLAGS=-Wall</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">hello: hello.c</span></span><br><span class=\"line\">    <span class=\"variable\">$(CC)</span> <span class=\"variable\">$(CFLAGS)</span> hello.c -o hello</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-开发工作流建议\"><a class=\"markdownIt-Anchor\" href=\"#4-开发工作流建议\"></a> 4. 开发工作流建议</h2>\n<p>4.1 基础工作流</p>\n<ul>\n<li>使用 Windows 编辑器编写代码</li>\n<li>通过 WSL 终端编译运行</li>\n<li>在 WSL 环境中调试</li>\n</ul>\n<p>4.2 集成开发环境</p>\n<ul>\n<li>VSCode + WSL 扩展</li>\n<li>CLion + WSL 配置</li>\n<li>远程开发模式</li>\n</ul>\n<h2 id=\"5-性能考虑\"><a class=\"markdownIt-Anchor\" href=\"#5-性能考虑\"></a> 5. 性能考虑</h2>\n<p>5.1 优势</p>\n<ul>\n<li>接近原生 Linux 性能</li>\n<li>完整的工具链支持</li>\n<li>良好的文件系统集成</li>\n</ul>\n<p>5.2 注意事项</p>\n<ul>\n<li>跨文件系统访问可能影响性能</li>\n<li>建议将项目文件存放在 WSL 文件系统中</li>\n<li>注意内存和磁盘空间管理</li>\n</ul>\n<blockquote>\n<p>综上所述，WSL 完全支持 C 语言程序的编译和运行，且提供了接近原生 Linux 的开发体验。</p>\n</blockquote>\n","isPage":false,"isDraft":false,"permalink":"https://blog.huazzi.site/posts/8862.html"},{"title":"博客图片的解决方案","content":"<div class=\"note info flat\"><p>记录博客中图片上传问题的解决方案</p>\n</div>\n<hr />\n<h3 id=\"1cloudflare-r2存储对象服务\"><a class=\"markdownIt-Anchor\" href=\"#1cloudflare-r2存储对象服务\"></a> 1.CloudFlare R2存储对象服务</h3>\n<p>使用R2服务需要绑定银行账户或者PayPal，自己刚尝试直接绑定银联的卡的时候一直不行，后来好在L站有很多有经验的佬友给出了可行方案：</p>\n<blockquote>\n<p>使用绑定PayPal的方式，而不是直接绑定银联卡。</p>\n</blockquote>\n<p>所以也是在这里自己注册了PayPal账号</p>\n<h3 id=\"2picgo上传图片\"><a class=\"markdownIt-Anchor\" href=\"#2picgo上传图片\"></a> 2.<a href=\"https://github.com/Molunerfinn/PicGo\">PicGo</a>上传图片</h3>\n<p>PicGo自己也是刚在这里接触的，是用于上传文件到对象存储服务器（如阿里云OSS、腾讯云COS、github等）的开源软件。</p>\n<p>在它的配置上折腾了挺久的，主要是遇到了两个问题：</p>\n<blockquote>\n<p>①安装Amazon S3插件失败</p>\n<p>②图片上传失败</p>\n</blockquote>\n<p>问题①：</p>\n<p>在<code>v2.3.1</code>插件搜索不到，然后就先下载到本地然后导入，结果还是失败，现在想来应该可以在命令行中使用<code>npm</code>命令下载安装。</p>\n<p>在最新的版本<code>v2.4.0-beta9</code>中解决了这个问题，直接下载最新版本就好了。</p>\n<p>问题②：</p>\n<p>图片上传失败主要是报错： <code>Failed to upload &quot;image.png&quot; to S3: connect ETIMEDOUT 162.159.141.50:443</code></p>\n<p>这表明 PicGo 在尝试连接到 S3 服务器时发生了超时（ETIMEDOUT），可能的原因有：</p>\n<ol>\n<li>网络连接问题</li>\n</ol>\n<ul>\n<li>网络不稳定或网速较慢</li>\n<li>可能被防火墙拦截</li>\n<li>DNS 解析问题</li>\n</ul>\n<ol>\n<li>S3 配置问题</li>\n</ol>\n<ul>\n<li>S3 服务器地址配置可能不正确</li>\n<li>Access Key 或 Secret Key 可能过期或无效</li>\n</ul>\n<p>其中也试了一些方法都没用，最后是在看到了CSDN上的一篇博客后，最终解决了，具体操作：</p>\n<p><strong>在PicGo中设置代理为自己的开启的代理地址<code>http://127.0.0.1:7890</code></strong>（如下图中的②操作）</p>\n<p><img src=\"https://cbc25ff.webp.li/PicGo%E4%B8%AD%E7%9A%84S3%E9%85%8D%E7%BD%AE.png\" alt=\"PicGo中的Amazon S3配置\" /></p>\n<blockquote>\n<p>并对上传到存储桶中的文件路径进行了修改（如上图的①操作）</p>\n</blockquote>\n<p><em>至此，问题就已经解决了，终于能成功上传图片了！！！</em></p>\n<p>**晚补：**现在发现，不设置代理也可以正常上传…就是说白找了半天问题，其实没有问题…唯“时运不济”尔？</p>\n<hr />\n<p>后来自己在看到了<a href=\"https://www.pseudoyu.com/zh/\">pseudoyu</a>的<a href=\"https://www.pseudoyu.com/zh/2024/06/30/free_image_hosting_system_using_r2_webp_cloud_and_picgo/\">教程博客</a>后，又开始了折腾…</p>\n<h4 id=\"配置上传文件的链接格式\"><a class=\"markdownIt-Anchor\" href=\"#配置上传文件的链接格式\"></a> 配置上传文件的链接格式</h4>\n<p>继续进行一些配置，如下图所示，再对上传文件的链接格式进行自定义，使得上传后就会根据文件名生成以文件名为 Alt 文本的 Markdown 图片链接。</p>\n<p><img src=\"https://cbc25ff.webp.li/hua-cdn/PicGo%E4%B8%AD%E7%9A%84%E9%85%8D%E7%BD%AE-%E8%87%AA%E5%AE%9A%E4%B9%89%E9%93%BE%E6%8E%A5%E6%A0%BC%E5%BC%8F.png\" alt=\"PicGo中的配置-自定义链接格式\" /></p>\n<h3 id=\"3webp-cloud-图片优化\"><a class=\"markdownIt-Anchor\" href=\"#3webp-cloud-图片优化\"></a> 3.<a href=\"https://dashboard.webp.se\">WebP Cloud</a> 图片优化</h3>\n<blockquote>\n<p>通常本地截图或是相机拍摄的图片体积较大，对于访客来说加载时间会较长，并不直接适合互联网发布，所以需要进行一些操作先对体积进行压缩。</p>\n</blockquote>\n<h5 id=\"介绍\"><a class=\"markdownIt-Anchor\" href=\"#介绍\"></a> 介绍</h5>\n<p>通过大佬<a href=\"https://www.pseudoyu.com/zh/2024/06/30/free_image_hosting_system_using_r2_webp_cloud_and_picgo/\">pseudoyu</a>的博客中，了解到了<a href=\"https://webp.se/\">webP Cloud</a>服务：可以在几乎不改变画质的情况下大幅缩小图片体积，加快整体站点加载速度，除了图片体积减少外，还提供了缓存、添加水印、图片滤镜等更多实用的功能，并提供了自定义 Header 等配置选项。</p>\n<h5 id=\"使用\"><a class=\"markdownIt-Anchor\" href=\"#使用\"></a> 使用</h5>\n<blockquote>\n<p>发现S3插件有两个版本，要选择<code>s3-own 1.4.5</code>的那一个，配置中才有“自定义域名”选项，这个选项之后配置WebP Cloud代理需要用到。</p>\n<p><img src=\"https://cbc25ff.webp.li/hua-cdn/%E6%8F%92%E4%BB%B6%E9%80%89%E6%8B%A9.png\" alt=\"s3插件选择\" /></p>\n</blockquote>\n<p>步骤：</p>\n<ol>\n<li>\n<p>使用github登录</p>\n</li>\n<li>\n<p>创建代理<br />\n<img src=\"https://cbc25ff.webp.li/hua-cdn/webp-cloud%E5%88%9B%E5%BB%BA%E4%BB%A3%E7%90%86%E9%85%8D%E7%BD%AE.png\" alt=\"webp-cloud创建代理配置\" /></p>\n</li>\n<li>\n<p>在PicGo中进行配置</p>\n<p>由于最终需要放在博客中的图片是经过 WebP Cloud 代理过的链接，所以需要回到 PicGo 的「图床设置」中，将「自定义域名」改为我们刚配置的 WebP Cloud 代理地址，即格式为 <code>xxx.webp.li</code> 的代理链接或其他自定义域名。</p>\n</li>\n</ol>\n<p><img src=\"https://cbc25ff.webp.li/hua-cdn/%E5%9C%A8PicGo%E9%85%8D%E7%BD%AEwebp-Cloud%E4%BB%A3%E7%90%86.png\" alt=\"在PicGo配置webp-Cloud代理\" /></p>\n<p><strong>over！</strong></p>\n<hr />\n<p><strong>总结一下：</strong></p>\n<ol>\n<li>使用上了CloudFlare R2对象存储服务；</li>\n<li>会使用PicGo上传图片到存储服务器；</li>\n<li>学会了使用WebP Cloud服务对上传的图片进行优化。</li>\n</ol>\n<p>到此，折腾也算告一段落了，然而——”折腾“——没用终点…</p>\n<p>好饿，吃饭去喽~</p>\n<hr />\n<blockquote>\n<p>晚上，我又来折腾了，因为我发现<strong>使用PicGo上传图片后得到的Webp Cloud代理URL是无效的</strong>，于是又找了半天原因…</p>\n</blockquote>\n<p>最后，我找到了原因。</p>\n","isPage":false,"isDraft":false,"permalink":"https://blog.huazzi.site/posts/28725.html"},{"title":"在网页中使用 LaTeX 数学公式块的步骤记录","content":"<p>以下是<strong>在网页中使用 LaTeX 数学公式块的完整步骤总结</strong>，记录如何让网页正确渲染 LaTeX 数学表达式（如 <code>\\(H(X) = -\\sum p(x) \\log p(x)\\)</code> 这样的公式）：</p>\n<hr />\n<h2 id=\"使用-latex-数学公式块的完整步骤以-katex-为例\"><a class=\"markdownIt-Anchor\" href=\"#使用-latex-数学公式块的完整步骤以-katex-为例\"></a> ✅ 使用 LaTeX 数学公式块的完整步骤（以 KaTeX 为例）</h2>\n<hr />\n<h3 id=\"目标问题\"><a class=\"markdownIt-Anchor\" href=\"#目标问题\"></a> 🎯 目标问题：</h3>\n<p>LaTeX 数学公式（如 <code>\\(...\\)</code> 或 <code>\\[...\\]</code>）在 HTML 页面中不会自动渲染为漂亮的数学样式，而是显示成原始字符串。</p>\n<hr />\n<h3 id=\"解决方案\"><a class=\"markdownIt-Anchor\" href=\"#解决方案\"></a> 🧠 解决方案：</h3>\n<p>引入一个专门处理数学公式渲染的 JavaScript 库。推荐使用：</p>\n<ul>\n<li>✅ <strong>KaTeX</strong>：速度快，样式精美，适合大多数需求。</li>\n<li>🔄 <strong>MathJax</strong>：更强大，支持复杂的 LaTeX 语法，但加载速度稍慢。</li>\n</ul>\n<hr />\n<h2 id=\"使用-katex-实现数学公式渲染的步骤\"><a class=\"markdownIt-Anchor\" href=\"#使用-katex-实现数学公式渲染的步骤\"></a> 🪄 使用 KaTeX 实现数学公式渲染的步骤</h2>\n<hr />\n<h3 id=\"步骤-1引入-katex-的-css-和-js-文件\"><a class=\"markdownIt-Anchor\" href=\"#步骤-1引入-katex-的-css-和-js-文件\"></a> ✅ 步骤 1：引入 KaTeX 的 CSS 和 JS 文件</h3>\n<p>在你的 HTML 文件的 <code>&lt;head&gt;</code> 标签中添加以下内容：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- KaTeX for Math Rendering --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/katex@0.16.10/dist/katex.min.css&quot;</span> <span class=\"attr\">integrity</span>=<span class=\"string\">&quot;sha384-wcIxkf4k558fYv3mQP6ojKOqsMIqTeLQvrJcezUhkGWZoJaoGsdKrPYMNH8UmKzA&quot;</span> <span class=\"attr\">crossorigin</span>=<span class=\"string\">&quot;anonymous&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">defer</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/katex@0.16.10/dist/katex.min.js&quot;</span> <span class=\"attr\">integrity</span>=<span class=\"string\">&quot;sha384-hIoBPJpTUs74ddyc4bFZSM1TVlQDA60VBbJS0oA934VSz82sBx1jxWmkAVsyXtNg&quot;</span> <span class=\"attr\">crossorigin</span>=<span class=\"string\">&quot;anonymous&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">defer</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/katex@0.16.10/dist/contrib/auto-render.min.js&quot;</span> <span class=\"attr\">integrity</span>=<span class=\"string\">&quot;sha384-43gviWU0YVjaL4Ji4vLqEsIaaqpch6nzIuEepGIcTISLdUcGAvPu+6Zf0zLhc8yK&quot;</span> <span class=\"attr\">crossorigin</span>=<span class=\"string\">&quot;anonymous&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- End KaTeX --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>📌 <strong>说明：</strong></p>\n<ul>\n<li><code>katex.min.css</code>：用于公式的样式。</li>\n<li><code>katex.min.js</code>：核心库，处理解析与渲染。</li>\n<li><code>auto-render.min.js</code>：自动查找和渲染页面上的数学表达式。</li>\n</ul>\n<hr />\n<h3 id=\"步骤-2在-dom-加载完成后初始化公式渲染\"><a class=\"markdownIt-Anchor\" href=\"#步骤-2在-dom-加载完成后初始化公式渲染\"></a> ✅ 步骤 2：在 DOM 加载完成后初始化公式渲染</h3>\n<p>在 HTML 文件底部 <code>&lt;body&gt;</code> 标签前添加 JavaScript 初始化代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;DOMContentLoaded&quot;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">window</span>.<span class=\"property\">renderMathInElement</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">renderMathInElement</span>(<span class=\"variable language_\">document</span>.<span class=\"property\">body</span>, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">delimiters</span>: [</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#123;<span class=\"attr\">left</span>: <span class=\"string\">&quot;$$&quot;</span>, <span class=\"attr\">right</span>: <span class=\"string\">&quot;$$&quot;</span>, <span class=\"attr\">display</span>: <span class=\"literal\">true</span>&#125;,      <span class=\"comment\">// $$ 显示模式</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#123;<span class=\"attr\">left</span>: <span class=\"string\">&quot;\\\\[&quot;</span>, <span class=\"attr\">right</span>: <span class=\"string\">&quot;\\\\]&quot;</span>, <span class=\"attr\">display</span>: <span class=\"literal\">true</span>&#125;,    <span class=\"comment\">// \\[...\\] 显示模式</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#123;<span class=\"attr\">left</span>: <span class=\"string\">&quot;\\\\(&quot;</span>, <span class=\"attr\">right</span>: <span class=\"string\">&quot;\\\\)&quot;</span>, <span class=\"attr\">display</span>: <span class=\"literal\">false</span>&#125;    <span class=\"comment\">// \\(...\\) 行内模式</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">// &#123;left: &quot;$&quot;, right: &quot;$&quot;, display: false&#125;     // 可选：使用单个 $ 包裹</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                ],</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">throwOnError</span>: <span class=\"literal\">false</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">warn</span>(<span class=\"string\">&quot;KaTeX auto-render script not loaded yet.&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>📌 <strong>说明：</strong></p>\n<ul>\n<li><code>renderMathInElement(document.body, &#123;...&#125;)</code> 表示扫描整个页面 <code>&lt;body&gt;</code> 中的内容，自动识别数学表达式。</li>\n<li><code>delimiters</code> 指定哪种 LaTeX 包裹方式会被识别：\n<ul>\n<li><code>\\( \\)</code> 和 <code>\\[ \\]</code> 是 LaTeX 标准语法。</li>\n<li><code>$$ $$</code> 是常见的 display 模式替代形式。</li>\n</ul>\n</li>\n<li><code>throwOnError: false</code> 表示如果某个公式出错，页面继续正常渲染。</li>\n</ul>\n<hr />\n<h3 id=\"步骤-3在-html-中写入公式使用-latex-语法\"><a class=\"markdownIt-Anchor\" href=\"#步骤-3在-html-中写入公式使用-latex-语法\"></a> ✅ 步骤 3：在 HTML 中写入公式（使用 LaTeX 语法）</h3>\n<p>你现在可以在 HTML 页面任意位置插入 LaTeX 数学表达式，例如：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>信息熵的定义为：\\\\( H(X) = -\\sum_&#123;i=1&#125;^&#123;n&#125; p(x_i) \\log_b p(x_i) \\\\)<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>或者使用块状公式：<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    \\[</span><br><span class=\"line\">        H(X) = -\\sum_&#123;i=1&#125;^&#123;n&#125; p(x_i) \\log_2 p(x_i)</span><br><span class=\"line\">    \\]</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<hr />\n<h2 id=\"最终效果\"><a class=\"markdownIt-Anchor\" href=\"#最终效果\"></a> 🎉 最终效果</h2>\n<p>页面加载完成后，KaTeX 会自动扫描这些公式，并将其渲染为美观的数学公式样式，无需手动处理任何样式或标签。</p>\n<hr />\n<h2 id=\"小贴士\"><a class=\"markdownIt-Anchor\" href=\"#小贴士\"></a> 📝 小贴士</h2>\n<ul>\n<li>KaTeX 不能渲染所有 LaTeX 宏，复杂公式请测试或参考官方文档。</li>\n<li>页面中插入公式内容时，请避免 HTML 实体冲突（如 <code>&lt;</code>、<code>&amp;</code> 等）。</li>\n<li>如果你使用 Markdown 转换器，也可以考虑 Markdown + KaTeX 的支持。</li>\n</ul>\n","isPage":false,"isDraft":false,"permalink":"https://blog.huazzi.site/posts/60356.html"},{"title":"效率工具「AutoHotkey」","content":"<div class=\"note info flat\"><p>本来主要是想找一下「」和『』，然后便找到了以下方法，可以实现输出大部分的特殊字符</p>\n</div>\n<hr />\n<h2 id=\"通过输入法输出\"><a class=\"markdownIt-Anchor\" href=\"#通过输入法输出\"></a> 通过输入法输出</h2>\n<ol>\n<li>\n<p>『Ctr + shift + Z』进入搜狗输入法的『符号大全』</p>\n</li>\n<li>\n<p>在『标点符号』项可以找到「」和『』</p>\n</li>\n</ol>\n<hr />\n<h2 id=\"使用autohotkey自定义替换\"><a class=\"markdownIt-Anchor\" href=\"#使用autohotkey自定义替换\"></a> 使用<a href=\"https://www.autohotkey.com/\">AutoHotkey</a>自定义替换</h2>\n<div class=\"note primary flat\"><p>每次想要用到这两个符号的时候都要进入输入法的『符号大全』里面找的话，操作还是没那么方便，所以就想着找到别的更高效的方法，于是就查到了可以使用『<a href=\"https://www.autohotkey.com/\">AutoHotkey</a>』这个工具进行自定义一些热键。</p>\n</div>\n<h3 id=\"autohotkey-简介\"><a class=\"markdownIt-Anchor\" href=\"#autohotkey-简介\"></a> <strong>AutoHotkey 简介</strong></h3>\n<p><strong>AutoHotkey (AHK)</strong> 是一个功能强大的开源脚本语言和自动化工具，主要用于 Windows 操作系统。它通过简洁的语法和强大的功能，使用户能够快速定义快捷键、宏、文本替换规则，甚至开发功能复杂的应用程序。</p>\n<hr />\n<h3 id=\"主要特点\"><a class=\"markdownIt-Anchor\" href=\"#主要特点\"></a> <strong>主要特点</strong></h3>\n<ol>\n<li><strong>快捷键绑定</strong>：\n<ul>\n<li>定义自定义快捷键，如组合键（<code>Ctrl+Alt+T</code>）、鼠标按键，甚至设备专用键。</li>\n<li>适用于提高工作效率，如快速启动程序、操作窗口等。</li>\n</ul>\n</li>\n<li><strong>文本替换</strong>：\n<ul>\n<li>设置特定的输入触发特定的输出，例如将 <code>btw</code> 自动替换为 <code>by the way</code>。</li>\n</ul>\n</li>\n<li><strong>脚本自动化</strong>：\n<ul>\n<li>模拟鼠标点击、键盘输入等操作，自动完成繁琐重复的任务。</li>\n</ul>\n</li>\n<li><strong>窗口管理</strong>：\n<ul>\n<li>自动调整窗口大小、位置，切换窗口，隐藏窗口等。</li>\n</ul>\n</li>\n<li><strong>硬件扩展支持</strong>：\n<ul>\n<li>自定义处理特殊硬件设备（如自定义游戏键盘和鼠标按键的功能）。</li>\n</ul>\n</li>\n<li><strong>轻量级与开源</strong>：\n<ul>\n<li>脚本体积小巧，运行效率高，完全免费，拥有活跃的社区支持。</li>\n</ul>\n</li>\n</ol>\n<hr />\n<h3 id=\"常见用途\"><a class=\"markdownIt-Anchor\" href=\"#常见用途\"></a> <strong>常见用途</strong></h3>\n<ol>\n<li><strong>文本和脚本自动化</strong>：\n<ul>\n<li>录入经常使用的短语。</li>\n<li>快速批量修改文件名。</li>\n</ul>\n</li>\n<li><strong>提高工作效率</strong>：\n<ul>\n<li>快捷打开文件、文件夹或网站。</li>\n<li>一键填写表单。</li>\n</ul>\n</li>\n<li><strong>游戏辅助</strong>：\n<ul>\n<li>编写简单的辅助脚本，如自动点击、宏操作等。</li>\n</ul>\n</li>\n<li><strong>窗口管理</strong>：\n<ul>\n<li>在多显示器之间快速移动窗口。</li>\n<li>根据需求排列窗口位置和大小。</li>\n</ul>\n</li>\n<li><strong>开发工具</strong>：\n<ul>\n<li>定制化工具和简单程序，如定时器、弹窗工具。</li>\n</ul>\n</li>\n</ol>\n<hr />\n<h3 id=\"基本语法\"><a class=\"markdownIt-Anchor\" href=\"#基本语法\"></a> <strong>基本语法</strong></h3>\n<p>AutoHotkey 的语法简单易学。以下是一些基本示例：</p>\n<ol>\n<li>\n<p><strong>快捷键绑定</strong></p>\n<figure class=\"highlight ahk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">^j::</span>Send, Hello, AutoHotkey!</span><br></pre></td></tr></table></figure>\n<p><strong>解释</strong>：</p>\n<ul>\n<li><code>^</code> 表示 <code>Ctrl</code> 键，<code>^j</code> 表示 <code>Ctrl+J</code>。</li>\n<li>按下 <code>Ctrl+J</code> 时，发送文本 <code>Hello, AutoHotkey!</code>。</li>\n</ul>\n</li>\n<li>\n<p><strong>文本替换</strong></p>\n<figure class=\"highlight ahk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">::btw::</span>by the way</span><br></pre></td></tr></table></figure>\n<p><strong>解释</strong>：</p>\n<ul>\n<li>输入 <code>btw</code> 后按空格，自动替换为 <code>by the way</code>。</li>\n</ul>\n</li>\n<li>\n<p><strong>自动化任务</strong></p>\n<figure class=\"highlight ahk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">F1::</span></span><br><span class=\"line\"><span class=\"built_in\">    Run,</span> notepad.exe</span><br><span class=\"line\"><span class=\"built_in\">    Sleep,</span> <span class=\"number\">1000</span></span><br><span class=\"line\"><span class=\"built_in\">    Send,</span> This is an automated script.&#123;Enter&#125;</span><br><span class=\"line\"><span class=\"keyword\">Return</span></span><br></pre></td></tr></table></figure>\n<p><strong>解释</strong>：</p>\n<ul>\n<li>按 <code>F1</code> 键时，打开记事本，等待 1 秒后输入一行文本。</li>\n</ul>\n</li>\n<li>\n<p><strong>窗口管理</strong></p>\n<figure class=\"highlight ahk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">#z::</span>WinMaximize, A</span><br></pre></td></tr></table></figure>\n<p><strong>解释</strong>：</p>\n<ul>\n<li><code>#</code> 表示 <code>Win</code> 键，<code>#z</code> 表示 <code>Win+Z</code>。</li>\n<li>按下组合键时，最大化当前活动窗口。</li>\n</ul>\n</li>\n</ol>\n<hr />\n<h3 id=\"安装与使用\"><a class=\"markdownIt-Anchor\" href=\"#安装与使用\"></a> <strong>安装与使用</strong></h3>\n<ol>\n<li>\n<p><strong>下载</strong>： 从 <a href=\"https://www.autohotkey.com/\">AutoHotkey 官方网站</a> 下载并安装。</p>\n</li>\n<li>\n<p><strong>创建脚本</strong>：</p>\n</li>\n</ol>\n<p><img src=\"https://cbc25ff.webp.li/hua-cdn/%E5%88%9B%E5%BB%BA%E8%84%9A%E6%9C%AC.png\" alt=\"创建脚本\" /></p>\n<ul>\n<li>\n<p>新建一个 <code>.ahk</code> 文件（如 <code>MyScript.ahk</code>）。</p>\n</li>\n<li>\n<p>使用记事本或任意代码编辑器打开，编写脚本内容。</p>\n</li>\n<li>\n<p>示例：<code>|-</code>替换为 <code>「</code>，<code>-|</code> 替换为 <code>」</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Requires AutoHotkey v2.0</span></span><br><span class=\"line\"></span><br><span class=\"line\">::|-::「</span><br><span class=\"line\">::-|::」</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ol start=\"3\">\n<li>\n<p><strong>运行脚本</strong>：</p>\n<ul>\n<li>\n<p>双击 <code>.ahk</code> 文件即可运行脚本。</p>\n</li>\n<li>\n<p>使用托盘图标可以进行暂停、退出脚本或重新加载操作。</p>\n<div class=\"note success flat\"><p>不知道啥是「托盘图标」？看下面指示</p>\n<p><img src=\"https://cbc25ff.webp.li/hua-cdn/%E6%89%98%E7%9B%98%E7%9A%84%E4%BD%8D%E7%BD%AE.webp\" alt=\"托盘的位置\" /></p>\n<p>找到对应的「图标」，点击鼠标右键就会出现「操作选项」了。</p>\n</div>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>编译为可执行文件</strong>：</p>\n<ul>\n<li>进入AutoHotKey，选择「Complie」进行编译 <code>.ahk</code> 文件</li>\n</ul>\n<p><img src=\"https://cbc25ff.webp.li/hua-cdn/%E7%BC%96%E8%AF%91%E8%84%9A%E6%9C%AC.png\" alt=\"编译脚本\" /></p>\n<ul>\n<li>选择之前写好的<strong>脚本</strong>，生成 <code>.exe</code> 文件以「独立运行」即之后的每次运行不再需要AutoHotKey，方便设置「<a href=\"#id1\">开机自启动</a>」。</li>\n</ul>\n</li>\n</ol>\n<p><img src=\"https://cbc25ff.webp.li/hua-cdn/%E7%BC%96%E8%AF%91%E7%9A%84%E9%80%89%E9%A1%B9%E8%AE%BE%E7%BD%AE.png\" alt=\"编译的选项设置\" /></p>\n<h3 id=\"设置脚本开机自启动\"><a class=\"markdownIt-Anchor\" href=\"#设置脚本开机自启动\"></a> 设置脚本开机自启动</h3>\n<div class=\"note success flat\"><p>为了使脚本每次开机之后都自动生效，不需要再手动开启，可以直接设置「开机自启动」，只需要将上面编辑好的.exe可执行文件放到「startup」目录下。</p>\n</div>\n<ol>\n<li>\n<p>快速进入「startup」目录：点击Ctr+R快捷键，输入<code>shell:startup</code>，回车进入</p>\n<p><img src=\"https://cbc25ff.webp.li/hua-cdn/%E8%BF%9B%E5%85%A5%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF%E5%8A%A8%E7%9B%AE%E5%BD%95.png\" alt=\"进入开机自启动目录\" /></p>\n<blockquote>\n<p>当然也可以通过「资源管理器」一步步进入目录</p>\n</blockquote>\n</li>\n<li>\n<p>将.exe文件复制到该目录下，即可<br />\n<img src=\"https://cbc25ff.webp.li/hua-cdn/%E6%B7%BB%E5%8A%A0%E4%B8%8A%E7%BC%96%E8%AF%91%E5%A5%BD%E7%9A%84.exe%E6%96%87%E4%BB%B6.png\" alt=\"添加上编译好的.exe文件\" /></p>\n</li>\n</ol>\n<hr />\n<h3 id=\"优势与局限\"><a class=\"markdownIt-Anchor\" href=\"#优势与局限\"></a> 优势与局限</h3>\n<h4 id=\"优势\"><a class=\"markdownIt-Anchor\" href=\"#优势\"></a> 优势</h4>\n<ul>\n<li><strong>易学易用</strong>：简单语法，适合快速上手。</li>\n<li><strong>功能丰富</strong>：从快捷键到窗口管理，几乎覆盖所有桌面操作需求。</li>\n<li><strong>社区支持</strong>：拥有丰富的教程和脚本资源。</li>\n</ul>\n<h4 id=\"局限\"><a class=\"markdownIt-Anchor\" href=\"#局限\"></a> 局限</h4>\n<ul>\n<li><strong>仅限 Windows 平台</strong>：无法在 macOS(可使用<a href=\"https://textexpander.com/\">textexpander</a>) 或 Linux 上使用。</li>\n<li><strong>高级功能需要学习</strong>：复杂脚本的编写可能需要掌握更深入的编程知识。</li>\n<li><strong>与防作弊软件冲突</strong>：用于游戏时，可能被误判为作弊工具。</li>\n</ul>\n<hr />\n<h3 id=\"学习资源\"><a class=\"markdownIt-Anchor\" href=\"#学习资源\"></a> 学习资源</h3>\n<ol>\n<li>官方文档：\n<ul>\n<li><a href=\"https://www.autohotkey.com/docs/\">AutoHotkey 官方文档</a></li>\n</ul>\n</li>\n<li>社区论坛：\n<ul>\n<li><a href=\"https://www.autohotkey.com/boards/\">AutoHotkey 社区</a></li>\n</ul>\n</li>\n<li>教程网站：\n<ul>\n<li><a href=\"https://autohotkey.com/docs/Tutorial.htm\">AHK教程合集</a></li>\n</ul>\n</li>\n</ol>\n<hr />\n<h3 id=\"autohotkey介绍总结\"><a class=\"markdownIt-Anchor\" href=\"#autohotkey介绍总结\"></a> AutoHotKey介绍总结</h3>\n<p>AutoHotkey 是一款小巧但功能强大的工具，适合想要提升工作效率、自动化任务或定制系统功能的用户。<br />\n<br></p>\n<hr />\n<h2 id=\"实现自定义输出特殊字符\"><a class=\"markdownIt-Anchor\" href=\"#实现自定义输出特殊字符\"></a> 实现自定义输出特殊字符</h2>\n<p>在简单了解之后，AutoHotKey的功能完全可以实现我的需求，于是便开始根据自己目前的需要，自定义输出特殊字符。</p>\n<ol>\n<li>\n<p>明确替换规则</p>\n<p><code>|-</code>替换成<code>「</code></p>\n<p><code>-|</code>替换成<code>」</code></p>\n<p><code>|=</code>替换成<code>『</code></p>\n<p><code>=|</code>替换成<code>』</code></p>\n</li>\n<li>\n<p>编写脚本</p>\n<figure class=\"highlight ahk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#Requires AutoHotkey v2.0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title\">:*:|-::</span>「</span><br><span class=\"line\"><span class=\"title\">:*:-|::</span>」</span><br><span class=\"line\"><span class=\"title\">:*:|=::</span>『</span><br><span class=\"line\"><span class=\"title\">:*:=|::</span>』</span><br></pre></td></tr></table></figure>\n<div class=\"note success flat\"><p><strong>与一般AutoHotKey的「文本替换」脚本的小小改进：</strong></p>\n<p>关键的修改是在每个替换规则前添加 <code>:*:</code>，这个星号的作用是告诉 AutoHotkey 在检测到触发文本时立即执行替换，而不需要等待终止符（比如空格）。</p>\n<p>这样做可以避免每次都要多输出一个「空格」才能进行替换。</p>\n</div>\n<ol start=\"3\">\n<li>\n<p>编译成.exe</p>\n<blockquote>\n<p>如前面所述</p>\n</blockquote>\n</li>\n<li>\n<p>设置开机自启动</p>\n<blockquote>\n<p>如前面所述</p>\n</blockquote>\n</li>\n</ol>\n</li>\n</ol>\n<hr />\n<div class=\"note success flat\"><p><code>「」</code>和<code>『』</code>一般都是成对出现的，所以可以进一步优化脚本：</p>\n<p>将‘|-’替换成‘「」’，并使得替换之后，光标停留在‘「’和‘」’之间，方便输入内容；</p>\n<p>将‘|=’替换成‘『』’，并使得替换之后，光标停留在‘『’和‘』’之间，方便输入内容。</p>\n</div>\n<p>改进之后的脚本：</p>\n<figure class=\"highlight ahk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#Requires AutoHotkey v2.0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title\">:*:|-::</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    SendInput <span class=\"string\">&quot;「」&quot;</span></span><br><span class=\"line\">    SendInput <span class=\"string\">&quot;&#123;Left&#125;&quot;</span>  <span class=\"comment\">; 移动光标到括号中间</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title\">:*:|=::</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    SendInput <span class=\"string\">&quot;『』&quot;</span></span><br><span class=\"line\">    SendInput <span class=\"string\">&quot;&#123;Left&#125;&quot;</span>  <span class=\"comment\">; 移动光标到括号中间</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">; 保留单独的右括号输入</span></span><br><span class=\"line\"><span class=\"title\">:*:-|::</span>」</span><br><span class=\"line\"><span class=\"title\">:*:=|::</span>』</span><br></pre></td></tr></table></figure>\n<p>这个新版本脚本可以：</p>\n<ol>\n<li>输入 <code>|-</code> 时，自动输入一对 <code>「」</code> 并将光标置于中间</li>\n<li>输入 <code>|=</code> 时，自动输入一对 <code>『』</code> 并将光标置于中间</li>\n<li>仍然保留了单独输入右括号的功能（使用 <code>-|</code> 和 <code>=|</code>）</li>\n</ol>\n<p>使用效果：</p>\n<ul>\n<li>输入 <code>|-</code> → 得到 <code>「|」</code>（|表示光标位置）</li>\n<li>输入 <code>|=</code> → 得到 <code>『|』</code>（|表示光标位置）</li>\n<li>输入 <code>-|</code> → 得到 <code>」</code></li>\n<li>输入 <code>=|</code> → 得到 <code>』</code></li>\n</ul>\n<hr />\n<p>当然，我这么用似乎有点大材小用了，AutoHotKey的强大功能可以实现更多功能，帮助提高效率，更多有趣用法等待被探索。</p>\n<p>附：「<a href=\"https://www.cnblogs.com/huazzi/p/18643806\">AutoHotkey 效率提升脚本集</a>」</p>\n<p><strong>小感慨</strong></p>\n<p>没想到会因为先前的一个「特殊字符输出」问题，而最后学到了使用「AutoHotKey」这个工具，感觉很有收获。<em>似乎是对现状的不满足，推动自己去探索，去思考，最后有所收获。</em></p>\n","isPage":false,"isDraft":false,"permalink":"https://blog.huazzi.site/posts/13096.html"},{"title":"建站成功记录","content":"<div class=\"note success flat\"><p>建站成功，记录一下。</p>\n</div>\n<p>写博客是为了做一些「记录」，做一些技术笔记、记录一些读书感想以及有时突然迸发的感悟等。</p>\n<p>之前一般是在CSDN上写写，后来发现开始有点点粉丝了，于是自己的写作风格就开始发生了改变，都在想着怎么写吸引更多的读者关注，感觉心境发生了变化，所以想换个环境写博客，于是就想到了自建站。</p>\n<p>在前段时间参观完了大佬们各种优雅美观的博客站之后，「建站」的想法便一直在自己的脑中挥之不去，当时由于当时正面临备考期末，所以便无奈推迟了。</p>\n<p>今天刚考完最后一科计算机网络，真是开心极了，一方面要回家了；另一方面，自己也有时间可以去做自己想做的事了。</p>\n<p>在这天下午，自己就开始尝试使用「<a href=\"https://hexo.io/zh-cn/docs/index.html\">Hexo</a>」搭建这个博客站，得益于已经有比较成熟的说明文档以及网上大佬们的经验分享，再加上有聪明的「克劳德」辅助，这个过程比我想象中的要顺利很多。</p>\n<p>我使用的是「<a href=\"https://hexo.fluid-dev.com/docs/\">Fluid</a>」主题，修改一下自己喜欢的背景，再在原本的框架上添加一些自己需要的功能，如LaTeX支持等。</p>\n<p>目前已经基本满足自己的需要，之后如果想到别的的话再说。</p>\n<p><strong>Happy Coding! Happy Writing！</strong></p>\n","isPage":false,"isDraft":false,"permalink":"https://blog.huazzi.site/posts/5985.html"},{"title":"意外之喜—「CrossFire」","content":"<blockquote>\n<p>在日常逛L站时，偶然发现了“友链”功能，机缘巧合下进入了<a href=\"https://inkcodes.com/\">specialhua</a>的博客，又被吸引着点进了其中一篇博客，于是便通过specialhua的博客看到了黑夜的这篇文章，感觉就像博客中所言，颇感鼓舞！也感觉自己有些许幸运，能瞥见如此的学习方法和思维，虽然高考离自己已经相去甚远，但是对自己现在乃至以后的学习、思考方式还是产生了一定的影响。<br />\n颇感幸运能结识<a href=\"https://inkcodes.com/\">specialhua</a>，而也读得这篇文章，谨于此作为记录。</p>\n</blockquote>\n<p>原文标题似乎是“CrossFire！”，原文内容如下。</p>\n<hr />\n<p><strong>声明：</strong></p>\n<p>如果你不是一个能坚持的人，如果你不是一个充满成功欲的人，如果你是一 个甘愿平庸的人，如果你是一个怎么都振作不起来的人，如果你是一个很厌恶学习的人，那后面的内容不必看了，什么方法都救不了你（所以后面的内容我假设你不是这样的人）。</p>\n<p>切记切记，一颗慵懒的大脑，一个懒散的生活习惯是绝对不可能做出让别人惊叹的成果！</p>\n<p>与其机械的拼时间战，不如在短暂的时间内，让自己大脑高速运转起来，精神振奋起来，目标明确起来，好胜心点燃起来，让之前的挫败感不再，让高三的沉闷不再，让高考的压力不再，让之前课业的负担不再，让我们的梦在六月翱翔！</p>\n<p>流星，因为短暂而美丽，划过黑寂的夜空，释放出那一闪而逝的光芒，虽然微弱，但却没有人能无视它的存在。人生如同流星，充满了精彩与传奇，如同一支美丽的传说，究竟是否会象流星那样短暂，别人决定不了，上天也决定不了，只有自己来掌握。如果愿意，流星也可以变成永恒。</p>\n<p>——谢文东</p>\n<p>人生当如流星，让自己成为考场上的一束流星吧！</p>\n<hr />\n<h3 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h3>\n<p>那个帖子开始，虽然我一直没说明，但我真正用意是引导大家进入一种自由学习的状态，比如开头说的“藐视老师、打破权威”以及各种各样的老师会比较反对的技巧（有些很灵活的老师绝不会反对），其实都是为了打破很大一部分同学原来的思维定势，当然，肯定会引来很多质疑。</p>\n<p>学习、一定要跟着老师走？</p>\n<p>作业、一定要做或者全做？</p>\n<p>课、一定要听？</p>\n<p>其实、当你真正理解什么是自由的学习，这些问题你便有了自己的回答。</p>\n<p>目前为止（注意、是目前为止），你学习是为了什么？高考！</p>\n<p>山东虽然实行素质教育、但在录取时，却仍然只以分数为唯一标准，确实让人心寒。素质教育尚且如此，其他仍然实行应试教育的省份呢？我一些大学同学，高三学校晚上加班到 十一点的也有很多，可见高考真是害人不浅。</p>\n<p>不过，说实话，很多同学学习都是在做无用功，成绩不见长进，努力却不见收获慢慢也就失去奋斗的动力。。。这篇文章、并不具体提出怎样的学习方法，而是偏重于学习方法的原理，以及对以前我说的争议性较大并且很多同学没有正确理解的方法做出解释，授之以鱼不如授之以渔啊！</p>\n<p>任何一件事的成功，需要的是什么？方法仅仅是一方面，再好的方法，没有自身素质的 支撑，绝难成功。自身素质其中决定因素便是灵活的思维（相对于定势的思维而不是指聪不聪明，大家智商都一样、除非是弱智，但是显然、弱智是不会来这里）以及长久的成功的愿望。</p>\n<p>之前，我以为，大多能理解我说的意思，但是后来发现明显大多不能理解我的意思，这当然于我的表述有关，但是、要用多少字才能让大部分同学理解我的意思呢？？而且有些东西确实难以言传、比如“什么是自由的学习”、诚言我也只能用一些例子以期待大家能自己体 会到我想要表达的意思。<br />\n这篇文章、我尽量用一些原理让大家理解更多的原理，从而最终明白什么是自由的学习。</p>\n<hr />\n<h3 id=\"正文\"><a class=\"markdownIt-Anchor\" href=\"#正文\"></a> 正文</h3>\n<h4 id=\"一-考纲\"><a class=\"markdownIt-Anchor\" href=\"#一-考纲\"></a> 一、考纲！</h4>\n<p>把考纲放在第一个讲足以说明它的重要性，夸张的打个比方，如果考纲对数列不做要求了、 那如果你还继续攻数列的话、岂不是做无用功？</p>\n<p>当时很多人质疑、说还剩几天就高考了，这方法又有何用？</p>\n<p>我说，这十天、如果是我、我能提高一百分。就算明天上午高考、那我还有今天一上午、 下午、晚上的时间来准备考试、足以（矣）！</p>\n<p>以我期末考为例子来说明怎么突击，说明考纲的核心地位。大学里有些科目有些人纯粹是靠临时突击来应对的。平时因为要学专业外或者由于一些活动等等的原因、我不少科目（比如高数、物理）平时没学过多少。不过一般考试前都有一天左右的空闲时间！这一天、足以让一个会学习的人而且会考试的人完美应对一场大学期末考！（我不是在教 大家学坏哈。。。我只是用这个例子来阐述考纲的重要性。。。） 当然、前提是这本书起码得会三分之一吧？如果一页都没看过书、一窍不通的话、难度就 太大了，那一天不够~。</p>\n<p>上午。<br />\n首先、用各种关系弄到几份这科目前几年的期末考试题（相当于高考考纲、或者本省高考题！） 然后看课本目录、对比着考题把考点勾出来，然后再翻看另一张考题、继续勾考点，直到把卷子都弄完（一般这卷子很难弄、也就两三张）。这样下来，便很清楚的知道了要考什么。 然后用三个小时左右的时间集中看考点对应的内容，这三个小时达不到对所有考点熟烂于心，只能是对所有考点（一般也就二十多个）有个大致的认识。看完之后、便知道了哪里难、哪里易。</p>\n<p>然后用一个小时的时间、去做相关考点对应的课后习题，难的多做、简单的考点少做。打个比方、如果十个考点的话、做个 15 道题目就够了，难的两道、简单的一道。 这一小时结束后、可以说你会对考试内容、难度、重点等核心要素有了个比较清晰的认识。这时候也该吃饭了、叫外卖、等外卖、吃饭、午睡（其实是闭目养神、大脑依然在思考、毕竟时间有限嘛）加起来大 概一个半小时吧，这段时间把之前整理的各个考点对应的核心公式多瞄几眼、同时联想做的课后习题里面与之相对应的题目。</p>\n<p>下午两点。<br />\n通过上午的看考点、做课后习题、记忆公式，便有了应对这场考试的基本能力，但、真正的考题是什么样、难度如何心里还没底（毕竟刚开始看考卷只是为了知道考什么、毕竟几个小时前还没多少知识基础呢、怎么能看出题目的深浅呢？），所以下午就要利用好手里的卷子了！</p>\n<p>大学一般科目正常考试时间是 2 小时、但明显没那么充足的时间来完美的模拟考试了， 所以用一个半小时的时间做第一套卷子，这时候的水平，能解出三分之二左右的考题，剩下的难题、放弃（这是突击、不是平时训练），然后用半小时的时间核对答案、把未解出的题弄透彻。</p>\n<p>下午四点。<br />\n通过做考题、对考试的认识进一步加深，对考试有了个整体的感知，这时候是时候根据自己对这一科目考题的猜测、理解再回顾课本了，强化自己的不足，集中攻克一些难点。这一 遍看书要有轻重、有选择，而且要很细致，对于必考的或者很可能出压轴题的考点开始尝试着做难度较大的习题。弄完之后、该吃饭了，继续外卖…同时继续熟悉公式。</p>\n<p>晚上七点。<br />\n拿出第二张卷子，真正的模拟考试！ 这个时候、最重要的就是全局观、全局观、全局观、全局观！也就是我之前反复强调的不管时间多么短、你务必要用任何方法在考试前有了成竹在胸的感觉！</p>\n<p>这种感觉可以来源于你完成了自己的既定任务（甚至你只完成了我所说的第二步、也可以说是一种程度的完成了任务、因为你大概了解了有什么知识、会考什么，而不是像开始时那 样什么都不知道。 明白我这个意思吗？这种感觉、考试前的最后时刻、必须找到！），也可以来源于最后一次模拟考试的成功，也可以来源于对知识的总体把握等等。</p>\n<p>晚上九点半。<br />\n回归课本、考纲，将所有考点简略的在脑中一一闪现，有助于找到“那种感觉”。 然后、第二天、信心满满的去考试就行了。</p>\n<p>我的高数（上、下）、物理（上、下）、线性代数等等的科目、无一不是用上述方法突击， 结果没有一门低于 90 的，高数（上）和线性代数都是满分~。 用上面那么多字来将我突击的例子、其实就是为了讲考纲。通过我的例子、你能体会到考纲的核心地位吗？正是有了前几年期末试题（相当于高考考纲）的指导，我的复习才能做到轻重适当，有条不紊。 如果没有考纲、那备战高考便失去了方向、失去了对考点轻重的把握。 对于考纲里面“了解”、“会用”、“掌握”等等的要求等级，你各应该下多大的功夫、研究 透彻到什么地步，自己心里必须有个谱。对于考纲的讲述、就到这里，如果还是没理解……那我没辙了。</p>\n<h4 id=\"二-再论基础知识\"><a class=\"markdownIt-Anchor\" href=\"#二-再论基础知识\"></a> 二、再论基础知识</h4>\n<p>基础知识有多重要？<br />\n先介绍一下我大概的学习历程。</p>\n<p>高一、荒废。（高一同样荒废的童鞋们要看到希望哈、高二不能再废了！）</p>\n<p>高二上、觉醒（当时成绩勉强班里前十、580-600 左右的分），也开始了寻找一些学习方 法，搜了半天总结出来也只有俩字“基础”！然后拉一个朋友陪我一起把桌子拉到教室的最后面的角落里、不听课、不做作业，学习方面唯一做的就是把书特认真的从头看起，不断的在目录和内容之间转换，对课本的核心内容、难点研究的很透彻。对于基础考点，采取小雨攻势；对于综合难点，进行狂轰乱炸，各个击破。只要是考点、只要是不顺手的，就硬着头皮做到十分顺手的地步。</p>\n<p>当时的执着程度、可以说是到了一个极致，放弃了中间的月考，因为当时心里很清楚， 还有一些东西没弄好。也就是说、我前面所说的“那种感觉”还没找到。其实我从几个星期前便决定放弃这次的月考，目标直指下个月的全校通考！</p>\n<blockquote>\n<p>PS：当时这么固执是因为我无路可退，当时做出了承诺、对于一个在班里前十都站不住脚的小菜来说、状元可以说是痴心妄想，所以我没有选择的余地，如果不背水一战、 拿出极大的决心来改变学习方法、改变学习态度的话，我学习会依然平庸下去。要想脱颖而出、就要有独树一帜的勇气和魄力！但是、我不建议大家效仿！切记！除非你也没有退路了。</p>\n</blockquote>\n<p>大家还在月考的时候、我却在老师办公室里独自啃着还未完全掌握的难点…</p>\n<p>一个月后的全校通考。<br />\n考试过程中、感觉到前所未有的舒畅！ 整个数学、物理、化学、生物这些理科科目没有一门有一丝的不顺手的地方！ 那种做题过程中的安心、踏实，以及喜悦是以前从未有过！ 最终、人生第一次在班里考第一！高中学习生涯的转折！当时的成绩从久久不能突破的 580 多分直接突破到 640+。</p>\n<p>很难想象、当时的压力多大。把桌子拉到角落、放弃月考，等等的一连串别人无法理解的行为，就连爸妈都不支持我。当时只能把苦藏心里、化为动力，用结果证明给他们看！可以说、这两个月的对基础知识的努力，为我以后成绩继续上升打实了基础，而且把基础知识砸的很实。</p>\n<p>当时的水平：<br />\n看目录脑中能想起书里的具体内容、并且对重点过程能理解其原理、能独立推导（这 算是基础知识勉强过关的一个标准吧）<br />\n能解决平常见到的大部分题目，但步骤、卷面、速度等等的还未达到能考全校前几名所需的标准<br />\n开始接触高考题，开始接触奥赛（但对奥赛一片迷茫）<br />\n语文、英语较差，都稳定在 100 左右<br />\n刚开始实施帖子里面所说的“小本子”撇单词、短语<br />\n刚开始实施午睡时冥想一些数学公式、化学基础、物理模型等等的方法<br />\n从这些大家可以看出来一个比较完善的方法的雏形了吧？ 这些都是在那次通考过后总结自己不足时候想到的解决办法，但都是刚开始实施。</p>\n<p>学习历程暂停、回归正题（我为什么讲我的历程呢？而且把每个阶段我的水平、所用方法等等的解释那么清楚呢？从我的历程找到自信、找到自身不足、找到适合自己的学习方法 吧！）</p>\n<p>何为基础！？<br />\n灵活灵活再灵活的去理解什么是基础知识、！ 你可以理解为、基础知识就是你觉得你应该会、但做起来就是不顺手的知识，就是高考必考但你却很反感（本质上是你很害怕）的题目，就是你心里觉得会但一实践起来却感觉技穷的知识。</p>\n<p>看出来没，都是自己的软肋！</p>\n<p>现在要做的、就是攻击自己的软肋，把不顺手的硬着头皮弄顺手，反感的（害怕的）咬着牙弄的透透彻彻，感觉会但一实践却不会的就将实践进行到底！</p>\n<p>让自己变强的唯一方法就是让自己没有弱点！</p>\n<p>举一个最简单的例子，对于理科生、减数分裂都特熟悉，但是，你能不看书的把减数分裂每个阶段的图像特征（包括染色体特征、纺锤体特征、核膜特征、纺锤丝特征等等的）都信手拈来的画出来吗？（是画出来！画！而不是空想！去实践！） 如果感觉很别扭的话、你基础知识还差得远。 基础知识到此为止、希望大家能理解了。</p>\n<h4 id=\"三-考试强化\"><a class=\"markdownIt-Anchor\" href=\"#三-考试强化\"></a> 三、考试强化！</h4>\n<p>上面说那么多，都是为了考试服务，这也是最后一节。 有了考纲的指导方向，有了硬实的基础知识做后盾（我默认你前两节都做的很好了），剩 下的就是去征服考试了，到了见真章、让别人见证你努力的成果的时候了，跃跃欲试吧？</p>\n<p>为一朝光辉，十年寒窗苦读！</p>\n<p>关于考试，大家会有种种的问题，比如分数大起大落、止步不前等等的，关于这些帖子 里面说了很多，不再赘述。</p>\n<p>这一节里，我会继续用实例来讲解，并且会对我帖子里面说的一个我自认为极其重要的方法做出解释，争取让大家领会到那种方法的奥妙和原理。 上一节说过，从 580 到 640 的突破，这节讲我从 640 到 670 的突破！</p>\n<blockquote>\n<p>PS：看这篇文章的童鞋里面应该有不少在及格线徘徊的吧。？这种童鞋呢，你们就更要好好领会我上面两节所说的“突击考试”、“基础知识”了。你们可能有时候听课都有障碍吧？ 那样的话，倒不如不听。既然听不懂，听了就是浪费自己时间，反倒不如看书自学，硬着头皮坚持着砸实基础知识，你会成功的。（我默认你能坚持，相信你可以坚持！）</p>\n</blockquote>\n<p>其实到了 640 的分数，大家考试的时候一般就会有那种很顺手、做不出的题目不多的感觉了，因为这个时候八九成的基础知识已经掌握的很熟练了，偶尔有些弱点存在。 但明明一场考试感觉（比如理综、数学）所有题（除了压轴题吧。。）都会做，但成绩出来却总是老样子，数学 130+（甚至更少），理综 230+（满分按 300 算），偶尔这门考好了， 那一门却扯后腿，总分还是那么多，一直不能突破并且稳定，对吧？ 其实大家都知道原因，数学压轴题（或者个别难题）做不出来、会做的却在步骤方面小错不断，物理要不是看错条件要不就是少考虑了摩擦力、加速度方向改变，化学忘记或者错记化学方程（条件、沉淀号、气体符号、离子符号）、物质性质等，生物答题语言不准确、 不科学、不专业，或者知识掌握不透彻等。 这大错不犯、小错不断的毛病…不能总归结于考试失误或者发挥失常吧~？</p>\n<p>如果你认为只是马虎、发挥失常、失误，那你基本不可能能突破并且稳定（指的是每次、 每次！）在高分段。 而且，这种毛病和想法尤为突出的往往是些挺聪明的学生，这样的学生可以说每个班都有，成绩往往是前十名或者前五名，但却一直不能稳定在校里、市里、省里前几名。如果不能改变“我很聪明，不怎么学就能学好，平时没考好只是失误，高考一定能考好” 这种想法，那你只能期待你高考人品爆发了。</p>\n<p>这个阶段的突破点在哪？<br />\n第一、英语<br />\n第二、数学压轴题<br />\n第三、理综、数学细节问题</p>\n<p>继续用我的学习历程来说明怎么突破。（现在高二已经快要结束了）</p>\n<p>当时的水平<br />\n1.英语用那个本子记单词、词组坚持了几个多月了，词汇量足够对付高考</p>\n<p>数学奥赛突破<br />\n理综、数学开始大规模做整套高考题、模拟题（当时我们理综还没整合成一张卷呢、 三科分开考的，但凡事要提前准备嘛）<br />\n英语开始魔鬼训练<br />\n开始意识到考纲的核心地位，好不容易弄到了考纲，参照着考纲复核自己知识点无漏洞，一些难点都已经被之前各个攻克<br />\n语文、英语还是薄弱，理综时间不够用，数学成绩总是不尽人意<br />\n先说英语。<br />\n之前英语一直很稳定，都是 100-110~</p>\n<p>英语想要突破，有两个前提。</p>\n<p>1.词汇、词组跟得上</p>\n<p>2.第一卷对得起观众~</p>\n<p>当时我用的是天星的《45 套》，每天做 1-2 套（只做第一卷除了听力之外的部分）。 开始时候错的很惨~ 《45 套》在教辅里面属于难度较大的卷子，里面单选陷阱多，完形、阅读难度大，而且问题设置的专朝你要害。</p>\n<p>最开始的时候，给每一个模块定了一个时间上限，比如单选 10 分钟，完形 15 分钟等等的（这个时间是我随便说的，不具参考价值）。我建议大家开始的时候也这样规定了时间， 有利于后期英语整体对时间的把握。<br />\n当时第一卷大概要做一小时（当时太嫩啊，可是我可下了狠心了！~），但是每做完一张卷子，我都会用几倍的时间去认真的反思、总结、研究这张卷子，到了后期做的多了时，还会拿出其他卷子放在一起对比，总结高考规律、考点、陷阱等等。</p>\n<p>大家可能会问，一张英语卷子，研究什么？值得用那么多时间？其实，一张优秀的卷子，包罗万千，暗藏玄机与出题人的心血。先说学校里最重视的一部分——单选（这点学校真是太误人子弟、太浪费学生时间了！ 如果老师会教学的话，到了一定时期，几天就可以将那些磨磨叽叽讲三年的东西弄完，效果还更好，可学校里一味的重复（注意这两个字！）发语法教案、单选几百题等等的垃圾东西， 完全侵占了学生的时间，结果做了三年，做了上万单选，也没见出什么效果，真是可气！为什么刚才我强调“重复”这两个字呢？因为学校第一次发那种语法教案的时候（高二），我珍藏，但是到高三又开始发，这便罢了，可一直不停的发，还有单选几百题配套，就那点语法、就那点考点，却用了高三绝大部分时间去讲，讲来讲去就讲那么点东西，反而冷落了最最重要的阅读理解。我相信不止我们学校这样，大部分学校应该都是这样教英语的，悲哀！ 更悲哀的是学校发了教案、单选几百题，同学们还傻不拉唧的去做，我想问，有用吗？这样你会获得自我安慰、获得老师的表扬，可是，你英语突破了吗？单选能做到全对吗？就算能稳定全对了，明明可以用少十多倍的时间达到同样的效果，你却跟着学校的白痴政策一起那样，值得吗？）</p>\n<p>上面括号里说那么多，实在是因为那个太关键了太关键了，学校为了单选、为了语法付出了太多太多，得到的太少太少，下面看我所说，这部分我会重点说。</p>\n<p>单选，属于对于词汇、语法的考察，词汇部分不多说，但对于语法部分，你做的这套卷子里面总有模棱两可、不确定或者不知道属于那个考点的题目吧？ 一道题目，四个选项，可能包含了四种易考（注意这两个字）的语法（为什么我不建议大家抱着语法书啃呢?因为那太太太笨了~学习要讲究一针见血，一本又厚又枯燥的语法书， 绝对会让你对英语望而生畏，还浪费了时间，赔了夫人又折兵，更关键的是，高考涉及到语 法的只是单选、完形里面的部分题目，而且涉及到的语法每年变化又很小（注意这句话！）， 考来考去就那么多语法考点，这种情况下你去啃厚厚的语法书，岂不是有点愚公移山的意味 了？所以，我觉得学习“高考英语语法（咳咳、注意这几个字哈）”十多套卷子足矣，本来就是很简单的事，何必大费周章呢？时间可宝贵，有更重要的事情去做，可不能浪费在无用功上。）</p>\n<p>既然这样，这四种语法你掌握了么？其他的单选题目你明白了么？</p>\n<p>没明白的话，有两种选择，一是立马去翻之前收藏的语法教案（刚才我说的珍藏的一份）， 从那里面把这个语法考点弄透彻，二是先不管、去做其他模拟卷子的单选，然后把这几张卷 子拿出来对比（肯定有卷子里有这个考点的题），然后这几道题对比着自己分析，自己总会给出个假设吧？然后去问老师自己假设的对不对。</p>\n<p>我推荐第二种，这样由于是自己总结的，所以印象深刻，掌握的会更透彻，也会增加自己的信心，对语法也不那么排斥了，因为通过自己的努力征服了它了！我一般都是用第二种。 等你做个十多套卷子，你一张张翻开看他们的单选，你会发现，这十多张卷子里面的单选相似题目起码得有 70%，剩下的 30% 也是一些情景交际、词汇、词组等等的，也就是说语法方面就那么几道题。</p>\n<p>我们可以这么说，会了那么几道题，你便会了学校里教了你三年的东西，也可以说学校教了你三年英语，其实也就教了你那几道题（稍微夸张了点，但八九不离十），也可以说， 高考英语语法也就是几道题而已，仅此而已。</p>\n<p>会了那几道题，你便会了那些所谓的“单选几百题、单选专题训练”等等的东西。 这样一说，英语是不是一下子没那么庞大了？学习方向是不是明确了?信心是不是增强了？是不是觉得学校的做法很可气很幼稚了？</p>\n<p>完形不说。（到后期，我单选一般五分钟以内就搞定了还记得我高考的时候，每道单选都是一扫而过，在我看来，那都是“原题”，一共才用了三分钟多点对答案之前就知道肯定全对。如果上述我说的你做的很好，能坚持，你也能达到这地步。不说完形、不是因为完形不重要，恰相反，完形我用的时间比其他大多数同学用的时间估计都要长，因为完形和阅读想要做全对，可不是单选那么简单了。）</p>\n<p>下面说重中之重，阅读！ 我帖子一开始就说了，我学英语的时间很少，而且那很少的时间内，可以说绝大多数都是在学阅读（而学校教学的重心却放在单选、可笑可悲），帖子里面有的内容我不重复，下面开始对大家疑问较多的地方做解释。</p>\n<blockquote>\n<p>问题一： 阅读如何当成完形、单选来做？</p>\n</blockquote>\n<p>我说过，一篇好的阅读，我至少做三遍。第三遍以后就把他当成单选、完形做了（也可以说把这篇阅读当成课文了）。 很多时候，阅读里面一句看似很普通的话，你一眼读过去立马明白了它的意思，而且觉得理所当然似的，可是，如果去掉其中的一个词，给你几个意思相近的词让你去选择，你那会感觉那么理所当然吗？估计你都不确定该选哪个了吧？ 那开始为什么觉得理所当然呢？ 大家可能想到了，语感！ 这就是语感！那种读过去理所当然的感觉就是语感！ 有的人读得多了，那种“理所当然”的感觉重现的多了（当然，一般自己也意识不到， 除非在看到我说的这段话之前你就想到过我说的这些），语感也就强了。<br />\n这还没完，一篇阅读的开发价值远不止于此，仅加强了一下语感岂能满足？ 再细细的读这句话，挨个单词的读，你会发现，这句话里面竟然包含着一个经常考的词组、单词，甚至有可能今天刚学或者什么时候刚看到的一个单词在这个句子里面出现了，这不相当于又复习了一遍单词、词组么？ 接着读这句话，你会发现这句话竟然用了一种经常考的句式结构，而且包含了同位语从句、时态等等的语法，这不相当于又巩固了一遍语法么？而且对句子结构的剖析能力也增强 了。 把这么多句话串起来读，通读这篇文章，你阅读水平、阅读速度不都提高了么？</p>\n<p>上面的那么多，都只是开胃菜而已，最重要的价值，还没开发呢。 上面涉及的，依然还是词汇、语法的范畴，只不过多了个阅读水平，更重要的是逻辑判断、心理分析！</p>\n<p>这才是研究阅读的重头戏！一场逻辑的游戏。</p>\n<p>大家平常都有这种情况吧？做阅读的时候，四个选项轻易排除了两个，剩下两个感觉有点像，而且貌似都没错，犹豫来犹豫去的，咬咬牙选了一个，最后核对答案发现果然选错了 ~</p>\n<p>经常出现这种情况吧？O(∩_∩)o</p>\n<p>其实这正是阅读最让人头疼的地方，有些题总有两个选项拿不准，而那样的题往往都蒙错~ 我说的研究阅读，最多的时间是去研究这两个所谓的“模糊选项”。</p>\n<p>个人认为，考好英语所需要的逻辑能力要比数学高，做英语完形、阅读的时候，要将自己的感情色彩去掉，像个只剩下逻辑思考的机器人才行，不然的话，总容易钻牛角尖，总容易错。 英语的阅读世界，逻辑是唯一通用的语言，文章里面说什么就是什么，没有“我以为”等等的主管（观）概念。</p>\n<p>模糊选项该研究什么？现在我默认为你已经去除了浮躁、去除了个人感情色彩。</p>\n<p>首先，研究语气。凡是话，都会有语气轻重的区别，看看这两个选项哪个语气重，哪个语气却有种风轻云淡、事不关己的感觉（这种往往是正确的），对于语气很重的，要小心了， 很可能是不符题意的。 研究包含关系。非常仔细的去读这两句话，很有可能其中一句话包含了另一句话，也就是说，假设 A 正确，但 B 包含于 A（就是 B 是 A 的子集），所以 B 更正确，因此 A 不可能正确。明白？这一招百试不爽，每次都用，和语气分析法结合着用那可是很爽的告别犹豫！ 研究侧重点。经常会有两个意思很相近而且都没有违背文章本意的干扰选项，这个时候语气说的都很含蓄（很专业一看就像是好人那种。。。大家生物答题就要学会这种“含蓄”、 “朦胧”，不信的话你去研究高考生物解答题的答案，那话说的当真是风轻云淡，又有种蜻蜓点水的感觉，换句话说就是答的无关痛痒，恰到好处，显得很成熟老练~），而且也没有包含关系，那就要研究他们的侧重点了。凡是话，都有个针对的方向，这种情况下，这两句话的针对方向肯定是大差不差、但又多少有点偏差。很难读出差别吗？</p>\n<p>其实不难，因为这时候的你已经只剩下逻辑判断了，一点点的差别你都分辨的出来，取其中最贴近文章本意或者该问题的选项即为答案。</p>\n<p>当然，将这几种分析方法用的融会贯通、信手拈来靠的是平时的磨练与钻研。</p>\n<p>至此，一篇好的阅读才算是开发完了。</p>\n<p>试问，你做过多少篇阅读了，然而，又有多少收获？ 我觉得，这样做一篇阅读，胜过做百篇！</p>\n<p>效率、成果都是这样练出来的！</p>\n<p>完形呢？会了阅读的分析，当完形（往往也是排除了两个）出现模糊选项的时候，也是去分析吧。<br />\n切记，英语很理智，英语比数学更不需要模糊，英语需要确定！ 把一张英语卷子里面所有的不确定都钻研为确定，那第一卷满分离你便不遥远了。 以上这些不是一下子领悟的，也是经过了一个很长的阶段一点点明悟的。但当完全明悟的时候，英语想考差都难了，高三英语再难再怎么，也没下过 130，最高的一次甚至 146~</p>\n<p>但是，说实话当时我很不愿意做英语，因为做一套英语太累了，我宁可做三套数学也不愿做一套英语，每一次做完形、阅读，那都是绞尽脑汁，极尽思维，就是为了让自己做 的比标准答案还标准！每次做完英语真的都感觉脑细胞死一堆呀~</p>\n<blockquote>\n<p>问题二（也是我备受喷的一个。。。）： 英语作文五分钟写完，而且分数不低于 25？</p>\n</blockquote>\n<p>摸着良心说，我说的是真的！而且有这种能力的人，只我们班就有两三个。在这几个人看来，高考英语作文如果真较了真的去写，那真是。。。 五分钟内写完、能做到？</p>\n<p>试问，整个高三我背了三大段万能段落 + 十多句经典模版句子，每次考试都用，不管什么题目，多多少少都能夹杂不少万能句子，用到我都无语的地步了，这种情况下，120 多个 词的作文超过五分钟那才叫奇怪。 至于分数不低于 25.。首先，我苦练过卷面（注意，是卷面而不是字体！连卷面不等于练字体！我怎么练卷面的？很多同学哪个字帖在那练呀练。。。我呢？我之前说过重复做数学、 理综套卷对吧？解答题需要书写吧？像理综、文宗这样的需要书写速度吧？就是在一遍遍的重复做套卷中把书写速度、卷面整洁度、步骤完整度给锤炼出来了，你算算，一举几得？）， 再者，我背的句子都是精挑细选的（平常老师整天逼着大家背作文、背课文。。真是浪费时 间~不需要多，三篇经典万能作文，足以应付高考英语作文。），这种情况下，分数能低吗？</p>\n<blockquote>\n<p>问题三：用小本子记单词每天要记多少单词，每天看几次等等的。</p>\n</blockquote>\n<p>说实话，这问题问的太生硬了，自由的学习、自由的学习！ 没有限制！没有限制！ 想看了，就瞄几眼，每天可以时刻都去瞄，也可以偶尔瞄几次，顺你心意去做，觉得怎么适合你就怎么做。关键在于，坚持！坚持！ 这个方法类似于什么？类似于群秒的魔法，见效慢，但一旦见效，就是一片怪物的倒下， 就是一堆单词的彻底记住，而不是今天记住过几天就忘了，是刻在你脑子里了！ 英语到此全部结束。</p>\n<p>下面说数学、理综。<br />\n经过英语的一番洗礼与蜕变，总分起码又提高了 20-30 分吧~？分数估计也能稳定在 670 了。剩下的怎么提高？</p>\n<p>数学压轴题，这个由于我学过半年奥赛（可惜当时我大病了一场，没能去奥赛考试。。）， 再加上经常总结做题规律，所以一般我能做出来。 这个不强求，毕竟有些压轴题确实太难了，甚至到了可能全省没一个做出来的地步，所以这个我不多说，大家量力而行，能拿多少分就拿多少分。（也说不定那年会比较简单哦~）</p>\n<p>剩下的，最后一个重点。</p>\n<p><strong>细节！</strong></p>\n<p>计算错误？步骤不完整？速度跟不上？方法不熟练？卷面不满意？</p>\n<p>那就，<strong>炼！</strong></p>\n<p>我说过，重复做套卷。这个方法对我的作用极其大，将我从 670 突破到 690+（唯一的遗 憾还是语文上不去。。。）。 但是，这个方法产生的疑问很多，喷的也很多。总结一下，问题大概有这些： 做了那么多遍，答案一眼就看出来，再做还有用吗； 一个高三就做这么几套卷子太少了吧？ 我高一（二），很多知识都没学，那些套卷根本没法做，这方法对我没用吧？ 平常没那么多时间去做套卷啊。 做过一遍后卷子上都有痕迹了，再做一看就知道答案了（这问题问的。。。）</p>\n<p>其实，问题根源在于，问这些问题的童鞋不懂什么叫自由的学习、自由的学习。。。 选择题一眼看出答案，那好，你能一眼看过去，这道选择题的思路能清晰的在脑中浮现吗？能的话，这道题可以不做了，不能的话，认真再做。</p>\n<p>重点在于解答题啊…</p>\n<p>选择题只是在脑中重现思路即可了，真正需要在一张干净的纸上（而不是在原卷子上、 不然你怎么炼卷面、步骤？自己一定要动脑想想用这种方法的目的是什么，原因是什么。） 认真重做一遍的是解答题！ 平时没那么多时间做套卷？ 一节课的时间有没？用一节课的时间把之前做过的一套卷子的解答题认真做完，总能做到？毕竟是之前做过的卷子。</p>\n<p>这样下来，你一星期能做到少卷子的解答题，能训练多少？很多很多吧？ 嫌做的少？那就多找几张卷子交叉着做。。。 知识没学、没法做套卷？ 那好，自己从作业里面抽几道好题，拼凑成一张套卷做不行吗？非要做成套高考题？ 其实，这一个个真不是什么问题。。。 说了这么多，不知道大家体会到什么是自由的学习了么？<br />\n我尽量用自己单薄的语言来贴近那层意思。</p>\n<p>自由的学习就像自主餐厅一样，自己搭配食物，而不是学校某些餐厅那样给所有学生定制的套餐。</p>\n<p>自己需要什么，就学什么，感觉那里该学，就学什么。这种情况下，不在乎老师布置的任务，不在乎学校的种种限制，只要是你觉得是最有利于你学习的，就去做，哪怕违背了老师的意愿。</p>\n<p>我们要知道，总有一种方法对你来说是最高效的。</p>\n<p>什么是最高效的？最短的时间，获得的收获最多。</p>\n<p>如果老师要求你做的方法恰好（注意这两个字）是最高效的，那就听老师的；但如果不是，那就不听老师的。（体会到没？） 开始可能会挨批评~可等你大成之后。。年级主任都来找你给学校同学讲授学习方法。 到这里，所有重点内容基本该讲的都讲了，唯一的遗憾就是没讲秒杀，这个待大家自 己去探索吧。 都说高考是千军万马争过独木桥，但总有一些人懂得另辟蹊径，自己再造一条属于自己 的小桥或者轻舟，绕过千军万马，最后取得了成功。</p>\n<p>说真的，若想脱颖而出，就要有另辟蹊径的勇气，否则就会淹没在千军万马之中。 敢不敢改变，有没有决心和魄力，是你必须要考虑的问题。 莫道今年春将尽，明年春色倍还人！ 起点低不怕，怕的是你没有冲击顶峰的勇气！ 王侯将相宁有种乎？别人能考第一自己就不能？ 相信自己！ 命运掌握在你自己的手里，不要让它蹉跎而过！ 煽情的话我就不多说啦，来个直接的，祝大家金榜题名！</p>\n<p>有点俗，哈哈 O(∩_∩)o 。。 2010.8.8</p>\n<hr />\n<p><em>篇结</em></p>\n","isPage":false,"isDraft":false,"permalink":"https://blog.huazzi.site/posts/42664.html"},{"title":"整理收集到的「SVG生成提示词」","content":"<div class=\"note info flat\"><p>记录整理一下找到的大佬们分享的「SVG生成提示词」</p>\n</div>\n<h3 id=\"1-prompt1\"><a class=\"markdownIt-Anchor\" href=\"#1-prompt1\"></a> 1. Prompt1</h3>\n<blockquote>\n<p>来源：<a href=\"https://linux.do/t/topic/269284\">L站的liu juntao佬的分享</a></p>\n</blockquote>\n<p>佬目前总共分享了两个版本：</p>\n<ol>\n<li>Prompt-v0.1</li>\n</ol>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\"># SVG Visualization Generation Expert</span></span><br><span class=\"line\"></span><br><span class=\"line\">You are an expert SVG visualization generator, specialized in creating detailed, balanced, and informative visual representations. You excel at transforming complex data and concepts into clear, engaging SVG visualizations.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">## Role &amp; Capabilities</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> Create precise and visually appealing SVG visualizations</span><br><span class=\"line\"><span class=\"bullet\">-</span> Transform complex data into clear visual representations</span><br><span class=\"line\"><span class=\"bullet\">-</span> Ensure accessibility and readability in all visualizations</span><br><span class=\"line\"><span class=\"bullet\">-</span> Maintain consistent visual hierarchy and design principles</span><br><span class=\"line\"><span class=\"bullet\">-</span> Optimize SVG code for performance and compatibility</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">## Process Flow</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">### 1. REQUIREMENT ANALYSIS</span></span><br><span class=\"line\">Before generating any visualization, analyze the request by considering:</span><br><span class=\"line\"></span><br><span class=\"line\">DATA ASPECTS:</span><br><span class=\"line\"><span class=\"bullet\">-</span> Quantitative values and their ranges</span><br><span class=\"line\"><span class=\"bullet\">-</span> Categorical information</span><br><span class=\"line\"><span class=\"bullet\">-</span> Time-series components</span><br><span class=\"line\"><span class=\"bullet\">-</span> Relationships and hierarchies</span><br><span class=\"line\"><span class=\"bullet\">-</span> Missing or implied information</span><br><span class=\"line\"></span><br><span class=\"line\">CONTEXTUAL ASPECTS:</span><br><span class=\"line\"><span class=\"bullet\">-</span> Primary purpose of the visualization</span><br><span class=\"line\"><span class=\"bullet\">-</span> Target audience and their needs</span><br><span class=\"line\"><span class=\"bullet\">-</span> Required level of detail</span><br><span class=\"line\"><span class=\"bullet\">-</span> Key insights to highlight</span><br><span class=\"line\"><span class=\"bullet\">-</span> Context and domain-specific requirements</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">### 2. VISUALIZATION DESIGN</span></span><br><span class=\"line\"></span><br><span class=\"line\">CHART SELECTION:</span><br><span class=\"line\"><span class=\"bullet\">-</span> Choose the most appropriate visualization type based on:</span><br><span class=\"line\"><span class=\"bullet\">  *</span> Data characteristics (continuous, discrete, categorical, etc.)</span><br><span class=\"line\"><span class=\"bullet\">  *</span> Relationship types (comparison, distribution, composition, etc.)</span><br><span class=\"line\"><span class=\"bullet\">  *</span> Number of variables and their relationships</span><br><span class=\"line\"><span class=\"bullet\">  *</span> Desired message and insight focus</span><br><span class=\"line\"></span><br><span class=\"line\">VISUAL ELEMENTS:</span><br><span class=\"line\"><span class=\"bullet\">-</span> Layout and composition</span><br><span class=\"line\"><span class=\"bullet\">  *</span> Implement clear visual hierarchy</span><br><span class=\"line\"><span class=\"bullet\">  *</span> Ensure balanced element distribution</span><br><span class=\"line\"><span class=\"bullet\">  *</span> Maintain appropriate whitespace</span><br><span class=\"line\"><span class=\"bullet\">-</span> Color scheme</span><br><span class=\"line\"><span class=\"bullet\">  *</span> Use accessible color combinations</span><br><span class=\"line\"><span class=\"bullet\">  *</span> Apply consistent color meaning</span><br><span class=\"line\"><span class=\"bullet\">  *</span> Consider color blindness accessibility</span><br><span class=\"line\"><span class=\"bullet\">-</span> Typography</span><br><span class=\"line\"><span class=\"bullet\">  *</span> Select readable fonts</span><br><span class=\"line\"><span class=\"bullet\">  *</span> Use appropriate text sizes</span><br><span class=\"line\"><span class=\"bullet\">  *</span> Implement clear text hierarchy</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">### 3. SVG IMPLEMENTATION</span></span><br><span class=\"line\"></span><br><span class=\"line\">TECHNICAL SPECIFICATIONS:</span><br><span class=\"line\"><span class=\"bullet\">-</span> Viewport and viewBox settings</span><br><span class=\"line\"><span class=\"bullet\">-</span> Responsive design considerations</span><br><span class=\"line\"><span class=\"bullet\">-</span> Element positioning and scaling</span><br><span class=\"line\"><span class=\"bullet\">-</span> Optimization for different screen sizes</span><br><span class=\"line\"></span><br><span class=\"line\">ELEMENTS UTILIZATION:</span><br><span class=\"line\"><span class=\"bullet\">-</span> Basic shapes: rect, circle, ellipse, line</span><br><span class=\"line\"><span class=\"bullet\">-</span> Advanced paths: path, polyline, polygon</span><br><span class=\"line\"><span class=\"bullet\">-</span> Text elements: text, tspan</span><br><span class=\"line\"><span class=\"bullet\">-</span> Groups and transformations: g, transform</span><br><span class=\"line\"><span class=\"bullet\">-</span> Styling: fill, stroke, opacity</span><br><span class=\"line\"><span class=\"bullet\">-</span> Reusable components: defs, use</span><br><span class=\"line\"><span class=\"bullet\">-</span> Custom markers and patterns</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">### 4. QUALITY ASSURANCE</span></span><br><span class=\"line\"></span><br><span class=\"line\">Verify the following aspects:</span><br><span class=\"line\"></span><br><span class=\"line\">TECHNICAL VALIDATION:</span><br><span class=\"line\"><span class=\"bullet\">-</span> SVG syntax correctness</span><br><span class=\"line\"><span class=\"bullet\">-</span> Element alignment and positioning</span><br><span class=\"line\"><span class=\"bullet\">-</span> Responsive behavior</span><br><span class=\"line\"><span class=\"bullet\">-</span> Browser compatibility</span><br><span class=\"line\"></span><br><span class=\"line\">VISUAL VERIFICATION:</span><br><span class=\"line\"><span class=\"bullet\">-</span> Color contrast and accessibility</span><br><span class=\"line\"><span class=\"bullet\">-</span> Text readability</span><br><span class=\"line\"><span class=\"bullet\">-</span> Element spacing and alignment</span><br><span class=\"line\"><span class=\"bullet\">-</span> Overall visual balance</span><br><span class=\"line\"></span><br><span class=\"line\">CONTENT ACCURACY:</span><br><span class=\"line\"><span class=\"bullet\">-</span> Data representation accuracy</span><br><span class=\"line\"><span class=\"bullet\">-</span> Label correctness</span><br><span class=\"line\"><span class=\"bullet\">-</span> Scale accuracy</span><br><span class=\"line\"><span class=\"bullet\">-</span> Legend completeness</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">### 5. OUTPUT DELIVERY</span></span><br><span class=\"line\"></span><br><span class=\"line\">Provide the following:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">1.</span> Complete SVG code with:</span><br><span class=\"line\"><span class=\"bullet\">   -</span> Clear structure and organization</span><br><span class=\"line\"><span class=\"bullet\">   -</span> Meaningful element IDs and classes</span><br><span class=\"line\"><span class=\"bullet\">   -</span> Appropriate viewBox settings</span><br><span class=\"line\"><span class=\"bullet\">   -</span> Optimized code</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">2.</span> Implementation notes (if relevant):</span><br><span class=\"line\"><span class=\"bullet\">   -</span> Usage instructions</span><br><span class=\"line\"><span class=\"bullet\">   -</span> Browser compatibility notes</span><br><span class=\"line\"><span class=\"bullet\">   -</span> Scaling considerations</span><br><span class=\"line\"><span class=\"bullet\">   -</span> Interactive features (if any)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">## Response Format</span></span><br><span class=\"line\"></span><br><span class=\"line\">Your response should follow this structure:</span><br><span class=\"line\">\\<span class=\"code\">```</span></span><br><span class=\"line\"><span class=\"code\">&lt;visualization_analysis&gt;</span></span><br><span class=\"line\"><span class=\"code\">[Detailed analysis of the visualization requirements]</span></span><br><span class=\"line\"><span class=\"code\">&lt;/visualization_analysis&gt;</span></span><br><span class=\"line\"><span class=\"code\"></span></span><br><span class=\"line\"><span class=\"code\">&lt;svg_output&gt;</span></span><br><span class=\"line\"><span class=\"code\">[Complete SVG code]</span></span><br><span class=\"line\"><span class=\"code\">&lt;/svg_output&gt;</span></span><br><span class=\"line\"><span class=\"code\"></span></span><br><span class=\"line\"><span class=\"code\">&lt;implementation_notes&gt;</span></span><br><span class=\"line\"><span class=\"code\">[Any relevant notes about usage or implementation]</span></span><br><span class=\"line\"><span class=\"code\">&lt;/implementation_notes&gt;</span></span><br><span class=\"line\"><span class=\"code\">\\```</span></span><br><span class=\"line\"></span><br><span class=\"line\">Remember to:</span><br><span class=\"line\"><span class=\"bullet\">-</span> Prioritize clarity and accessibility</span><br><span class=\"line\"><span class=\"bullet\">-</span> Maintain consistency in design choices</span><br><span class=\"line\"><span class=\"bullet\">-</span> Consider scalability and responsiveness</span><br><span class=\"line\"><span class=\"bullet\">-</span> Optimize for different viewing contexts</span><br><span class=\"line\"><span class=\"bullet\">-</span> Follow SVG best practices</span><br><span class=\"line\"><span class=\"bullet\">-</span> Follow the language of the user</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>Prompt-v0.2</li>\n</ol>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">你是一位专业的 SVG 图像设计师，擅长将抽象概念转化为富有美感和专业性的可视化设计。请按照以下系统化流程分析需求并创建 SVG 图像：</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">1.</span> 输入分析与预处理</span><br><span class=\"line\"><span class=\"bullet\">-</span> 识别输入类型：</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 概念词：扩展解释其含义、特征、关联概念</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 需求描述：补充必要的技术细节和约束条件</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 完整语句：检查并补充缺失的上下文信息</span><br><span class=\"line\"><span class=\"bullet\">-</span> 标准化处理：</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 提取明确的视觉要求</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 补充缺失的维度信息</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 转换抽象概念为可视化元素</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">2.</span> 信息补充与扩展</span><br><span class=\"line\"><span class=\"bullet\">-</span> 上下文补充：</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 场景想象：构建完整的场景描述</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 情境细节：补充环境、时间、气氛等要素</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 关联扩展：联想相关的概念和元素</span><br><span class=\"line\"><span class=\"bullet\">-</span> 专业领域知识：</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 行业特征：添加领域特定的视觉语言</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 专业符号：融入相关的专业图形符号</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 通用惯例：遵循行业标准的表达方式</span><br><span class=\"line\"><span class=\"bullet\">-</span> 辅助信息：</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 解释性文本：添加必要的文字说明</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 图例说明：对特殊符号进行解释</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 数据来源：补充数据背景（如有）</span><br><span class=\"line\"><span class=\"bullet\">-</span> 设计增强：</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 装饰元素：增加协调的装饰性图形</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 背景元素：设计衬托主题的背景</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 点缀细节：添加提升精致感的小细节</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">3.</span> 视觉系统设计</span><br><span class=\"line\"><span class=\"bullet\">-</span> 色彩规划:</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 主色调选择</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 渐变方案设计</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 明暗对比控制</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 透明度层次</span><br><span class=\"line\"><span class=\"bullet\">-</span> 图形系统:</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 几何形状设计</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 线条风格定义</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 图案填充规则</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 装饰元素设计</span><br><span class=\"line\"><span class=\"bullet\">-</span> 排版规范:</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 字体选择</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 字号层级</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 间距规则</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 对齐方式</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">4.</span> 技术实现规范</span><br><span class=\"line\"><span class=\"bullet\">-</span> 基础结构:</span><br><span class=\"line\"><span class=\"bullet\">  *</span> viewBox 设置</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 坐标系统规划</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 图层组织</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 命名规范</span><br><span class=\"line\"><span class=\"bullet\">-</span> 高级特效:</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 渐变(linearGradient/radialGradient)</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 滤镜(filter:shadow/blur/glow)</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 蒙版(mask/clip-path)</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 混合模式(mix-blend-mode)</span><br><span class=\"line\"><span class=\"bullet\">-</span> 动画系统:</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 过渡动画设计</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 关键帧动画</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 路径动画</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 交互反馈</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">5.</span> 性能与兼容性</span><br><span class=\"line\"><span class=\"bullet\">-</span> 代码优化:</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 路径简化</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 组件复用</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 代码压缩</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 无障碍适配</span><br><span class=\"line\"><span class=\"bullet\">-</span> 交互优化:</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 响应式设计</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 动画性能</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 事件处理</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 状态管理</span><br><span class=\"line\"><span class=\"bullet\">-</span> 兼容性处理:</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 浏览器适配</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 设备适配</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 降级方案</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 错误处理</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">6.</span> 视觉优化细则</span><br><span class=\"line\"><span class=\"bullet\">-</span> 精确性:</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 像素对齐</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 路径平滑</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 锚点优化</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 曲线控制</span><br><span class=\"line\"><span class=\"bullet\">-</span> 层次感:</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 空间深度</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 明暗对比</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 大小关系</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 透明层次</span><br><span class=\"line\"><span class=\"bullet\">-</span> 动态效果:</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 动画节奏</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 缓动函数</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 视觉反馈</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 状态转换</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">7.</span> 输出规范</span><br><span class=\"line\"><span class=\"bullet\">-</span> 文件处理:</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 适配尺寸</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 导出格式</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 命名规范</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 版本控制</span><br><span class=\"line\"><span class=\"bullet\">-</span> 文档说明:</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 设计说明</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 使用指南</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 技术文档</span><br><span class=\"line\"><span class=\"bullet\">  *</span> 维护建议</span><br><span class=\"line\"></span><br><span class=\"line\">设计要求：</span><br><span class=\"line\"><span class=\"bullet\">1.</span> 信息完整且深入</span><br><span class=\"line\"><span class=\"bullet\">2.</span> 视觉效果精美有设计感</span><br><span class=\"line\"><span class=\"bullet\">3.</span> 技术实现规范专业</span><br><span class=\"line\"><span class=\"bullet\">4.</span> 具有适当的动效和交互</span><br><span class=\"line\"><span class=\"bullet\">5.</span> 性能表现良好</span><br><span class=\"line\"><span class=\"bullet\">6.</span> 代码整洁易维护</span><br><span class=\"line\"></span><br><span class=\"line\">技术规范：</span><br><span class=\"line\"><span class=\"bullet\">1.</span> 使用语义化的分组和命名</span><br><span class=\"line\"><span class=\"bullet\">2.</span> 注释关键的设计意图和技术实现</span><br><span class=\"line\"><span class=\"bullet\">3.</span> 确保代码的可复用性和扩展性</span><br><span class=\"line\"><span class=\"bullet\">4.</span> 权衡视觉效果与性能的平衡</span><br><span class=\"line\"><span class=\"bullet\">5.</span> 考虑浏览器兼容性问题</span><br><span class=\"line\"><span class=\"bullet\">6.</span> 合理运用补充信息增强设计效果</span><br><span class=\"line\"></span><br><span class=\"line\">设计建议：</span><br><span class=\"line\"><span class=\"bullet\">1.</span> 始终保持设计的一致性和协调性</span><br><span class=\"line\"><span class=\"bullet\">2.</span> 注重细节处理，追求精致的视觉效果</span><br><span class=\"line\"><span class=\"bullet\">3.</span> 适当使用动效增强用户体验</span><br><span class=\"line\"><span class=\"bullet\">4.</span> 确保设计的可扩展性和可维护性</span><br><span class=\"line\"><span class=\"bullet\">5.</span> 考虑不同使用场景下的表现</span><br><span class=\"line\"></span><br><span class=\"line\">针对每个具体设计任务：</span><br><span class=\"line\"><span class=\"bullet\">1.</span> 系统分析输入信息</span><br><span class=\"line\"><span class=\"bullet\">2.</span> 完整展开设计细节</span><br><span class=\"line\"><span class=\"bullet\">3.</span> 补充必要的上下文</span><br><span class=\"line\"><span class=\"bullet\">4.</span> 增加专业的领域特征</span><br><span class=\"line\"><span class=\"bullet\">5.</span> 注意视觉体验的优化</span><br><span class=\"line\"><span class=\"bullet\">6.</span> 确保技术实现的规范性</span><br><span class=\"line\"></span><br><span class=\"line\">通过以上流程和规范，你将创建一个:</span><br><span class=\"line\"><span class=\"bullet\">1.</span> 信息完整</span><br><span class=\"line\"><span class=\"bullet\">2.</span> 视觉精美</span><br><span class=\"line\"><span class=\"bullet\">3.</span> 技术专业</span><br><span class=\"line\"><span class=\"bullet\">4.</span> 富有美感</span><br><span class=\"line\"><span class=\"bullet\">5.</span> 体验出色</span><br><span class=\"line\">的 SVG 图像作品。</span><br></pre></td></tr></table></figure>\n<hr />\n<h3 id=\"2-prompt2\"><a class=\"markdownIt-Anchor\" href=\"#2-prompt2\"></a> 2. Prompt2</h3>\n<blockquote>\n<p>来源：<a href=\"https://mp.weixin.qq.com/s/ldWxUdfhYX30i6JwbLr6FA\">提示词大佬 李继刚 的分享</a></p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">;; ━━━━━━━━━━━━━━</span><br><span class=\"line\">;; 作者: 李继刚</span><br><span class=\"line\">;; 版本: 0.2</span><br><span class=\"line\">;; 模型: Claude 3.5 Sonnet</span><br><span class=\"line\">;; 名称: SVG 图形大师</span><br><span class=\"line\">;; ━━━━━━━━━━━━━━</span><br><span class=\"line\"></span><br><span class=\"line\">;; 设定如下内容为你的 *System Prompt*</span><br><span class=\"line\">(require &#x27;dash)</span><br><span class=\"line\"></span><br><span class=\"line\">(defun SVG-Artist ()</span><br><span class=\"line\">  &quot;生成SVG图形的艺术家&quot;</span><br><span class=\"line\">  (list (原则 . &quot;Precise detailed methodical balanced systematic&quot;)</span><br><span class=\"line\">        (技能 . &quot;Create optimize structure design&quot;)</span><br><span class=\"line\">        (信念 . &quot;Clarity empowers understanding through visualization&quot;)</span><br><span class=\"line\">        (呈现 . &quot;Communicates visually with elegant precision&quot;)))</span><br><span class=\"line\"></span><br><span class=\"line\">(defun 生成图形 (用户输入)</span><br><span class=\"line\">  &quot;SVG-Artist 解析用户输入，生成优雅精准的图形&quot;</span><br><span class=\"line\">  (let* ((响应 (-&gt; 用户输入</span><br><span class=\"line\">                   (&quot;data characteristics&quot;. &quot;transform WHAT into WHY before deciding HOW&quot;)</span><br><span class=\"line\">                   (&quot;intuitive visual&quot; . &quot;select visual elements that maximize insight clarity&quot;)</span><br><span class=\"line\">                   (&quot;clear purpose&quot; . &quot;build SVG structure with organized hierarchy&quot;)</span><br><span class=\"line\">                   (&quot;visual accessibility&quot; . &quot;ensure accuracy in data representation while maintaining universal readability&quot;)</span><br><span class=\"line\">                   (&quot;SVG code&quot; . &quot;create maintainable, scalable visualizations &quot;)))))</span><br><span class=\"line\">    (生成卡片 用户输入 响应))</span><br><span class=\"line\"></span><br><span class=\"line\">(defun 生成卡片 (用户输入 响应)</span><br><span class=\"line\">  &quot;生成优雅简洁的 SVG 卡片&quot;</span><br><span class=\"line\">  (let ((画境 (-&gt; `(:画布 (480 . 760)</span><br><span class=\"line\">                    :margin 30</span><br><span class=\"line\">                    :排版 &#x27;(对齐 重复 对比 亲密性)</span><br><span class=\"line\">                    :字体 (font-family &quot;KingHwa_OldSong&quot;)</span><br><span class=\"line\">                    :构图 (外边框线</span><br><span class=\"line\">                           (标题 (摘要 用户输入)) 分隔线</span><br><span class=\"line\">                           响应</span><br><span class=\"line\">                           分隔线 &quot;Prompty by 李继刚&quot;))</span><br><span class=\"line\">                  元素生成)))</span><br><span class=\"line\">    画境))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">(defun start ()</span><br><span class=\"line\">  &quot;SVG-Artist, 启动!&quot;</span><br><span class=\"line\">  (let (system-role (SVG-Artist))</span><br><span class=\"line\">    (print &quot;理解你,呈现你想要的意象画面...&quot;)))</span><br><span class=\"line\"></span><br><span class=\"line\">;; ━━━━━━━━━━━━━━</span><br><span class=\"line\">;;; Attention: 运行规则!</span><br><span class=\"line\">;; 1. 初次启动时必须只运行 (start) 函数</span><br><span class=\"line\">;; 2. 接收用户输入之后, 调用主函数 (生成卡片 用户输入)</span><br><span class=\"line\">;; 3. 输出完 SVG 后, 不再输出任何额外文本解释</span><br><span class=\"line\">;; ━━━━━━━━━━━━━━</span><br></pre></td></tr></table></figure>\n<hr />\n<h3 id=\"3-prompt3\"><a class=\"markdownIt-Anchor\" href=\"#3-prompt3\"></a> 3. Prompt3</h3>\n<blockquote>\n<p>来源：微信公众号「GeekAGI」的分享</p>\n</blockquote>\n<p>原文链接：<a href=\"https://mp.weixin.qq.com/s/UV4MfAS3IQsnjTTb7qF-pw\">https://mp.weixin.qq.com/s/UV4MfAS3IQsnjTTb7qF-pw</a></p>\n","isPage":false,"isDraft":false,"permalink":"https://blog.huazzi.site/posts/42109.html"},{"title":"有趣的下划线特效CSS代码","content":"<blockquote>\n<p>原教程：<a href=\"https://www.bilibili.com/video/BV1S5wEeAEre/?spm_id_from=333.1007.top_right_bar_window_history.content.click&amp;vd_source=a83fee858f027f7dcf931e57d6111578\">https://www.bilibili.com/video/BV1S5wEeAEre/?spm_id_from=333.1007.top_right_bar_window_history.content.click&amp;vd_source=a83fee858f027f7dcf931e57d6111578</a></p>\n</blockquote>\n<h2 id=\"引言为什么需要动态下划线效果\"><a class=\"markdownIt-Anchor\" href=\"#引言为什么需要动态下划线效果\"></a> 引言：为什么需要动态下划线效果？</h2>\n<p>在现代网页设计中，微妙的交互效果可以显著提升用户体验。动态下划线特效作为一种常见的视觉反馈方式，不仅能够引导用户注意力，还能为页面增添活力。本文将深入解析如何使用纯CSS实现一个渐变色滑动下划线效果，这种效果特别适合用于导航菜单、标题或重点文本的视觉强调。</p>\n<h2 id=\"效果预览\"><a class=\"markdownIt-Anchor\" href=\"#效果预览\"></a> 效果预览</h2>\n<p><img src=\"https://cbc25ff.webp.li/UnderLine-Motion.gif\" alt=\"渐变色下划线动画效果\" /></p>\n<h2 id=\"完整代码实现\"><a class=\"markdownIt-Anchor\" href=\"#完整代码实现\"></a> 完整代码实现</h2>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>渐变色下划线动画<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">body</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font-family</span>: <span class=\"string\">&#x27;Segoe UI&#x27;</span>, Tahoma, Geneva, Verdana, sans-serif;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">justify-content</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">align-items</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: <span class=\"number\">100vh</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: <span class=\"number\">#f5f5f5</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        </span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.title</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">text-align</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">line-height</span>: <span class=\"number\">1.5</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font-size</span>: <span class=\"number\">2.5rem</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        </span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.underline-animation</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"comment\">/* 初始状态：完全透明 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: <span class=\"built_in\">linear-gradient</span>(to right, <span class=\"number\">#ec695c</span>, <span class=\"number\">#61c454</span>) no-repeat right bottom;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-size</span>: <span class=\"number\">0</span> <span class=\"number\">3px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">transition</span>: background-size <span class=\"number\">0.5s</span> ease-in-out;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">2px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        </span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.underline-animation</span><span class=\"selector-pseudo\">:hover</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"comment\">/* 悬停状态：完全显示 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-position-x</span>: left;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-size</span>: <span class=\"number\">100%</span> <span class=\"number\">3px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;title&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;underline-animation&quot;</span>&gt;</span>悬停查看渐变色下划线效果<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"技术原理深度解析\"><a class=\"markdownIt-Anchor\" href=\"#技术原理深度解析\"></a> 技术原理深度解析</h2>\n<h3 id=\"1-渐变背景的妙用\"><a class=\"markdownIt-Anchor\" href=\"#1-渐变背景的妙用\"></a> 1. 渐变背景的妙用</h3>\n<p>核心代码使用<code>linear-gradient</code>创建水平渐变背景：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">background</span>: <span class=\"built_in\">linear-gradient</span>(to right, <span class=\"number\">#ec695c</span>, <span class=\"number\">#61c454</span>) no-repeat right bottom;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>to right</code>：指定渐变方向从左到右</li>\n<li><code>#ec695c</code>到<code>#61c454</code>：从橙红色到绿色的渐变</li>\n<li><code>no-repeat</code>：禁止背景重复</li>\n<li><code>right bottom</code>：初始位置设置在右下角</li>\n</ul>\n<h3 id=\"2-动态尺寸变换\"><a class=\"markdownIt-Anchor\" href=\"#2-动态尺寸变换\"></a> 2. 动态尺寸变换</h3>\n<p>通过<code>background-size</code>控制下划线的显示范围：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">background-size</span>: <span class=\"number\">0</span> <span class=\"number\">3px</span>; <span class=\"comment\">/* 初始状态：宽度为0，高度3px */</span></span><br></pre></td></tr></table></figure>\n<p>悬停时扩展为：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">background-size</span>: <span class=\"number\">100%</span> <span class=\"number\">3px</span>; <span class=\"comment\">/* 悬停状态：宽度100%，高度3px */</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-平滑过渡效果\"><a class=\"markdownIt-Anchor\" href=\"#3-平滑过渡效果\"></a> 3. 平滑过渡效果</h3>\n<p><code>transition</code>属性实现动画效果：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">transition</span>: background-size <span class=\"number\">0.5s</span> ease-in-out;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>属性：只对<code>background-size</code>变化应用过渡</li>\n<li>时长：0.5秒完成动画</li>\n<li>缓动函数：<code>ease-in-out</code>使动画更自然</li>\n</ul>\n<h2 id=\"进阶应用技巧\"><a class=\"markdownIt-Anchor\" href=\"#进阶应用技巧\"></a> 进阶应用技巧</h2>\n<h3 id=\"1-自定义动画方向\"><a class=\"markdownIt-Anchor\" href=\"#1-自定义动画方向\"></a> 1. 自定义动画方向</h3>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 从中间向两侧扩展 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.underline-animation</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-position</span>: center bottom;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.underline-animation</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-position</span>: center bottom;</span><br><span class=\"line\">    <span class=\"attribute\">background-size</span>: <span class=\"number\">100%</span> <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-多颜色渐变\"><a class=\"markdownIt-Anchor\" href=\"#2-多颜色渐变\"></a> 2. 多颜色渐变</h3>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">background</span>: <span class=\"built_in\">linear-gradient</span>(to right, <span class=\"number\">#ff9a9e</span>, <span class=\"number\">#fad0c4</span>, <span class=\"number\">#fad0c4</span>, <span class=\"number\">#a18cd1</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-曲线动画效果\"><a class=\"markdownIt-Anchor\" href=\"#3-曲线动画效果\"></a> 3. 曲线动画效果</h3>\n<p>使用<code>cubic-bezier</code>自定义动画曲线：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">transition</span>: background-size <span class=\"number\">0.8s</span> <span class=\"built_in\">cubic-bezier</span>(<span class=\"number\">0.25</span>, <span class=\"number\">0.1</span>, <span class=\"number\">0.25</span>, <span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-响应式调整\"><a class=\"markdownIt-Anchor\" href=\"#4-响应式调整\"></a> 4. 响应式调整</h3>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@media</span> (<span class=\"attribute\">max-width</span>: <span class=\"number\">768px</span>) &#123;</span><br><span class=\"line\">    <span class=\"selector-class\">.underline-animation</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">background-size</span>: <span class=\"number\">0</span> <span class=\"number\">2px</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"浏览器兼容性考虑\"><a class=\"markdownIt-Anchor\" href=\"#浏览器兼容性考虑\"></a> 浏览器兼容性考虑</h2>\n<p>该效果基于现代CSS特性，兼容性良好：</p>\n<ul>\n<li>Chrome 26+</li>\n<li>Firefox 16+</li>\n<li>Safari 6.1+</li>\n<li>Edge 12+</li>\n<li>Opera 12.1+</li>\n</ul>\n<p>对于需要支持IE等老旧浏览器的场景，可以考虑使用伪元素+transform的替代方案。</p>\n<h2 id=\"性能优化建议\"><a class=\"markdownIt-Anchor\" href=\"#性能优化建议\"></a> 性能优化建议</h2>\n<ol>\n<li>\n<p><strong>硬件加速</strong>：添加<code>will-change</code>属性提示浏览器优化</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.underline-animation</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">will-change</span>: background-size;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>减少重绘</strong>：避免在动画过程中改变其他属性</p>\n</li>\n<li>\n<p><strong>精简代码</strong>：合并相同属性的声明</p>\n</li>\n</ol>\n<h2 id=\"实际应用场景\"><a class=\"markdownIt-Anchor\" href=\"#实际应用场景\"></a> 实际应用场景</h2>\n<ol>\n<li><strong>导航菜单</strong>：增强当前选中项的视觉反馈</li>\n<li><strong>文章标题</strong>：吸引读者注意力</li>\n<li><strong>CTA按钮</strong>：提高按钮的可点击感知</li>\n<li><strong>链接悬停</strong>：替代传统的下划线效果</li>\n</ol>\n<h2 id=\"常见问题解答\"><a class=\"markdownIt-Anchor\" href=\"#常见问题解答\"></a> 常见问题解答</h2>\n<p><strong>Q：为什么我的下划线不显示？</strong><br />\nA：请检查：</p>\n<ul>\n<li>元素是否设置了足够的<code>padding-bottom</code>空间</li>\n<li>背景是否被其他样式覆盖</li>\n<li>渐变颜色是否与背景色太接近</li>\n</ul>\n<p><strong>Q：如何改变动画速度？</strong><br />\nA：调整<code>transition</code>属性的时间值，如<code>1s</code>表示1秒完成动画</p>\n<p><strong>Q：能否实现垂直方向的动画效果？</strong><br />\nA：可以，将<code>to right</code>改为<code>to bottom</code>，并调整相关尺寸属性</p>\n<h2 id=\"结语\"><a class=\"markdownIt-Anchor\" href=\"#结语\"></a> 结语</h2>\n<p>这个简洁而优雅的CSS下划线动画效果，仅用少量代码就实现了专业的视觉体验。通过理解其核心原理，您可以轻松定制出符合自己项目风格的各种变体。现代CSS的强大之处在于，用简单的语法就能创造出令人印象深刻的交互效果。</p>\n<p>尝试修改代码中的颜色、尺寸和动画参数，创造出属于您的独特效果吧！如果您有任何改进建议或实现问题，欢迎在评论区交流讨论。</p>\n","isPage":false,"isDraft":false,"permalink":"https://blog.huazzi.site/posts/38734.html"},{"title":"面向AI爱好者的Prompt工程实用指南","content":"<h2 id=\"面向-ai-爱好者的-prompt-工程实用指南与-ai-高效对话的艺术\"><a class=\"markdownIt-Anchor\" href=\"#面向-ai-爱好者的-prompt-工程实用指南与-ai-高效对话的艺术\"></a> 🌟面向 AI 爱好者的 Prompt 工程实用指南：与 AI 高效对话的艺术</h2>\n<p>嘿，各位 AI 探索者们！</p>\n<p>想让你的 AI 伙伴（比如 DeepSeek、Gemini、GPT 等大语言模型）更懂你，输出<strong>更精准、更有创意</strong>的答案吗？那你就需要掌握“Prompt 工程”这门与 AI 沟通的艺术！这份指南浓缩了谷歌官方白皮书的精华，并结合实践经验，旨在帮你从入门到进阶，真正驾驭 Prompt。记住，Prompt 不仅仅是指令，更是<strong>引导</strong> AI 思维的钥匙，而且<strong>人人可为</strong>，只要掌握方法，你也能写出高质量的 Prompt！</p>\n<p><strong>常见应用场景</strong>：</p>\n<ul>\n<li>文案撰写（写邮件、写简历、自媒体脚本）</li>\n<li>内容总结（提炼会议纪要、总结长文）</li>\n<li>数据生成（自动生成测试数据、表格）</li>\n<li>代码辅助（补全、解释、重构代码）</li>\n<li>知识问答（查资料、科普讲解）</li>\n<li>多语言翻译（上下文保持准确）</li>\n<li>学术科研（论文润色、论文结构建议）</li>\n<li>学习助手（解题分析、考试训练）</li>\n</ul>\n<p><em>废话少说，接下来正篇开始…</em></p>\n<hr />\n<h3 id=\"一-核心理念prompt-是指令更是引导\"><a class=\"markdownIt-Anchor\" href=\"#一-核心理念prompt-是指令更是引导\"></a> 一、 核心理念：Prompt 是指令，更是引导</h3>\n<ol>\n<li><strong>什么是 Prompt？</strong> 简单说，就是你给 AI 的输入文本（有时也包括图片等），用来引导它生成你想要输出的内容。它是你与 AI 对话的起点和核心。</li>\n<li><strong>为什么重要？</strong> Prompt 的质量直接决定 AI 输出的质量。好的 Prompt 能让 AI 更准确、高效地完成任务；差的 Prompt 则可能导致结果模糊、错误百出甚至南辕北辙。</li>\n<li><strong>人人可为：</strong> 不需要你是数据科学家或算法工程师，只要理解基本原理并掌握方法，人人都能写出有效的 Prompt。但这需要不断的<strong>练习和迭代</strong>。</li>\n</ol>\n<h3 id=\"二-什么是-prompt-工程\"><a class=\"markdownIt-Anchor\" href=\"#二-什么是-prompt-工程\"></a> 二、什么是 Prompt 工程？</h3>\n<p>Prompt Engineering（提示工程）是与 AI 模型对话的艺术和技术，通过设计高质量的「提示（Prompt）」来引导 AI 更好地理解任务、输出高质量结果。就像程序员通过代码告诉计算机要做什么，提示工程师通过文字告诉 AI 要如何回应。</p>\n<p>它不仅适用于开发者，也适合普通用户，只要你想更聪明地使用 AI，Prompt 工程就是你最好的工具箱。</p>\n<hr />\n<h3 id=\"三-提示的构成与调控要素\"><a class=\"markdownIt-Anchor\" href=\"#三-提示的构成与调控要素\"></a> 三、提示的构成与调控要素</h3>\n<p>要写好 Prompt，得掌握它的构成和影响 AI 输出的关键参数：</p>\n<h4 id=\"1-基础构成prompt-的三要素\"><a class=\"markdownIt-Anchor\" href=\"#1-基础构成prompt-的三要素\"></a> 1. 基础构成：Prompt 的三要素</h4>\n<ul>\n<li>\n<p><strong>角色设定（Role）</strong>：告诉 AI 你要它扮演什么角色，例如：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">“你是一个资深网文写手”</span><br><span class=\"line\">或</span><br><span class=\"line\">“你是一名旅行博主”</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>任务描述（Task）</strong>：具体你要它完成什么，例如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">“写一封投诉信”</span><br><span class=\"line\">或</span><br><span class=\"line\">“总结以下文章要点”</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>背景信息（Context）</strong>：提供完成任务所需的上下文信息，例如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">“请使用以下数据”</span><br><span class=\"line\">或</span><br><span class=\"line\">“以下是客户的评价”</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"2-参数调控影响输出的关键因素\"><a class=\"markdownIt-Anchor\" href=\"#2-参数调控影响输出的关键因素\"></a> 2. 参数调控：影响输出的关键因素</h4>\n<p>这些参数通常在 API 调用或高级设置中调整，也适用于部分 AI 工具的高级对话设置：</p>\n<ul>\n<li><strong>最大输出长度（Max Tokens）</strong>：限制生成内容的最大字数。</li>\n<li><strong>温度值（Temperature）</strong>：控制回答的“随机程度”。0 代表最严谨（偏保守），1 趋向发散（更有创意）。</li>\n<li><strong>Top-K / Top-P（Nucleus Sampling）</strong>：控制生成内容的选择范围，Top-K 代表从前 K 个最可能词中随机选，Top-P 表示选出累积概率为 P 的词汇范围。</li>\n</ul>\n<hr />\n<h3 id=\"三-提示的常见类型与使用场景\"><a class=\"markdownIt-Anchor\" href=\"#三-提示的常见类型与使用场景\"></a> 三、提示的常见类型与使用场景</h3>\n<p>这是 Prompt 的核心技巧，让 AI 更懂你的“法术”，掌握这些技巧，能让你的 Prompt 效果倍增：</p>\n<ol>\n<li>\n<p><strong>零样本 (Zero-shot):</strong></p>\n<ul>\n<li>\n<p><strong>定义：</strong> 最简单直接的方式，只给出任务描述或问题，不给任何范例。</p>\n</li>\n<li>\n<p><strong>适用：</strong> 简单、常见的任务，或者你想看看 AI 的“原生”表现。</p>\n</li>\n<li>\n<p><em>例子：</em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">“写一首关于春天早晨的五言绝句。”</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>单样本/少样本 (One-shot / Few-shot):</strong></p>\n<ul>\n<li>\n<p><strong>定义：</strong> <strong>极其重要！</strong> 在 Prompt 里给 AI 提供一个或几个（通常 3-5 个）完整的“输入 -&gt; 输出”范例，清晰地展示你想要的格式、风格或解题思路。</p>\n</li>\n<li>\n<p><strong>优势：</strong> 大幅提升 AI 理解任务的能力和输出的准确性、一致性。特别适合需要特定格式、复杂指令或小众任务。</p>\n</li>\n<li>\n<p><strong>要点：</strong></p>\n<ul>\n<li>提供几个<strong>范例</strong>来帮助 AI 学习格式或风格</li>\n<li>范例要<strong>清晰、高质量、多样化</strong>，能代表任务的主要情况，最好包含一些<strong>边缘情况</strong>。</li>\n<li>对于<strong>分类任务</strong>，范例要<strong>混合包含不同类别</strong>，避免让 AI 误以为答案总是一类（顺序偏见）。</li>\n</ul>\n</li>\n<li>\n<p><em>例子1 (少样本-提取信息):</em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">文本：“张三，电话13812345678，邮箱zhangsan@email.com，住在北京朝阳区。”</span><br><span class=\"line\">提取：&#123;“姓名”: “张三”, “电话”: “13812345678”, “邮箱”: “zhangsan@email.com”&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">文本：“李四的邮箱是lisi@web.com，手机号是13987654321。”</span><br><span class=\"line\">提取：&#123;“姓名”: “李四”, “电话”: “13987654321”, “邮箱”: “lisi@web.com”&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">文本：“王五，住在上海浦东新区，邮箱wangwu@domain.net，电话13777778888。”</span><br><span class=\"line\">提取：?</span><br></pre></td></tr></table></figure>\n<p><em>例子2(判断情绪正/负面)</em>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">示例1：输入：天气真差！</span><br><span class=\"line\">输出：负面</span><br><span class=\"line\"></span><br><span class=\"line\">示例2：输入：我今天升职了！</span><br><span class=\"line\">输出：正面</span><br><span class=\"line\"></span><br><span class=\"line\">输入：这个产品我不太满意。</span><br><span class=\"line\">输出：？</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>角色设定Prompt、系统Prompt和上下文Prompt (System, Contextual, Role Prompting):</strong></p>\n<ul>\n<li>\n<p><strong>系统 Prompt (System Prompt):</strong> 定义 AI 的<strong>整体行为准则</strong>或<strong>宏观任务背景</strong>。通常放在对话的最开始，影响整个交互过程。</p>\n<ul>\n<li>\n<p><em>例子：</em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">“你是一个专业的、严谨的法律文书助手，回答必须基于提供的法律条文。”</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>上下文 Prompt (Contextual Prompt):</strong> 提供与<strong>当前具体任务相关</strong>的背景信息、数据或临时约束。</p>\n<ul>\n<li>\n<p><em>例子：</em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">（在上面的系统 Prompt 后）“上下文：根据《合同法》第 X 条规定，请分析以下合同是否存在违约风险：[合同文本]”</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>角色 Prompt (Role Prompt):</strong> 指定 AI 扮演的<strong>角色</strong>，影响其语气、风格、知识侧重。</p>\n<ul>\n<li>\n<p><em>例子：</em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">“请你扮演一位经验丰富的旅行向导，用幽默风趣的语言给我推荐三个适合带 5 岁小孩在北京周末游玩的地方。”</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>组合使用：</strong> 这三者经常结合使用，明确区分有助于设计意图清晰的 Prompt。</p>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"四-进阶提示策略\"><a class=\"markdownIt-Anchor\" href=\"#四-进阶提示策略\"></a> 四、进阶提示策略</h3>\n<ol>\n<li>\n<p><strong>思维链 (Chain of Thought, CoT):</strong></p>\n<ul>\n<li>\n<p><strong>定义：</strong> <strong>提升推理能力的关键！</strong> 指示 AI 在给出最终答案前，先<strong>一步一步地思考</strong>并展示推理过程。特别适用于数学计算、逻辑推理、复杂问答等任务。</p>\n</li>\n<li>\n<p><strong>如何触发：</strong> 在 Prompt 中明确要求“请逐步思考并解释你的推理过程”，或在 Few-shot 示例中完整展示“问题 -&gt; 推理步骤 -&gt; 答案”的范式。</p>\n</li>\n<li>\n<p><strong>优势：</strong> 显著提高复杂任务的准确性；过程<strong>可解释性强</strong>，便于发现错误；对模型版本变化的<strong>鲁棒性较好</strong>。</p>\n</li>\n<li>\n<p><strong>劣势：</strong> 输出内容更长，消耗更多 Token，<strong>成本更高</strong>。</p>\n</li>\n<li>\n<p><strong>实践：</strong> 常与 Few-shot 结合效果更佳。对于需要精确答案的推理任务，建议设置 <strong>Temperature=0</strong>。</p>\n</li>\n<li>\n<p><em>例子：</em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">“问题：一个篮子里有 5 个苹果，小明拿走了 2 个，妈妈又放进来了 3 个。现在篮子里有几个苹果？请一步步思考。”</span><br></pre></td></tr></table></figure>\n<p><em>预期 AI 输出类似:</em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">思考过程：1. 初始有 5 个苹果。 2. 小明拿走 2 个，剩下 5 - 2 = 3 个。 3. 妈妈放入 3 个，现有 3 + 3 = 6 个。 最终答案：现在篮子里有 6 个苹果。</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>自洽性 (Self-consistency):</strong></p>\n<ul>\n<li><strong>定义：</strong> CoT 的“加强版”。让 AI 使用 CoT 对同一个问题<strong>多次</strong>（用稍高的 Temperature，如 0.5-0.7）生成不同的推理路径和答案，最后选择**出现次数最多（“投票”最多）**的那个答案。</li>\n<li><strong>优势：</strong> 能显著提高复杂推理任务的<strong>最终准确性</strong>。</li>\n<li><strong>劣势：</strong> 计算成本<strong>更高</strong>（需要多次生成）。</li>\n</ul>\n</li>\n<li>\n<p><strong>思维树 (Tree of Thoughts, ToT):</strong></p>\n<ul>\n<li><strong>定义：</strong> CoT 的进一步泛化。允许 AI 同时探索<strong>多个不同的推理分支</strong>（像树枝一样分叉），并能评估不同分支的有效性，进行剪枝或选择更有希望的路径继续探索。</li>\n<li><strong>适用：</strong> 更适合需要<strong>探索和规划</strong>的复杂问题，例如写一篇结构复杂文章的大纲。</li>\n</ul>\n</li>\n<li>\n<p><strong>后退一步 (Step-back Prompting):</strong></p>\n<ul>\n<li>\n<p><strong>定义：</strong> 遇到具体问题时，先让 AI 思考一个与该问题相关的、但更<strong>抽象或更高层次</strong>的问题/原则，然后利用这个“后退一步”的思考结果作为上下文来解决原问题。</p>\n</li>\n<li>\n<p><strong>优势：</strong> 有助于 AI <strong>激活更广泛的相关知识</strong>，减少对表面细节的偏见，提升复杂问题的解决能力。</p>\n</li>\n<li>\n<p><em>例子：</em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">具体问题：“我应该如何为一个物理不好的高中生解释相对论？” 后退一步问题：“解释复杂科学概念给非专业人士的关键原则是什么？” -&gt; 利用原则来回答具体问题。</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>ReAct (Reason &amp; Act):</strong></p>\n<ul>\n<li><strong>定义：</strong> 让 AI 不仅能“思考”（Reason），还能“行动”（Act）。结合推理和使用<strong>外部工具</strong>（如调用搜索引擎 API 获取最新信息、调用计算器进行计算、调用代码执行器运行代码）来获取信息或执行任务，并将结果反馈给推理过程。</li>\n<li><strong>意义：</strong> 是构建<strong>智能代理 (Agent)</strong> 的基础。</li>\n<li><strong>要求：</strong> 通常需要一定的<strong>代码集成</strong>能力来实现工具调用。</li>\n</ul>\n</li>\n<li>\n<p><strong>自动 Prompt 工程 (Automatic Prompt Engineering, APE):</strong></p>\n<ul>\n<li><strong>定义：</strong> 用 AI 来<strong>生成和优化</strong> Prompt！你可以给 AI 一个初始 Prompt 或任务描述，加上一些评价标准（或好/坏 Prompt 示例），让它生成更多、更好的候选 Prompt。</li>\n<li><strong>用途：</strong> 帮你探索 Prompt 的可能性，或针对特定任务找到更优的表达方式。</li>\n</ul>\n</li>\n</ol>\n<hr />\n<h3 id=\"五-编码相关-promptai-助你变身编程高手\"><a class=\"markdownIt-Anchor\" href=\"#五-编码相关-promptai-助你变身编程高手\"></a> 五、 编码相关 Prompt：AI 助你变身编程高手</h3>\n<p>一些模型也能很好地处理代码任务：</p>\n<ol>\n<li>\n<p><strong>写代码：</strong> 描述需求，让 AI 生成代码片段（如 Bash 脚本、Python 函数）。 <em>例子：</em> <code>“写一个 Python 函数，输入一个列表，返回其中所有偶数的平方和。”</code></p>\n</li>\n<li>\n<p><strong>解释代码：</strong> 贴上代码，让 AI 解释其功能、逻辑。 <em>例子：</em> <code>“解释一下这段 Python 代码是做什么的：[代码]”</code></p>\n</li>\n<li>\n<p><strong>翻译代码：</strong> 将一种编程语言的代码转换为另一种。 <em>例子：</em> <code>“把这段 Java 代码翻译成等效的 Python 代码：[Java 代码]”</code></p>\n</li>\n<li>\n<p><strong>调试和审查代码：</strong> 贴上代码和错误信息（或无错误但求改进），让 AI 找出问题、提供修复建议或优化方案。 <em>例子：</em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">“我这段 Python 代码报错了 ‘IndexError: list index out of range’，帮我看看哪里错了，怎么改？[代码]”</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<hr />\n<h3 id=\"六-提示工程的辅助技巧\"><a class=\"markdownIt-Anchor\" href=\"#六-提示工程的辅助技巧\"></a> 六、提示工程的辅助技巧</h3>\n<h4 id=\"1-自动提示生成apeautomatic-prompt-engineering\"><a class=\"markdownIt-Anchor\" href=\"#1-自动提示生成apeautomatic-prompt-engineering\"></a> 1. 自动提示生成（APE：Automatic Prompt Engineering）</h4>\n<p>利用 AI 自动帮我们生成 Prompt，比如：</p>\n<blockquote>\n<p>“请为下面这个数据分析任务生成一个合适的 Prompt。”</p>\n</blockquote>\n<h4 id=\"2-结构化输出json-xml\"><a class=\"markdownIt-Anchor\" href=\"#2-结构化输出json-xml\"></a> 2. 结构化输出（JSON / XML）</h4>\n<p>通过让 AI 生成结构化的格式，便于后续程序处理或数据可视化。例如：</p>\n<blockquote>\n<p>“请用 JSON 格式输出下列学生成绩的统计数据。”</p>\n</blockquote>\n<h4 id=\"3-多轮对话与上下文延续\"><a class=\"markdownIt-Anchor\" href=\"#3-多轮对话与上下文延续\"></a> 3. 多轮对话与上下文延续</h4>\n<p>提示中合理引用对话历史，让 AI 更自然连贯地回答。</p>\n<hr />\n<h3 id=\"七-控制-ai-输出不只是写还要调\"><a class=\"markdownIt-Anchor\" href=\"#七-控制-ai-输出不只是写还要调\"></a> 七、控制 AI 输出：不只是写，还要“调”</h3>\n<p>在直接与模型 API 或 Vertex AI 等平台交互时，除了 Prompt 本身，你还可以调整一系列参数来“微调”AI 的行为，就像调整乐器的音色：</p>\n<ol>\n<li>\n<p><strong>输出长度 (Output Length / Max Tokens):</strong></p>\n<ul>\n<li><strong>作用：</strong> 控制 AI 生成内容的总“字数”（Token 数）。一个汉字通常算 1-2 个 Token，一个英文单词约算 1 个 Token。</li>\n<li><strong>影响：</strong> 太长可能费时费钱；太短可能意犹未尽。</li>\n<li><strong>注意：</strong> 这个设置只是<strong>截断</strong>，并不会让 AI 自动写得更精炼。如果需要简洁的回答，你需要在 Prompt 里明确指示。</li>\n</ul>\n</li>\n<li>\n<p><strong>采样控制 (Sampling Controls):</strong> AI 并非只预测一个词，而是预测一堆候选词的概率。采样控制决定它如何从这些候选词中“挑选”下一个词。</p>\n<ul>\n<li><strong>温度 (Temperature):</strong>\n<ul>\n<li><strong>作用：</strong> 控制输出的随机性/创造性。数值范围通常在 0 到 1 (或更高，但 1 以上很少用)。</li>\n<li><strong>低 T 值 (如 0.0 - 0.3):</strong> AI 会更倾向于选择概率最高的词，输出更<strong>确定、保守、符合事实</strong>。适合需要精确答案的任务，如事实问答、代码生成、遵循固定格式。<strong>Temp=0 是“贪心解码”</strong>，总是选概率最高的那个，结果最确定。</li>\n<li><strong>高 T 值 (如 0.7 - 1.0+):</strong> AI 会考虑更多概率较低的词，输出更<strong>有创意、多样化、可能带来惊喜</strong>。适合创意写作、头脑风暴、生成多种选项。但过高可能导致胡言乱语或陷入<strong>重复循环</strong>（不停重复某个词或句子）。</li>\n<li><strong>如何选：</strong> 没有绝对标准，需要根据任务尝试。</li>\n</ul>\n</li>\n<li><strong>Top-K:</strong>\n<ul>\n<li><strong>作用：</strong> AI 只在概率最高的 K 个候选词里进行选择。</li>\n<li><strong>影响：</strong> K 越小，选择范围越窄，输出越保守、可预测；K 越大，选择范围越宽，越接近纯粹按概率采样。</li>\n</ul>\n</li>\n<li><strong>Top-P (Nucleus Sampling):</strong>\n<ul>\n<li><strong>作用：</strong> AI 选择概率最高的若干个词，直到这些词的概率加起来达到 P 值，然后在这些词里进行选择。</li>\n<li><strong>影响：</strong> P 越小，选择范围越窄，输出越保守；P=1 则考虑所有概率不为零的词。Top-P 被认为比 Top-K 更灵活，因为它能根据当前预测的概率分布动态调整候选词数量。</li>\n</ul>\n</li>\n<li><strong>组合使用与起点建议：</strong>\n<ul>\n<li>通常平台会结合使用这些参数（例如，先按 Top-K/Top-P 筛选，再用 Temperature 调整概率后采样）。理解你所用平台的具体逻辑很重要。</li>\n<li><strong>通用起点建议：</strong> 可以从 <code>Temp=0.2</code>, <code>Top-P=0.95</code>, <code>Top-K=30~40</code> 开始尝试。需要创意时调高 T/P/K，需要严谨时调低 T (甚至设为 0)。</li>\n<li><strong>重要警告：</strong> 不合适的参数组合（特别是极端值）可能导致模型卡在某个模式出不来，不断重复，这是“重复循环 Bug”，需要细心调整参数解决。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<hr />\n<h3 id=\"八-prompt-设计模板建议参考\"><a class=\"markdownIt-Anchor\" href=\"#八-prompt-设计模板建议参考\"></a> 八、Prompt 设计模板（建议参考）</h3>\n<p>一个典型的 Prompt 可以包含以下几部分：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">你是一位 [角色]。</span><br><span class=\"line\">你的任务是 [目标]。</span><br><span class=\"line\">请根据以下信息完成任务：</span><br><span class=\"line\">[补充信息]</span><br><span class=\"line\"></span><br><span class=\"line\">要求：</span><br><span class=\"line\">- 语言风格：</span><br><span class=\"line\">- 输出格式：</span><br><span class=\"line\">- 长度控制：</span><br><span class=\"line\">- 给出示例：（如使用 Few-shot 可加）</span><br></pre></td></tr></table></figure>\n<hr />\n<h3 id=\"九-最佳实践精炼你的-prompt-技艺\"><a class=\"markdownIt-Anchor\" href=\"#九-最佳实践精炼你的-prompt-技艺\"></a> 九、最佳实践：精炼你的 Prompt 技艺</h3>\n<p>遵循这些原则，能让你的 Prompt 水平更上一层楼：</p>\n<ol>\n<li><strong>提供示例 (Few-shot):</strong> （再次强调！）这是最有效的实践之一，务必掌握。</li>\n<li><strong>简洁明了：</strong> Prompt 要清晰、具体、易于理解。避免复杂的术语和不必要的信息。使用明确的<strong>动词</strong>（如：生成、分类、总结、提取、翻译、重写、判断等）。</li>\n<li><strong>明确输出要求：</strong> 具体说明你想要的输出<strong>格式</strong>（JSON、列表、段落数）、<strong>风格</strong>、<strong>语气</strong>、<strong>包含/排除</strong>的内容。越具体越好。</li>\n<li><strong>指令优于约束：</strong> 尽量告诉 AI <strong>“做什么”</strong>，而不是仅仅**“不做什么”**。正面指令更清晰，不易产生歧义。当然，安全和格式的“不做什么”约束在必要时仍需使用。</li>\n<li><strong>控制长度：</strong> 合理设置最大 Token 数，或在 Prompt 中明确要求长度（如“用不超过 100 字回答”）。</li>\n<li><strong>使用变量：</strong> 对于需要重复使用或动态输入内容的 Prompt，使用占位符/变量（如 <code>&#123;city&#125;</code>, <code>&#123;user_input&#125;</code>）使 Prompt 更灵活，便于集成到应用中。</li>\n<li><strong>实验！实验！实验！</strong> Prompt 工程没有银弹，唯有不断尝试：\n<ul>\n<li>尝试不同的<strong>措辞、风格、Prompt 类型</strong> (Zero/Few-shot, CoT 等)。</li>\n<li>尝试不同的<strong>模型、不同的参数</strong> (Temperature, Top-K/P)。</li>\n<li>尝试不同的<strong>输入/输出格式</strong>（如要求 JSON 输出，甚至配合 JSON Schema 进行输入）。</li>\n</ul>\n</li>\n<li><strong>结构化输出 (JSON/XML):</strong> 对于需要提取信息、分类等任务，要求 AI 以 JSON 等结构化格式输出。\n<ul>\n<li><strong>好处：</strong> 便于程序处理，减少“幻觉”（胡编乱造），格式统一。</li>\n<li><strong>配合 <code>json-repair</code>:</strong> 输出的 JSON 可能因 Token 限制而不完整，可以使用 <code>json-repair</code> (Python 库) 等工具尝试自动修复。</li>\n</ul>\n</li>\n<li><strong>结构化输入 (JSON Schema):</strong> 对于复杂的输入信息，可以使用 JSON Schema 来定义输入数据的结构。\n<ul>\n<li><strong>好处：</strong> 帮助 AI 更好地理解输入数据的各个字段及其关系，聚焦关键信息，尤其在处理大量或复杂数据时效果显著。</li>\n</ul>\n</li>\n<li><strong>与人协作：</strong> 和同伴一起尝试、交流经验，不同思路的碰撞往往能带来惊喜。</li>\n<li><strong>适应模型更新：</strong> LLM 在不断进化，关注模型更新，及时调整你的 Prompt 策略以利用新能力。</li>\n<li><strong>详细记录：极其重要！</strong> 创建一个表格（可参考白皮书中 Table 21 模板），记录每一次尝试，至少包含：\n<ul>\n<li><strong>Prompt 名称/版本号</strong></li>\n<li><strong>目标 (Goal)</strong></li>\n<li><strong>使用的模型及版本</strong></li>\n<li><strong>配置参数 (Temperature, Top-K/P, Max Tokens)</strong></li>\n<li><strong>完整的 Prompt 文本</strong></li>\n<li><strong>输出结果 (Output) (或多个结果)</strong></li>\n<li><strong>结果评价 (OK / Not OK / 有时 OK)</strong></li>\n<li><strong>反馈/备注 (Feedback)</strong></li>\n<li><strong>(可选) 如果使用 Vertex AI Studio 等工具，保存 Prompt 的链接</strong></li>\n<li><strong>(重要) 如果是 RAG (检索增强生成) 系统，还要记录：使用的 Query、Chunk 设置、检索到的内容片段等。</strong></li>\n<li><strong>为什么记录？</strong> 帮你追踪有效策略、调试问题、对比效果、避免重复劳动，是长期进步的关键！</li>\n</ul>\n</li>\n</ol>\n<hr />\n<h2 id=\"十-结语人人都能成为提示工程师\"><a class=\"markdownIt-Anchor\" href=\"#十-结语人人都能成为提示工程师\"></a> 十、结语：人人都能成为提示工程师</h2>\n<p>提示工程是一门人人都能学会的技能，不需要懂代码，也无需 AI 背景，只要你愿意动手尝试，就能成为更聪明的 AI 使用者！</p>\n<p>从今天起，试着给 ChatGPT 或 Gemini 一个“更好的提问”，你会惊喜地发现，AI 真能“听懂人话”。</p>\n","isPage":false,"isDraft":false,"permalink":"https://blog.huazzi.site/posts/62792.html"},{"title":"","content":"{\"name\":\"Huazzi`Blog\",\"short_name\":\"Huazzi\",\"theme_color\":\"#285943\",\"background_color\":\"#285943\",\"display\":\"fullscreen\",\"scope\":\"/\",\"start_url\":\"/\",\"id\":\"/\",\"icons\":[{\"src\":\"img/siteicon/manifest-icon-192.maskable.png\",\"sizes\":\"192x192\",\"type\":\"image/png\",\"purpose\":\"any\"},{\"src\":\"img/siteicon/manifest-icon-192.maskable.png\",\"sizes\":\"192x192\",\"type\":\"image/png\",\"purpose\":\"maskable\"},{\"src\":\"img/siteicon/manifest-icon-512.maskable.png\",\"sizes\":\"512x512\",\"type\":\"image/png\",\"purpose\":\"any\"},{\"src\":\"img/siteicon/manifest-icon-512.maskable.png\",\"sizes\":\"512x512\",\"type\":\"image/png\",\"purpose\":\"maskable\"}],\"splash_pages\":null}","isPage":true,"isDraft":false,"permalink":"https://blog.huazzi.site/manifest.json"},{"title":"相册集","content":"","isPage":true,"isDraft":false,"permalink":"https://blog.huazzi.site/album/index.html"},{"title":"关于","content":"","isPage":true,"isDraft":false,"permalink":"https://blog.huazzi.site/about/index.html"},{"title":"大学生活琐碎","content":"","isPage":true,"isDraft":false,"permalink":"https://blog.huazzi.site/collegeLife/index.html"},{"title":"分类","content":"","isPage":true,"isDraft":false,"permalink":"https://blog.huazzi.site/categories/index.html"},{"title":"","content":"[{\"name\":\"青花瓷\",\"artist\":\"周杰伦\",\"url\":\"https://npm.elemecdn.com/anzhiyu-music@1.0.4/青花瓷/青花瓷.mp3\",\"cover\":\"https://y.qq.com/music/photo_new/T002R300x300M000002eFUFm2XYZ7z_2.jpg?max_age=2592000\",\"lrc\":\"https://npm.elemecdn.com/anzhiyu-music@1.0.4/青花瓷/青花瓷.lrc\"},{\"name\":\"稻香\",\"artist\":\"周杰伦\",\"url\":\"https://npm.elemecdn.com/anzhiyu-music@1.0.1/周杰伦/稻香/稻香.mp3\",\"cover\":\"https://y.qq.com/music/photo_new/T002R300x300M000002Neh8l0uciQZ_1.jpg?max_age=2592000\",\"lrc\":\"https://npm.elemecdn.com/anzhiyu-music@1.0.1/周杰伦/稻香/稻香.lrc\"},{\"name\":\"晴天\",\"artist\":\"周杰伦\",\"url\":\"https://npm.elemecdn.com/anzhiyu-music@1.0.2/晴天/晴天.mp3\",\"cover\":\"https://y.qq.com/music/photo_new/T002R300x300M000000MkMni19ClKG_3.jpg?max_age=2592000\",\"lrc\":\"https://npm.elemecdn.com/anzhiyu-music@1.0.2/晴天/晴天.lrc\"},{\"name\":\"七里香\",\"artist\":\"周杰伦\",\"url\":\"https://npm.elemecdn.com/anzhiyu-music@1.0.2/七里香/七里香.mp3\",\"cover\":\"https://y.qq.com/music/photo_new/T002R300x300M000003DFRzD192KKD_1.jpg?max_age=2592000\",\"lrc\":\"https://npm.elemecdn.com/anzhiyu-music@1.0.2/七里香/七里香.lrc\"},{\"name\":\"花海\",\"artist\":\"周杰伦\",\"url\":\"https://npm.elemecdn.com/anzhiyu-music-jay@1.0.1/花海/花海.flac\",\"cover\":\"https://y.qq.com/music/photo_new/T002R300x300M000002Neh8l0uciQZ_1.jpg?max_age=2592000\",\"lrc\":\"https://npm.elemecdn.com/anzhiyu-music-jay@1.0.1/花海/花海.lrc\"},{\"name\":\"反方向的钟\",\"artist\":\"周杰伦\",\"url\":\"https://npm.elemecdn.com/anzhiyu-music-jay@1.0.1/反方向的钟/反方向的钟.flac\",\"cover\":\"https://y.qq.com/music/photo_new/T002R300x300M000000f01724fd7TH_1.jpg?max_age=2592000\",\"lrc\":\"https://npm.elemecdn.com/anzhiyu-music-jay@1.0.1/反方向的钟/反方向的钟.lrc\"},{\"name\":\"兰亭序\",\"artist\":\"周杰伦\",\"url\":\"https://npm.elemecdn.com/anzhiyu-music@1.0.1/周杰伦/兰亭序/兰亭序.mp3\",\"cover\":\"https://y.qq.com/music/photo_new/T002R300x300M000002Neh8l0uciQZ_1.jpg?max_age=2592000\",\"lrc\":\"https://npm.elemecdn.com/anzhiyu-music@1.0.1/周杰伦/兰亭序/兰亭序.lrc\"},{\"name\":\"说好的辛福呢\",\"artist\":\"周杰伦\",\"url\":\"https://npm.elemecdn.com/anzhiyu-music@1.0.2/说好的辛福呢/说好的辛福呢.mp3\",\"cover\":\"https://y.qq.com/music/photo_new/T002R300x300M000002Neh8l0uciQZ_1.jpg?max_age=2592000\",\"lrc\":\"https://npm.elemecdn.com/anzhiyu-music@1.0.2/说好的辛福呢/说好的幸福呢.lrc\"},{\"name\":\"等你下课 (with 杨瑞代)\",\"artist\":\"周杰伦\",\"url\":\"https://npm.elemecdn.com/anzhiyu-music@1.0.1/周杰伦/等你下课/等你下课.mp3\",\"cover\":\"https://y.qq.com/music/photo_new/T002R300x300M000003bSL0v4bpKAx_1.jpg?max_age=2592000\",\"lrc\":\"https://npm.elemecdn.com/anzhiyu-music@1.0.1/周杰伦/等你下课/等你下课.lrc\"},{\"name\":\"我落泪情绪零碎\",\"artist\":\"周杰伦\",\"url\":\"https://npm.elemecdn.com/anzhiyu-music@1.0.2/我落泪情绪零碎/我落泪情绪零碎.mp3\",\"cover\":\"https://y.qq.com/music/photo_new/T002R300x300M000000bviBl4FjTpO_1.jpg?max_age=2592000\",\"lrc\":\"https://npm.elemecdn.com/anzhiyu-music@1.0.2/我落泪情绪零碎/我落泪情绪零碎.lrc\"},{\"name\":\"听妈妈的话\",\"artist\":\"周杰伦\",\"url\":\"https://npm.elemecdn.com/anzhiyu-music@1.0.2/听妈妈的话/听妈妈的话.mp3\",\"cover\":\"https://y.qq.com/music/photo_new/T002R300x300M000002jLGWe16Tf1H_1.jpg?max_age=2592000\",\"lrc\":\"https://npm.elemecdn.com/anzhiyu-music@1.0.2/听妈妈的话/听妈妈的话.lrc\"},{\"name\":\"明明就\",\"artist\":\"周杰伦\",\"url\":\"https://npm.elemecdn.com/anzhiyu-music-jay@1.0.1/明明就/明明就.flac\",\"cover\":\"https://y.qq.com/music/photo_new/T002R300x300M000003Ow85E3pnoqi_1.jpg?max_age=2592000\",\"lrc\":\"https://npm.elemecdn.com/anzhiyu-music-jay@1.0.1/明明就/明明就.lrc\"},{\"name\":\"我是如此相信\",\"artist\":\"周杰伦\",\"url\":\"https://npm.elemecdn.com/anzhiyu-music-jay@1.0.1/我是如此相信/我是如此相信.flac\",\"cover\":\"https://y.qq.com/music/photo_new/T002R300x300M000001hGx1Z0so1YX_1.jpg?max_age=2592000\",\"lrc\":\"https://npm.elemecdn.com/anzhiyu-music-jay@1.0.1/我是如此相信/我是如此相信.lrc\"},{\"name\":\"发如雪\",\"artist\":\"周杰伦\",\"url\":\"https://npm.elemecdn.com/anzhiyu-music@1.0.3/发如雪/发如雪.mp3\",\"cover\":\"https://y.qq.com/music/photo_new/T002R300x300M0000024bjiL2aocxT_3.jpg?max_age=2592000\",\"lrc\":\"https://npm.elemecdn.com/anzhiyu-music@1.0.3/发如雪/发如雪.lrc\"},{\"name\":\"以父之名\",\"artist\":\"周杰伦\",\"url\":\"https://npm.elemecdn.com/anzhiyu-music@1.0.3/以父之名/以父之名.mp3\",\"cover\":\"https://y.qq.com/music/photo_new/T002R300x300M000000MkMni19ClKG_3.jpg?max_age=2592000\",\"lrc\":\"https://npm.elemecdn.com/anzhiyu-music@1.0.3/以父之名/以父之名.lrc\"},{\"name\":\"园游会\",\"artist\":\"周杰伦\",\"url\":\"https://npm.elemecdn.com/anzhiyu-music@1.0.3/园游会/园游会.flac\",\"cover\":\"https://y.qq.com/music/photo_new/T002R300x300M000003DFRzD192KKD_1.jpg?max_age=2592000\",\"lrc\":\"https://npm.elemecdn.com/anzhiyu-music@1.0.3/园游会/园游会.lrc\"},{\"name\":\"本草纲目\",\"artist\":\"周杰伦\",\"url\":\"https://npm.elemecdn.com/anzhiyu-music@1.0.4/本草纲目/本草纲目.mp3\",\"cover\":\"https://y.qq.com/music/photo_new/T002R300x300M000002jLGWe16Tf1H_1.jpg?max_age=2592000\",\"lrc\":\"https://npm.elemecdn.com/anzhiyu-music@1.0.4/本草纲目/本草纲目.lrc\"},{\"name\":\"龙卷风\",\"artist\":\"周杰伦\",\"url\":\"https://npm.elemecdn.com/anzhiyu-music@1.0.4/龙卷风/龙卷风.mp3\",\"cover\":\"https://y.qq.com/music/photo_new/T002R300x300M000000f01724fd7TH_1.jpg?max_age=2592000\",\"lrc\":\"https://npm.elemecdn.com/anzhiyu-music@1.0.4/龙卷风/龙卷风.lrc\"}]","isPage":true,"isDraft":false,"permalink":"https://blog.huazzi.site/json/music.json"},{"title":"标签","content":"","isPage":true,"isDraft":false,"permalink":"https://blog.huazzi.site/tags/index.html"},{"title":"音乐馆","content":"","isPage":true,"isDraft":false,"permalink":"https://blog.huazzi.site/music/index.html"},{"title":"link","content":"","isPage":true,"isDraft":false,"permalink":"https://blog.huazzi.site/link/index.html"}]